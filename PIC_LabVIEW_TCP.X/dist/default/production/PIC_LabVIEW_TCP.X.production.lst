

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 13:12:28 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318                           
   319                           	psect	strings
   320  1000                     __pstrings:	
   321  1000                     stringtab:	
   322  1000                     __stringtab:	
   323                           
   324                           ;	String table - string pointers are 1 byte each
   325  1000  1BFF               	btfsc	btemp+1,7
   326  1001  280A               	ljmp	stringcode
   327  1002  1383               	bcf	3,7
   328  1003  187F               	btfsc	btemp+1,0
   329  1004  1783               	bsf	3,7
   330  1005  0800               	movf	0,w
   331  1006  0A84               	incf	4,f
   332  1007  1903               	skipnz
   333  1008  0AFF               	incf	btemp+1,f
   334  1009  0008               	return
   335  100A                     stringcode:	
   336  100A                     stringdir:	
   337  100A  3010               	movlw	high stringdir
   338  100B  008A               	movwf	10
   339  100C  0804               	movf	4,w
   340  100D  0A84               	incf	4,f
   341  100E  0782               	addwf	2,f
   342  100F                     __stringbase:	
   343  100F  3400               	retlw	0
   344  1010                     __end_of__stringtab:	
   345  1010                     __powers_:	
   346  1010  3400               	retlw	0
   347  1011  3400               	retlw	0
   348  1012  3480               	retlw	128
   349  1013  343F               	retlw	63
   350  1014  3400               	retlw	0
   351  1015  3400               	retlw	0
   352  1016  3420               	retlw	32
   353  1017  3441               	retlw	65
   354  1018  3400               	retlw	0
   355  1019  3400               	retlw	0
   356  101A  34C8               	retlw	200
   357  101B  3442               	retlw	66
   358  101C  3400               	retlw	0
   359  101D  3400               	retlw	0
   360  101E  347A               	retlw	122
   361  101F  3444               	retlw	68
   362  1020  3400               	retlw	0
   363  1021  3440               	retlw	64
   364  1022  341C               	retlw	28
   365  1023  3446               	retlw	70
   366  1024  3400               	retlw	0
   367  1025  3450               	retlw	80
   368  1026  34C3               	retlw	195
   369  1027  3447               	retlw	71
   370  1028  3400               	retlw	0
   371  1029  3424               	retlw	36
   372  102A  3474               	retlw	116
   373  102B  3449               	retlw	73
   374  102C  3480               	retlw	128
   375  102D  3496               	retlw	150
   376  102E  3418               	retlw	24
   377  102F  344B               	retlw	75
   378  1030  3420               	retlw	32
   379  1031  34BC               	retlw	188
   380  1032  34BE               	retlw	190
   381  1033  344C               	retlw	76
   382  1034  3428               	retlw	40
   383  1035  346B               	retlw	107
   384  1036  346E               	retlw	110
   385  1037  344E               	retlw	78
   386  1038  34F9               	retlw	249
   387  1039  3402               	retlw	2
   388  103A  3415               	retlw	21
   389  103B  3450               	retlw	80
   390  103C  34EC               	retlw	236
   391  103D  3478               	retlw	120
   392  103E  34AD               	retlw	173
   393  103F  3460               	retlw	96
   394  1040  34CA               	retlw	202
   395  1041  34F2               	retlw	242
   396  1042  3449               	retlw	73
   397  1043  3471               	retlw	113
   398  1044                     __end_of__powers_:	
   399  1044                     __npowers_:	
   400  1044  3400               	retlw	0
   401  1045  3400               	retlw	0
   402  1046  3480               	retlw	128
   403  1047  343F               	retlw	63
   404  1048  34CD               	retlw	205
   405  1049  34CC               	retlw	204
   406  104A  34CC               	retlw	204
   407  104B  343D               	retlw	61
   408  104C  340A               	retlw	10
   409  104D  34D7               	retlw	215
   410  104E  3423               	retlw	35
   411  104F  343C               	retlw	60
   412  1050  346F               	retlw	111
   413  1051  3412               	retlw	18
   414  1052  3483               	retlw	131
   415  1053  343A               	retlw	58
   416  1054  3417               	retlw	23
   417  1055  34B7               	retlw	183
   418  1056  34D1               	retlw	209
   419  1057  3438               	retlw	56
   420  1058  34AC               	retlw	172
   421  1059  34C5               	retlw	197
   422  105A  3427               	retlw	39
   423  105B  3437               	retlw	55
   424  105C  34BD               	retlw	189
   425  105D  3437               	retlw	55
   426  105E  3486               	retlw	134
   427  105F  3435               	retlw	53
   428  1060  3495               	retlw	149
   429  1061  34BF               	retlw	191
   430  1062  34D6               	retlw	214
   431  1063  3433               	retlw	51
   432  1064  3477               	retlw	119
   433  1065  34CC               	retlw	204
   434  1066  342B               	retlw	43
   435  1067  3432               	retlw	50
   436  1068  345F               	retlw	95
   437  1069  3470               	retlw	112
   438  106A  3489               	retlw	137
   439  106B  3430               	retlw	48
   440  106C  34FF               	retlw	255
   441  106D  34E6               	retlw	230
   442  106E  34DB               	retlw	219
   443  106F  342E               	retlw	46
   444  1070  3408               	retlw	8
   445  1071  34E5               	retlw	229
   446  1072  343C               	retlw	60
   447  1073  341E               	retlw	30
   448  1074  3460               	retlw	96
   449  1075  3442               	retlw	66
   450  1076  34A2               	retlw	162
   451  1077  340D               	retlw	13
   452  1078                     __end_of__npowers_:	
   453  1078                     _dpowers:	
   454  1078  3401               	retlw	1
   455  1079  3400               	retlw	0
   456  107A  3400               	retlw	0
   457  107B  3400               	retlw	0
   458  107C  340A               	retlw	10
   459  107D  3400               	retlw	0
   460  107E  3400               	retlw	0
   461  107F  3400               	retlw	0
   462  1080  3464               	retlw	100
   463  1081  3400               	retlw	0
   464  1082  3400               	retlw	0
   465  1083  3400               	retlw	0
   466  1084  34E8               	retlw	232
   467  1085  3403               	retlw	3
   468  1086  3400               	retlw	0
   469  1087  3400               	retlw	0
   470  1088  3410               	retlw	16
   471  1089  3427               	retlw	39
   472  108A  3400               	retlw	0
   473  108B  3400               	retlw	0
   474  108C  34A0               	retlw	160
   475  108D  3486               	retlw	134
   476  108E  3401               	retlw	1
   477  108F  3400               	retlw	0
   478  1090  3440               	retlw	64
   479  1091  3442               	retlw	66
   480  1092  340F               	retlw	15
   481  1093  3400               	retlw	0
   482  1094  3480               	retlw	128
   483  1095  3496               	retlw	150
   484  1096  3498               	retlw	152
   485  1097  3400               	retlw	0
   486  1098  3400               	retlw	0
   487  1099  34E1               	retlw	225
   488  109A  34F5               	retlw	245
   489  109B  3405               	retlw	5
   490  109C  3400               	retlw	0
   491  109D  34CA               	retlw	202
   492  109E  349A               	retlw	154
   493  109F  343B               	retlw	59
   494  10A0                     __end_of_dpowers:	
   495  0010                     _T1CON	set	16
   496  000F                     _TMR1H	set	15
   497  000E                     _TMR1L	set	14
   498  0008                     _PORTDbits	set	8
   499  001E                     _ADRESH	set	30
   500  001F                     _ADCON0	set	31
   501  000C                     _PIR1bits	set	12
   502  0018                     _RCSTAbits	set	24
   503  001A                     _RCREG	set	26
   504  0019                     _TXREG	set	25
   505  000B                     _INTCONbits	set	11
   506  008C                     _PIE1	set	140
   507  009E                     _ADRESL	set	158
   508  009F                     _ADCON1	set	159
   509  0085                     _TRISA	set	133
   510  008C                     _PIE1bits	set	140
   511  0098                     _TXSTAbits	set	152
   512  0099                     _SPBRG	set	153
   513  008F                     _OSCCON	set	143
   514  0087                     _TRISCbits	set	135
   515  0088                     _TRISD	set	136
   516  0188                     _ANSEL	set	392
   517  0187                     _BAUDCTLbits	set	391
   518  10A0                     STR_1:	
   519  10A0  3454               	retlw	84	;'T'
   520  10A1  3465               	retlw	101	;'e'
   521  10A2  346D               	retlw	109	;'m'
   522  10A3  3470               	retlw	112	;'p'
   523  10A4  3465               	retlw	101	;'e'
   524  10A5  3472               	retlw	114	;'r'
   525  10A6  3461               	retlw	97	;'a'
   526  10A7  3474               	retlw	116	;'t'
   527  10A8  3475               	retlw	117	;'u'
   528  10A9  3472               	retlw	114	;'r'
   529  10AA  3461               	retlw	97	;'a'
   530  10AB  3400               	retlw	0
   531  10AC                     STR_2:	
   532  10AC  3425               	retlw	37	;'%'
   533  10AD  3466               	retlw	102	;'f'
   534  10AE  340D               	retlw	13
   535  10AF  3400               	retlw	0
   536                           
   537                           ; #config settings
   538  0000                     
   539                           	psect	cinit
   540  07F3                     start_initialization:	
   541  07F3                     __initialization:	
   542                           
   543                           ; Clear objects allocated to BANK1
   544  07F3  1383               	bcf	3,7	;select IRP bank0
   545  07F4  30C7               	movlw	low __pbssBANK1
   546  07F5  0084               	movwf	4
   547  07F6  30E4               	movlw	low (__pbssBANK1+29)
   548  07F7  160A  158A  2305  120A  118A  	fcall	clear_ram0
   549  07FC                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  07FC                     __end_of__initialization:	
   553  07FC  0183               	clrf	3
   554  07FD  160A  158A  2F12   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssBANK1
   557  00C7                     __pbssBANK1:	
   558  00C7                     _rc_data:	
   559  00C7                     	ds	10
   560  00D1                     _scaled_temperature:	
   561  00D1                     	ds	4
   562  00D5                     _scaled_float_data:	
   563  00D5                     	ds	4
   564  00D9                     _int_data:	
   565  00D9                     	ds	2
   566  00DB                     _char_data:	
   567  00DB                     	ds	9
   568                           
   569                           	psect	clrtext
   570  1B05                     clear_ram0:	
   571                           ;	Called with FSR containing the base address, and
   572                           ;	W with the last address+1
   573                           
   574  1B05  0064               	clrwdt	;clear the watchdog before getting into this loop
   575  1B06                     clrloop0:	
   576  1B06  0180               	clrf	0	;clear RAM location pointed to by FSR
   577  1B07  0A84               	incf	4,f	;increment pointer
   578  1B08  0604               	xorwf	4,w	;XOR with final address
   579  1B09  1903               	btfsc	3,2	;have we reached the end yet?
   580  1B0A  3400               	retlw	0	;all done for this memory range, return
   581  1B0B  0604               	xorwf	4,w	;XOR again to restore value
   582  1B0C  2B06               	goto	clrloop0	;do the next byte
   583                           
   584                           	psect	cstackBANK1
   585  00A0                     __pcstackBANK1:	
   586  00A0                     ?_sprintf:	
   587  00A0                     sprintf@f:	
   588                           ; 2 bytes @ 0x0
   589                           
   590                           
   591                           ; 1 bytes @ 0x0
   592  00A0                     	ds	5
   593  00A5                     ??_sprintf:	
   594                           
   595                           ; 1 bytes @ 0x5
   596  00A5                     	ds	5
   597  00AA                     _sprintf$1079:	
   598                           
   599                           ; 4 bytes @ 0xA
   600  00AA                     	ds	4
   601  00AE                     sprintf@ap:	
   602                           
   603                           ; 1 bytes @ 0xE
   604  00AE                     	ds	1
   605  00AF                     sprintf@flag:	
   606                           
   607                           ; 2 bytes @ 0xF
   608  00AF                     	ds	2
   609  00B1                     sprintf@prec:	
   610                           
   611                           ; 2 bytes @ 0x11
   612  00B1                     	ds	2
   613  00B3                     sprintf@val:	
   614                           
   615                           ; 4 bytes @ 0x13
   616  00B3                     	ds	4
   617  00B7                     sprintf@eexp:	
   618                           
   619                           ; 2 bytes @ 0x17
   620  00B7                     	ds	2
   621  00B9                     sprintf@tmpval:	
   622                           
   623                           ; 4 bytes @ 0x19
   624  00B9                     	ds	4
   625  00BD                     sprintf@sp:	
   626                           
   627                           ; 1 bytes @ 0x1D
   628  00BD                     	ds	1
   629  00BE                     sprintf@fval:	
   630                           
   631                           ; 4 bytes @ 0x1E
   632  00BE                     	ds	4
   633  00C2                     sprintf@c:	
   634                           
   635                           ; 1 bytes @ 0x22
   636  00C2                     	ds	1
   637  00C3                     Read_ADC@i:	
   638                           
   639                           ; 2 bytes @ 0x23
   640  00C3                     	ds	2
   641  00C5                     main@i:	
   642                           
   643                           ; 2 bytes @ 0x25
   644  00C5                     	ds	2
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:	
   648  0070                     ?___fleq:	
   649  0070                     ?___flge:	
   650                           ; 1 bit 
   651                           
   652  0070                     ?_Init_Clock:	
   653                           ; 1 bit 
   654                           
   655  0070                     ??_Init_Clock:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_Init_ADC:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_Init_ADC:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Init_USART:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_Init_USART:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_Lcd_Start:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Lcd_Clear:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_Read_ADC:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Send_String_USART:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Timer_Delay:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_Timer_Delay:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_Send_Char_USART:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_Send_Char_USART:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Lcd_SetBit:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_Lcd_SetBit:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Lcd_Cmd:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_Lcd_Print_Char:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?__Umul8_16:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_main:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     ?___wmul:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ?___awmod:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     ?___lwmod:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     ?__tdiv_to_l_:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ?__div_to_l_:	
   725                           ; 4 bytes @ 0x0
   726                           
   727  0070                     ?___lldiv:	
   728                           ; 4 bytes @ 0x0
   729                           
   730  0070                     ?___flneg:	
   731                           ; 4 bytes @ 0x0
   732                           
   733  0070                     ?___llmod:	
   734                           ; 4 bytes @ 0x0
   735                           
   736  0070                     ?___xxtofl:	
   737                           ; 4 bytes @ 0x0
   738                           
   739  0070                     Send_Char_USART@character:	
   740                           ; 4 bytes @ 0x0
   741                           
   742  0070                     Lcd_SetBit@data_bit:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     __Umul8_16@multiplicand:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ___wmul@multiplier:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ___awmod@divisor:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     ___lwmod@divisor:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ___lldiv@divisor:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0070                     __div_to_l_@f1:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0070                     ___fleq@ff1:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0070                     ___flge@ff1:	
   767                           ; 4 bytes @ 0x0
   768                           
   769  0070                     ___flneg@f1:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0070                     __tdiv_to_l_@f1:	
   773                           ; 4 bytes @ 0x0
   774                           
   775  0070                     ___llmod@divisor:	
   776                           ; 4 bytes @ 0x0
   777                           
   778  0070                     ___xxtofl@val:	
   779                           ; 4 bytes @ 0x0
   780                           
   781                           
   782                           ; 4 bytes @ 0x0
   783  0070                     	ds	1
   784  0071                     ??_Send_String_USART:	
   785  0071                     ??_Lcd_Cmd:	
   786                           ; 1 bytes @ 0x1
   787                           
   788  0071                     ??_Lcd_Print_Char:	
   789                           ; 1 bytes @ 0x1
   790                           
   791  0071                     Lcd_Cmd@a:	
   792                           ; 1 bytes @ 0x1
   793                           
   794                           
   795                           ; 1 bytes @ 0x1
   796  0071                     	ds	1
   797  0072                     ??_Lcd_Start:	
   798  0072                     ??_Lcd_Clear:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     ?_Lcd_Set_Cursor:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     ??__Umul8_16:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0072                     Lcd_Set_Cursor@column:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0072                     Lcd_Print_Char@Lower_Nibble:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0072                     Send_String_USART@i:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0072                     ___wmul@multiplicand:	
   817                           ; 2 bytes @ 0x2
   818                           
   819  0072                     ___awmod@dividend:	
   820                           ; 2 bytes @ 0x2
   821                           
   822  0072                     ___lwmod@dividend:	
   823                           ; 2 bytes @ 0x2
   824                           
   825                           
   826                           ; 2 bytes @ 0x2
   827  0072                     	ds	1
   828  0073                     ??_Lcd_Set_Cursor:	
   829  0073                     Lcd_Print_Char@Upper_Nibble:	
   830                           ; 1 bytes @ 0x3
   831                           
   832                           
   833                           ; 1 bytes @ 0x3
   834  0073                     	ds	1
   835  0074                     ??___wmul:	
   836  0074                     ??___awmod:	
   837                           ; 1 bytes @ 0x4
   838                           
   839  0074                     ??___flneg:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0074                     ??___lwmod:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0074                     ??___xxtofl:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0074                     Send_String_USART@str:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0074                     Lcd_Print_Char@data:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0074                     ___wmul@product:	
   855                           ; 1 bytes @ 0x4
   856                           
   857  0074                     __Umul8_16@product:	
   858                           ; 2 bytes @ 0x4
   859                           
   860  0074                     ___lldiv@dividend:	
   861                           ; 2 bytes @ 0x4
   862                           
   863  0074                     __div_to_l_@f2:	
   864                           ; 4 bytes @ 0x4
   865                           
   866  0074                     ___fleq@ff2:	
   867                           ; 4 bytes @ 0x4
   868                           
   869  0074                     ___flge@ff2:	
   870                           ; 4 bytes @ 0x4
   871                           
   872  0074                     __tdiv_to_l_@f2:	
   873                           ; 4 bytes @ 0x4
   874                           
   875  0074                     ___llmod@dividend:	
   876                           ; 4 bytes @ 0x4
   877                           
   878                           
   879                           ; 4 bytes @ 0x4
   880  0074                     	ds	1
   881  0075                     ?_Lcd_Print_String:	
   882  0075                     Lcd_Set_Cursor@row:	
   883                           ; 1 bytes @ 0x5
   884                           
   885  0075                     ___awmod@counter:	
   886                           ; 1 bytes @ 0x5
   887                           
   888  0075                     ___lwmod@counter:	
   889                           ; 1 bytes @ 0x5
   890                           
   891  0075                     Lcd_Print_String@a:	
   892                           ; 1 bytes @ 0x5
   893                           
   894                           
   895                           ; 2 bytes @ 0x5
   896  0075                     	ds	1
   897  0076                     ?___lwdiv:	
   898  0076                     Lcd_Set_Cursor@z:	
   899                           ; 2 bytes @ 0x6
   900                           
   901  0076                     ___awmod@sign:	
   902                           ; 1 bytes @ 0x6
   903                           
   904  0076                     ___lwdiv@divisor:	
   905                           ; 1 bytes @ 0x6
   906                           
   907  0076                     __Umul8_16@word_mpld:	
   908                           ; 2 bytes @ 0x6
   909                           
   910                           
   911                           ; 2 bytes @ 0x6
   912  0076                     	ds	1
   913  0077                     ??_Lcd_Print_String:	
   914  0077                     ?___awdiv:	
   915                           ; 1 bytes @ 0x7
   916                           
   917  0077                     Lcd_Set_Cursor@y:	
   918                           ; 2 bytes @ 0x7
   919                           
   920  0077                     ___awdiv@divisor:	
   921                           ; 1 bytes @ 0x7
   922                           
   923                           
   924                           ; 2 bytes @ 0x7
   925  0077                     	ds	1
   926  0078                     ??__tdiv_to_l_:	
   927  0078                     ??__div_to_l_:	
   928                           ; 1 bytes @ 0x8
   929                           
   930  0078                     ??___lldiv:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0078                     ??___fleq:	
   934                           ; 1 bytes @ 0x8
   935                           
   936  0078                     ??___flge:	
   937                           ; 1 bytes @ 0x8
   938                           
   939  0078                     ??___llmod:	
   940                           ; 1 bytes @ 0x8
   941                           
   942  0078                     Lcd_Set_Cursor@temp:	
   943                           ; 1 bytes @ 0x8
   944                           
   945  0078                     ___xxtofl@sign:	
   946                           ; 1 bytes @ 0x8
   947                           
   948  0078                     __Umul8_16@multiplier:	
   949                           ; 1 bytes @ 0x8
   950                           
   951  0078                     ___lwdiv@dividend:	
   952                           ; 1 bytes @ 0x8
   953                           
   954                           
   955                           ; 2 bytes @ 0x8
   956  0078                     	ds	1
   957  0079                     ___llmod@counter:	
   958  0079                     ___xxtofl@exp:	
   959                           ; 1 bytes @ 0x9
   960                           
   961  0079                     ___awdiv@dividend:	
   962                           ; 1 bytes @ 0x9
   963                           
   964  0079                     ___lldiv@quotient:	
   965                           ; 2 bytes @ 0x9
   966                           
   967                           
   968                           ; 4 bytes @ 0x9
   969  0079                     	ds	1
   970  007A                     ??___lwdiv:	
   971  007A                     Lcd_Print_String@i:	
   972                           ; 1 bytes @ 0xA
   973                           
   974  007A                     ___xxtofl@arg:	
   975                           ; 2 bytes @ 0xA
   976                           
   977                           
   978                           ; 4 bytes @ 0xA
   979  007A                     	ds	1
   980  007B                     ??___awdiv:	
   981  007B                     ___lwdiv@quotient:	
   982                           ; 1 bytes @ 0xB
   983                           
   984                           
   985                           ; 2 bytes @ 0xB
   986  007B                     	ds	2
   987  007D                     ___lldiv@counter:	
   988  007D                     ___lwdiv@counter:	
   989                           ; 1 bytes @ 0xD
   990                           
   991                           
   992                           ; 1 bytes @ 0xD
   993  007D                     	ds	1
   994  007E                     ??_main:	
   995  007E                     ??___flsub:	
   996                           ; 1 bytes @ 0xE
   997                           
   998                           
   999                           	psect	cstackBANK0
  1000  0020                     __pcstackBANK0:	
  1001                           ; 1 bytes @ 0xE
  1002                           
  1003  0020                     ___awdiv@counter:	
  1004  0020                     __div_to_l_@quot:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0020                     __tdiv_to_l_@quot:	
  1008                           ; 4 bytes @ 0x0
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x0
  1012  0020                     	ds	1
  1013  0021                     ___awdiv@sign:	
  1014                           
  1015                           ; 1 bytes @ 0x1
  1016  0021                     	ds	1
  1017  0022                     ___awdiv@quotient:	
  1018                           
  1019                           ; 2 bytes @ 0x2
  1020  0022                     	ds	2
  1021  0024                     ?___flmul:	
  1022  0024                     __div_to_l_@cntr:	
  1023                           ; 4 bytes @ 0x4
  1024                           
  1025  0024                     __tdiv_to_l_@cntr:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  0024                     ___flmul@b:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x4
  1033  0024                     	ds	1
  1034  0025                     __div_to_l_@exp1:	
  1035  0025                     __tdiv_to_l_@exp1:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0x5
  1040  0025                     	ds	3
  1041  0028                     ___flmul@a:	
  1042                           
  1043                           ; 4 bytes @ 0x8
  1044  0028                     	ds	4
  1045  002C                     ??___flmul:	
  1046                           
  1047                           ; 1 bytes @ 0xC
  1048  002C                     	ds	5
  1049  0031                     ___flmul@sign:	
  1050                           
  1051                           ; 1 bytes @ 0x11
  1052  0031                     	ds	1
  1053  0032                     ___flmul@grs:	
  1054                           
  1055                           ; 4 bytes @ 0x12
  1056  0032                     	ds	4
  1057  0036                     ___flmul@aexp:	
  1058                           
  1059                           ; 1 bytes @ 0x16
  1060  0036                     	ds	1
  1061  0037                     ___flmul@bexp:	
  1062                           
  1063                           ; 1 bytes @ 0x17
  1064  0037                     	ds	1
  1065  0038                     ___flmul@prod:	
  1066                           
  1067                           ; 4 bytes @ 0x18
  1068  0038                     	ds	4
  1069  003C                     ___flmul@temp:	
  1070                           
  1071                           ; 2 bytes @ 0x1C
  1072  003C                     	ds	2
  1073  003E                     ?_fround:	
  1074  003E                     ?_scale:	
  1075                           ; 4 bytes @ 0x1E
  1076                           
  1077  003E                     ?___fldiv:	
  1078                           ; 4 bytes @ 0x1E
  1079                           
  1080  003E                     ___fldiv@a:	
  1081                           ; 4 bytes @ 0x1E
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x1E
  1085  003E                     	ds	4
  1086  0042                     ??_fround:	
  1087  0042                     ??_scale:	
  1088                           ; 1 bytes @ 0x22
  1089                           
  1090  0042                     ___fldiv@b:	
  1091                           ; 1 bytes @ 0x22
  1092                           
  1093                           
  1094                           ; 4 bytes @ 0x22
  1095  0042                     	ds	4
  1096  0046                     ??___fldiv:	
  1097                           
  1098                           ; 1 bytes @ 0x26
  1099  0046                     	ds	3
  1100  0049                     _fround$1077:	
  1101                           
  1102                           ; 4 bytes @ 0x29
  1103  0049                     	ds	2
  1104  004B                     ___fldiv@rem:	
  1105                           
  1106                           ; 4 bytes @ 0x2B
  1107  004B                     	ds	1
  1108  004C                     _scale$1078:	
  1109                           
  1110                           ; 4 bytes @ 0x2C
  1111  004C                     	ds	1
  1112  004D                     _fround$1076:	
  1113                           
  1114                           ; 4 bytes @ 0x2D
  1115  004D                     	ds	2
  1116  004F                     ___fldiv@sign:	
  1117                           
  1118                           ; 1 bytes @ 0x2F
  1119  004F                     	ds	1
  1120  0050                     scale@scl:	
  1121  0050                     ___fldiv@new_exp:	
  1122                           ; 1 bytes @ 0x30
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x30
  1126  0050                     	ds	1
  1127  0051                     ?___fltol:	
  1128  0051                     fround@prec:	
  1129                           ; 4 bytes @ 0x31
  1130                           
  1131  0051                     ___fltol@f1:	
  1132                           ; 1 bytes @ 0x31
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x31
  1136  0051                     	ds	1
  1137  0052                     ?___fladd:	
  1138  0052                     ___fladd@b:	
  1139                           ; 4 bytes @ 0x32
  1140                           
  1141  0052                     ___fldiv@grs:	
  1142                           ; 4 bytes @ 0x32
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x32
  1146  0052                     	ds	3
  1147  0055                     ??___fltol:	
  1148                           
  1149                           ; 1 bytes @ 0x35
  1150  0055                     	ds	1
  1151  0056                     ___fldiv@bexp:	
  1152  0056                     ___fladd@a:	
  1153                           ; 1 bytes @ 0x36
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x36
  1157  0056                     	ds	1
  1158  0057                     ___fldiv@aexp:	
  1159                           
  1160                           ; 1 bytes @ 0x37
  1161  0057                     	ds	3
  1162  005A                     ??___fladd:	
  1163  005A                     ___fltol@sign1:	
  1164                           ; 1 bytes @ 0x3A
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0x3A
  1168  005A                     	ds	1
  1169  005B                     ___fltol@exp1:	
  1170                           
  1171                           ; 1 bytes @ 0x3B
  1172  005B                     	ds	7
  1173  0062                     ___fladd@signs:	
  1174                           
  1175                           ; 1 bytes @ 0x42
  1176  0062                     	ds	1
  1177  0063                     ___fladd@aexp:	
  1178                           
  1179                           ; 1 bytes @ 0x43
  1180  0063                     	ds	1
  1181  0064                     ___fladd@bexp:	
  1182                           
  1183                           ; 1 bytes @ 0x44
  1184  0064                     	ds	1
  1185  0065                     ___fladd@grs:	
  1186                           
  1187                           ; 1 bytes @ 0x45
  1188  0065                     	ds	1
  1189  0066                     ?___flsub:	
  1190  0066                     ___flsub@a:	
  1191                           ; 4 bytes @ 0x46
  1192                           
  1193                           
  1194                           ; 4 bytes @ 0x46
  1195  0066                     	ds	4
  1196  006A                     ___flsub@b:	
  1197                           
  1198                           ; 4 bytes @ 0x4A
  1199  006A                     	ds	4
  1200  006E                     ??_Read_ADC:	
  1201                           
  1202                           ; 1 bytes @ 0x4E
  1203  006E                     	ds	1
  1204                           
  1205                           	psect	maintext
  1206  1F12                     __pmaintext:	
  1207 ;;
  1208 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1209 ;;
  1210 ;; *************** function _main *****************
  1211 ;; Defined at:
  1212 ;;		line 56 in file "main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  i               2   37[BANK1 ] int 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2   72[None  ] int 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : B00/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       2       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       2       0       0
  1230 ;;Total ram usage:        2 bytes
  1231 ;; Hardware stack levels required when called:    5
  1232 ;; This function calls:
  1233 ;;		_Init_ADC
  1234 ;;		_Init_Clock
  1235 ;;		_Init_USART
  1236 ;;		_Lcd_Clear
  1237 ;;		_Lcd_Print_String
  1238 ;;		_Lcd_Set_Cursor
  1239 ;;		_Lcd_Start
  1240 ;;		_Read_ADC
  1241 ;;		_Send_String_USART
  1242 ;;		_Timer_Delay
  1243 ;; This function is called by:
  1244 ;;		Startup code after reset
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _main
  1250  1F12                     _main:	
  1251  1F12                     l3501:	
  1252                           ;incstack = 0
  1253                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1254                           
  1255                           
  1256                           ;main.c: 59:         TRISD = 0x00;
  1257  1F12  1683               	bsf	3,5	;RP0=1, select bank1
  1258  1F13  1303               	bcf	3,6	;RP1=0, select bank1
  1259  1F14  0188               	clrf	8	;volatile
  1260  1F15                     l3503:	
  1261                           
  1262                           ;main.c: 60:         TRISCbits.TRISC7 =1;
  1263  1F15  1787               	bsf	7,7	;volatile
  1264  1F16                     l3505:	
  1265                           
  1266                           ;main.c: 62:         Init_Clock();
  1267  1F16  160A  158A  2300  160A  158A  	fcall	_Init_Clock
  1268  1F1B                     l3507:	
  1269                           
  1270                           ;main.c: 63:         Init_ADC();
  1271  1F1B  160A  158A  2330  160A  158A  	fcall	_Init_ADC
  1272  1F20                     l3509:	
  1273                           
  1274                           ;main.c: 64:         Init_USART();
  1275  1F20  160A  158A  2341  160A  158A  	fcall	_Init_USART
  1276  1F25                     l3511:	
  1277                           
  1278                           ;main.c: 66:         INTCONbits.PEIE = 1;
  1279  1F25  170B               	bsf	11,6	;volatile
  1280  1F26                     l3513:	
  1281                           
  1282                           ;main.c: 67:         INTCONbits.GIE = 1;
  1283  1F26  178B               	bsf	11,7	;volatile
  1284  1F27                     l3515:	
  1285                           
  1286                           ;main.c: 69:         TXREG = 0x0;
  1287  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  1288  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  1289  1F29  0199               	clrf	25	;volatile
  1290  1F2A                     l3517:	
  1291                           
  1292                           ;main.c: 70:         RCREG = 0x0;
  1293  1F2A  019A               	clrf	26	;volatile
  1294  1F2B                     l3519:	
  1295                           
  1296                           ;main.c: 72:         Lcd_Start();
  1297  1F2B  160A  158A  2433  160A  158A  	fcall	_Lcd_Start
  1298  1F30                     l3521:	
  1299                           
  1300                           ;main.c: 73:         Lcd_Clear();
  1301  1F30  160A  158A  2323  160A  158A  	fcall	_Lcd_Clear
  1302  1F35                     l3523:	
  1303                           
  1304                           ;main.c: 74:         Lcd_Set_Cursor((char)1,(char)1);
  1305  1F35  01F2               	clrf	Lcd_Set_Cursor@column
  1306  1F36  0AF2               	incf	Lcd_Set_Cursor@column,f
  1307  1F37  3001               	movlw	1
  1308  1F38  160A  158A  2544  160A  158A  	fcall	_Lcd_Set_Cursor
  1309  1F3D                     l3525:	
  1310                           
  1311                           ;main.c: 75:         Lcd_Print_String((char *)"Temperatura");
  1312  1F3D  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1313  1F3E  00F5               	movwf	Lcd_Print_String@a
  1314  1F3F  3080               	movlw	128
  1315  1F40  00F6               	movwf	Lcd_Print_String@a+1
  1316  1F41  160A  158A  2470  160A  158A  	fcall	_Lcd_Print_String
  1317  1F46                     l3527:	
  1318                           
  1319                           ;main.c: 79:         Read_ADC();
  1320  1F46  120A  158A  202A  160A  158A  	fcall	_Read_ADC
  1321  1F4B                     l3529:	
  1322                           
  1323                           ;main.c: 80:         Send_String_USART(char_data);
  1324  1F4B  30DB               	movlw	(low (_char_data| 0))& (0+255)
  1325  1F4C  160A  158A  236D  160A  158A  	fcall	_Send_String_USART
  1326  1F51                     l3531:	
  1327                           
  1328                           ;main.c: 81:         Lcd_Set_Cursor((char)2,(char)1);
  1329  1F51  01F2               	clrf	Lcd_Set_Cursor@column
  1330  1F52  0AF2               	incf	Lcd_Set_Cursor@column,f
  1331  1F53  3002               	movlw	2
  1332  1F54  160A  158A  2544  160A  158A  	fcall	_Lcd_Set_Cursor
  1333  1F59                     l3533:	
  1334                           
  1335                           ;main.c: 82:         Lcd_Print_String(char_data);
  1336  1F59  30DB               	movlw	(low (_char_data| 0))& (0+255)
  1337  1F5A  00F5               	movwf	Lcd_Print_String@a
  1338  1F5B  3000               	movlw	0
  1339  1F5C  00F6               	movwf	Lcd_Print_String@a+1
  1340  1F5D  160A  158A  2470  160A  158A  	fcall	_Lcd_Print_String
  1341  1F62                     l3535:	
  1342                           
  1343                           ;main.c: 83:         for(int i=0 ; i <=50; i++){
  1344  1F62  1683               	bsf	3,5	;RP0=1, select bank1
  1345  1F63  1303               	bcf	3,6	;RP1=0, select bank1
  1346  1F64  01C5               	clrf	main@i^(0+128)
  1347  1F65  01C6               	clrf	(main@i+1)^(0+128)
  1348  1F66                     l3541:	
  1349                           
  1350                           ;main.c: 84:             Timer_Delay();
  1351  1F66  160A  118A  20B1  160A  158A  	fcall	_Timer_Delay
  1352  1F6B                     l3543:	
  1353                           
  1354                           ;main.c: 85:          }
  1355  1F6B  3001               	movlw	1
  1356  1F6C  1683               	bsf	3,5	;RP0=1, select bank1
  1357  1F6D  1303               	bcf	3,6	;RP1=0, select bank1
  1358  1F6E  07C5               	addwf	main@i^(0+128),f
  1359  1F6F  1803               	skipnc
  1360  1F70  0AC6               	incf	(main@i+1)^(0+128),f
  1361  1F71  3000               	movlw	0
  1362  1F72  07C6               	addwf	(main@i+1)^(0+128),f
  1363  1F73                     l3545:	
  1364  1F73  0846               	movf	(main@i+1)^(0+128),w
  1365  1F74  3A80               	xorlw	128
  1366  1F75  00FF               	movwf	btemp+1
  1367  1F76  3080               	movlw	128
  1368  1F77  027F               	subwf	btemp+1,w
  1369  1F78  1D03               	skipz
  1370  1F79  2F7C               	goto	u5905
  1371  1F7A  3033               	movlw	51
  1372  1F7B  0245               	subwf	main@i^(0+128),w
  1373  1F7C                     u5905:	
  1374  1F7C  1C03               	skipc
  1375  1F7D  2F7F               	goto	u5901
  1376  1F7E  2F80               	goto	u5900
  1377  1F7F                     u5901:	
  1378  1F7F  2F66               	goto	l3541
  1379  1F80                     u5900:	
  1380  1F80  2F46               	goto	l3527
  1381  1F81  120A  118A  2800   	ljmp	start
  1382  1F84                     __end_of_main:	
  1383                           
  1384                           	psect	text1
  1385  1B6D                     __ptext1:	
  1386 ;; *************** function _Send_String_USART *****************
  1387 ;; Defined at:
  1388 ;;		line 124 in file "main.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  str             1    wreg     PTR const unsigned char 
  1391 ;;		 -> char_data(9), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  str             1    4[COMMON] PTR const unsigned char 
  1394 ;;		 -> char_data(9), 
  1395 ;;  i               2    2[COMMON] short 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         3       0       0       0       0
  1407 ;;      Temps:          1       0       0       0       0
  1408 ;;      Totals:         4       0       0       0       0
  1409 ;;Total ram usage:        4 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    1
  1412 ;; This function calls:
  1413 ;;		_Send_Char_USART
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _Send_String_USART
  1421  1B6D                     _Send_String_USART:	
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _Send_String_USART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1425                           ;Send_String_USART@str stored from wreg
  1426  1B6D  00F4               	movwf	Send_String_USART@str
  1427  1B6E                     l3493:	
  1428                           
  1429                           ;main.c: 125:     short i=0;
  1430  1B6E  01F2               	clrf	Send_String_USART@i
  1431  1B6F  01F3               	clrf	Send_String_USART@i+1
  1432                           
  1433                           ;main.c: 126:     while(str[i] != 0){
  1434  1B70  2B82               	goto	l3499
  1435  1B71                     l3495:	
  1436                           
  1437                           ;main.c: 127:         Send_Char_USART(str[i]);
  1438  1B71  0872               	movf	Send_String_USART@i,w
  1439  1B72  0774               	addwf	Send_String_USART@str,w
  1440  1B73  00F1               	movwf	??_Send_String_USART
  1441  1B74  0871               	movf	??_Send_String_USART,w
  1442  1B75  0084               	movwf	4
  1443  1B76  0800               	movf	0,w
  1444  1B77  160A  158A  2318  160A  158A  	fcall	_Send_Char_USART
  1445  1B7C                     l3497:	
  1446                           
  1447                           ;main.c: 128:         i++;
  1448  1B7C  3001               	movlw	1
  1449  1B7D  07F2               	addwf	Send_String_USART@i,f
  1450  1B7E  1803               	skipnc
  1451  1B7F  0AF3               	incf	Send_String_USART@i+1,f
  1452  1B80  3000               	movlw	0
  1453  1B81  07F3               	addwf	Send_String_USART@i+1,f
  1454  1B82                     l3499:	
  1455                           
  1456                           ;main.c: 126:     while(str[i] != 0){
  1457  1B82  0872               	movf	Send_String_USART@i,w
  1458  1B83  0774               	addwf	Send_String_USART@str,w
  1459  1B84  00F1               	movwf	??_Send_String_USART
  1460  1B85  0871               	movf	??_Send_String_USART,w
  1461  1B86  0084               	movwf	4
  1462  1B87  1383               	bcf	3,7	;select IRP bank0
  1463  1B88  0800               	movf	0,w
  1464  1B89  1D03               	btfss	3,2
  1465  1B8A  2B8C               	goto	u5891
  1466  1B8B  2B8D               	goto	u5890
  1467  1B8C                     u5891:	
  1468  1B8C  2B71               	goto	l3495
  1469  1B8D                     u5890:	
  1470  1B8D                     l96:	
  1471  1B8D  0008               	return
  1472  1B8E                     __end_of_Send_String_USART:	
  1473                           
  1474                           	psect	text2
  1475  1B18                     __ptext2:	
  1476 ;; *************** function _Send_Char_USART *****************
  1477 ;; Defined at:
  1478 ;;		line 117 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  character       1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  character       1    0[COMMON] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0
  1495 ;;      Totals:         1       0       0       0       0
  1496 ;;Total ram usage:        1 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_Send_String_USART
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _Send_Char_USART
  1507  1B18                     _Send_Char_USART:	
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _Send_Char_USART: [wreg]
  1511                           ;Send_Char_USART@character stored from wreg
  1512  1B18  00F0               	movwf	Send_Char_USART@character
  1513  1B19                     l3077:	
  1514  1B19                     l87:	
  1515                           ;main.c: 119:     while(PIR1bits.TXIF == 0){};
  1516                           
  1517  1B19  1283               	bcf	3,5	;RP0=0, select bank0
  1518  1B1A  1303               	bcf	3,6	;RP1=0, select bank0
  1519  1B1B  1E0C               	btfss	12,4	;volatile
  1520  1B1C  2B1E               	goto	u5221
  1521  1B1D  2B1F               	goto	u5220
  1522  1B1E                     u5221:	
  1523  1B1E  2B19               	goto	l87
  1524  1B1F                     u5220:	
  1525  1B1F                     l89:	
  1526                           
  1527                           ;main.c: 120:     PIR1bits.TXIF = 0;
  1528  1B1F  120C               	bcf	12,4	;volatile
  1529  1B20                     l3079:	
  1530                           
  1531                           ;main.c: 121:     TXREG = (unsigned char)character;
  1532  1B20  0870               	movf	Send_Char_USART@character,w
  1533  1B21  0099               	movwf	25	;volatile
  1534  1B22                     l90:	
  1535  1B22  0008               	return
  1536  1B23                     __end_of_Send_Char_USART:	
  1537                           
  1538                           	psect	text3
  1539  082A                     __ptext3:	
  1540 ;; *************** function _Read_ADC *****************
  1541 ;; Defined at:
  1542 ;;		line 145 in file "main.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  i               2   35[BANK1 ] int 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       2       0       0
  1558 ;;      Temps:          0       1       0       0       0
  1559 ;;      Totals:         0       1       2       0       0
  1560 ;;Total ram usage:        3 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    4
  1563 ;; This function calls:
  1564 ;;		_Timer_Delay
  1565 ;;		___fldiv
  1566 ;;		___flmul
  1567 ;;		___xxtofl
  1568 ;;		_sprintf
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _Read_ADC
  1576  082A                     _Read_ADC:	
  1577  082A                     l3471:	
  1578                           ;incstack = 0
  1579                           ; Regs used in _Read_ADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1580                           
  1581                           
  1582                           ;main.c: 147:     for(int i=0 ; i <=2; i++){
  1583  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1584  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1585  082C  01C3               	clrf	Read_ADC@i^(0+128)
  1586  082D  01C4               	clrf	(Read_ADC@i+1)^(0+128)
  1587  082E                     l3477:	
  1588                           
  1589                           ;main.c: 148:         Timer_Delay();
  1590  082E  160A  118A  20B1  120A  158A  	fcall	_Timer_Delay
  1591  0833                     l3479:	
  1592                           
  1593                           ;main.c: 149:      }
  1594  0833  3001               	movlw	1
  1595  0834  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0835  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0836  07C3               	addwf	Read_ADC@i^(0+128),f
  1598  0837  1803               	skipnc
  1599  0838  0AC4               	incf	(Read_ADC@i+1)^(0+128),f
  1600  0839  3000               	movlw	0
  1601  083A  07C4               	addwf	(Read_ADC@i+1)^(0+128),f
  1602  083B                     l3481:	
  1603  083B  0844               	movf	(Read_ADC@i+1)^(0+128),w
  1604  083C  3A80               	xorlw	128
  1605  083D  00FF               	movwf	btemp+1
  1606  083E  3080               	movlw	128
  1607  083F  027F               	subwf	btemp+1,w
  1608  0840  1D03               	skipz
  1609  0841  2844               	goto	u5875
  1610  0842  3003               	movlw	3
  1611  0843  0243               	subwf	Read_ADC@i^(0+128),w
  1612  0844                     u5875:	
  1613  0844  1C03               	skipc
  1614  0845  2847               	goto	u5871
  1615  0846  2848               	goto	u5870
  1616  0847                     u5871:	
  1617  0847  282E               	goto	l3477
  1618  0848                     u5870:	
  1619  0848                     l103:	
  1620                           
  1621                           ;main.c: 151:     ADCON0 |= (unsigned char)0x2;
  1622  0848  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0849  1303               	bcf	3,6	;RP1=0, select bank0
  1624  084A  149F               	bsf	31,1	;volatile
  1625  084B                     l104:	
  1626                           ;main.c: 152:     while((ADCON0 & (unsigned char)0x2) == 0x2){};
  1627                           
  1628  084B  189F               	btfsc	31,1	;volatile
  1629  084C  284E               	goto	u5881
  1630  084D  284F               	goto	u5880
  1631  084E                     u5881:	
  1632  084E  284B               	goto	l104
  1633  084F                     u5880:	
  1634  084F                     l3483:	
  1635                           
  1636                           ;main.c: 156:     int_data = (unsigned short)((unsigned short)ADRESH<<8) + (unsigned sho
      +                          rt)ADRESL;
  1637  084F  081E               	movf	30,w	;volatile
  1638  0850  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0851  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0852  00DA               	movwf	(_int_data+1)^(0+128)
  1641  0853  081E               	movf	30,w	;volatile
  1642  0854  00D9               	movwf	_int_data^(0+128)
  1643  0855                     l3485:	
  1644                           
  1645                           ;main.c: 157:     scaled_float_data = (float)((float)((float)int_data*5.0f)/(float)(1023
      +                          ));
  1646  0855  3044               	movlw	68
  1647  0856  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0857  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0858  00C1               	movwf	___fldiv@a+3
  1650  0859  307F               	movlw	127
  1651  085A  00C0               	movwf	___fldiv@a+2
  1652  085B  30C0               	movlw	192
  1653  085C  00BF               	movwf	___fldiv@a+1
  1654  085D  3000               	movlw	0
  1655  085E  00BE               	movwf	___fldiv@a
  1656  085F  3040               	movlw	64
  1657  0860  00A7               	movwf	___flmul@b+3
  1658  0861  30A0               	movlw	160
  1659  0862  00A6               	movwf	___flmul@b+2
  1660  0863  3000               	movlw	0
  1661  0864  00A5               	movwf	___flmul@b+1
  1662  0865  3000               	movlw	0
  1663  0866  00A4               	movwf	___flmul@b
  1664  0867  1683               	bsf	3,5	;RP0=1, select bank1
  1665  0868  1303               	bcf	3,6	;RP1=0, select bank1
  1666  0869  0859               	movf	_int_data^(0+128),w
  1667  086A  00F0               	movwf	___xxtofl@val
  1668  086B  085A               	movf	(_int_data+1)^(0+128),w
  1669  086C  00F1               	movwf	___xxtofl@val+1
  1670  086D  01F2               	clrf	___xxtofl@val+2
  1671  086E  01F3               	clrf	___xxtofl@val+3
  1672  086F  3000               	movlw	0
  1673  0870  160A  118A  2166  120A  158A  	fcall	___xxtofl
  1674  0875  0873               	movf	?___xxtofl+3,w
  1675  0876  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0877  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0878  00AB               	movwf	___flmul@a+3
  1678  0879  0872               	movf	?___xxtofl+2,w
  1679  087A  00AA               	movwf	___flmul@a+2
  1680  087B  0871               	movf	?___xxtofl+1,w
  1681  087C  00A9               	movwf	___flmul@a+1
  1682  087D  0870               	movf	?___xxtofl,w
  1683  087E  00A8               	movwf	___flmul@a
  1684  087F  120A  158A  249F  120A  158A  	fcall	___flmul
  1685  0884  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0885  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0886  0827               	movf	?___flmul+3,w
  1688  0887  00C5               	movwf	___fldiv@b+3
  1689  0888  0826               	movf	?___flmul+2,w
  1690  0889  00C4               	movwf	___fldiv@b+2
  1691  088A  0825               	movf	?___flmul+1,w
  1692  088B  00C3               	movwf	___fldiv@b+1
  1693  088C  0824               	movf	?___flmul,w
  1694  088D  00C2               	movwf	___fldiv@b
  1695  088E  160A  118A  239B  120A  158A  	fcall	___fldiv
  1696  0893  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0894  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0895  0841               	movf	?___fldiv+3,w
  1699  0896  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0897  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0898  00D8               	movwf	(_scaled_float_data+3)^(0+128)
  1702  0899  1283               	bcf	3,5	;RP0=0, select bank0
  1703  089A  1303               	bcf	3,6	;RP1=0, select bank0
  1704  089B  0840               	movf	?___fldiv+2,w
  1705  089C  1683               	bsf	3,5	;RP0=1, select bank1
  1706  089D  1303               	bcf	3,6	;RP1=0, select bank1
  1707  089E  00D7               	movwf	(_scaled_float_data+2)^(0+128)
  1708  089F  1283               	bcf	3,5	;RP0=0, select bank0
  1709  08A0  1303               	bcf	3,6	;RP1=0, select bank0
  1710  08A1  083F               	movf	?___fldiv+1,w
  1711  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  1712  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  1713  08A4  00D6               	movwf	(_scaled_float_data+1)^(0+128)
  1714  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  1715  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  1716  08A7  083E               	movf	?___fldiv,w
  1717  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  1718  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  1719  08AA  00D5               	movwf	_scaled_float_data^(0+128)
  1720  08AB                     l3487:	
  1721                           
  1722                           ;main.c: 158:     scaled_temperature = scaled_float_data*1000.0f;
  1723  08AB  3044               	movlw	68
  1724  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  1725  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  1726  08AE  00A7               	movwf	___flmul@b+3
  1727  08AF  307A               	movlw	122
  1728  08B0  00A6               	movwf	___flmul@b+2
  1729  08B1  3000               	movlw	0
  1730  08B2  00A5               	movwf	___flmul@b+1
  1731  08B3  3000               	movlw	0
  1732  08B4  00A4               	movwf	___flmul@b
  1733  08B5  1683               	bsf	3,5	;RP0=1, select bank1
  1734  08B6  1303               	bcf	3,6	;RP1=0, select bank1
  1735  08B7  0858               	movf	(_scaled_float_data+3)^(0+128),w
  1736  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  1737  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  1738  08BA  00AB               	movwf	___flmul@a+3
  1739  08BB  1683               	bsf	3,5	;RP0=1, select bank1
  1740  08BC  1303               	bcf	3,6	;RP1=0, select bank1
  1741  08BD  0857               	movf	(_scaled_float_data+2)^(0+128),w
  1742  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1743  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  1744  08C0  00AA               	movwf	___flmul@a+2
  1745  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  1746  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  1747  08C3  0856               	movf	(_scaled_float_data+1)^(0+128),w
  1748  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  1749  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  1750  08C6  00A9               	movwf	___flmul@a+1
  1751  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  1752  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  1753  08C9  0855               	movf	_scaled_float_data^(0+128),w
  1754  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  1755  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  1756  08CC  00A8               	movwf	___flmul@a
  1757  08CD  120A  158A  249F  120A  158A  	fcall	___flmul
  1758  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  1759  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  1760  08D4  0827               	movf	?___flmul+3,w
  1761  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  1762  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  1763  08D7  00D4               	movwf	(_scaled_temperature+3)^(0+128)
  1764  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  1765  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  1766  08DA  0826               	movf	?___flmul+2,w
  1767  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  1768  08DC  1303               	bcf	3,6	;RP1=0, select bank1
  1769  08DD  00D3               	movwf	(_scaled_temperature+2)^(0+128)
  1770  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  1771  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  1772  08E0  0825               	movf	?___flmul+1,w
  1773  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  1774  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  1775  08E3  00D2               	movwf	(_scaled_temperature+1)^(0+128)
  1776  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  1777  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  1778  08E6  0824               	movf	?___flmul,w
  1779  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  1780  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  1781  08E9  00D1               	movwf	_scaled_temperature^(0+128)
  1782  08EA                     l3489:	
  1783                           
  1784                           ;main.c: 159:     scaled_temperature = scaled_temperature/10.0f;
  1785  08EA  3041               	movlw	65
  1786  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  1787  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  1788  08ED  00C1               	movwf	___fldiv@a+3
  1789  08EE  3020               	movlw	32
  1790  08EF  00C0               	movwf	___fldiv@a+2
  1791  08F0  3000               	movlw	0
  1792  08F1  00BF               	movwf	___fldiv@a+1
  1793  08F2  3000               	movlw	0
  1794  08F3  00BE               	movwf	___fldiv@a
  1795  08F4  1683               	bsf	3,5	;RP0=1, select bank1
  1796  08F5  1303               	bcf	3,6	;RP1=0, select bank1
  1797  08F6  0854               	movf	(_scaled_temperature+3)^(0+128),w
  1798  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  1799  08F8  1303               	bcf	3,6	;RP1=0, select bank0
  1800  08F9  00C5               	movwf	___fldiv@b+3
  1801  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  1802  08FB  1303               	bcf	3,6	;RP1=0, select bank1
  1803  08FC  0853               	movf	(_scaled_temperature+2)^(0+128),w
  1804  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  1805  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  1806  08FF  00C4               	movwf	___fldiv@b+2
  1807  0900  1683               	bsf	3,5	;RP0=1, select bank1
  1808  0901  1303               	bcf	3,6	;RP1=0, select bank1
  1809  0902  0852               	movf	(_scaled_temperature+1)^(0+128),w
  1810  0903  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0904  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0905  00C3               	movwf	___fldiv@b+1
  1813  0906  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0907  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0908  0851               	movf	_scaled_temperature^(0+128),w
  1816  0909  1283               	bcf	3,5	;RP0=0, select bank0
  1817  090A  1303               	bcf	3,6	;RP1=0, select bank0
  1818  090B  00C2               	movwf	___fldiv@b
  1819  090C  160A  118A  239B  120A  158A  	fcall	___fldiv
  1820  0911  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0912  1303               	bcf	3,6	;RP1=0, select bank0
  1822  0913  0841               	movf	?___fldiv+3,w
  1823  0914  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0915  1303               	bcf	3,6	;RP1=0, select bank1
  1825  0916  00D4               	movwf	(_scaled_temperature+3)^(0+128)
  1826  0917  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0918  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0919  0840               	movf	?___fldiv+2,w
  1829  091A  1683               	bsf	3,5	;RP0=1, select bank1
  1830  091B  1303               	bcf	3,6	;RP1=0, select bank1
  1831  091C  00D3               	movwf	(_scaled_temperature+2)^(0+128)
  1832  091D  1283               	bcf	3,5	;RP0=0, select bank0
  1833  091E  1303               	bcf	3,6	;RP1=0, select bank0
  1834  091F  083F               	movf	?___fldiv+1,w
  1835  0920  1683               	bsf	3,5	;RP0=1, select bank1
  1836  0921  1303               	bcf	3,6	;RP1=0, select bank1
  1837  0922  00D2               	movwf	(_scaled_temperature+1)^(0+128)
  1838  0923  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0924  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0925  083E               	movf	?___fldiv,w
  1841  0926  1683               	bsf	3,5	;RP0=1, select bank1
  1842  0927  1303               	bcf	3,6	;RP1=0, select bank1
  1843  0928  00D1               	movwf	_scaled_temperature^(0+128)
  1844  0929                     l3491:	
  1845                           
  1846                           ;main.c: 160:    (void)sprintf(char_data, "%f\r", scaled_temperature);
  1847  0929  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1848  092A  1283               	bcf	3,5	;RP0=0, select bank0
  1849  092B  1303               	bcf	3,6	;RP1=0, select bank0
  1850  092C  00EE               	movwf	??_Read_ADC
  1851  092D  086E               	movf	??_Read_ADC,w
  1852  092E  1683               	bsf	3,5	;RP0=1, select bank1
  1853  092F  1303               	bcf	3,6	;RP1=0, select bank1
  1854  0930  00A0               	movwf	sprintf@f^(0+128)
  1855  0931  0854               	movf	(_scaled_temperature+3)^(0+128),w
  1856  0932  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1857  0933  0853               	movf	(_scaled_temperature+2)^(0+128),w
  1858  0934  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1859  0935  0852               	movf	(_scaled_temperature+1)^(0+128),w
  1860  0936  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1861  0937  0851               	movf	_scaled_temperature^(0+128),w
  1862  0938  00A1               	movwf	(?_sprintf^(0+128)+1)
  1863  0939  30DB               	movlw	(low (_char_data| 0))& (0+255)
  1864  093A  120A  118A  2239  120A  158A  	fcall	_sprintf
  1865  093F                     l107:	
  1866  093F  0008               	return
  1867  0940                     __end_of_Read_ADC:	
  1868                           
  1869                           	psect	text4
  1870  0239                     __ptext4:	
  1871 ;; *************** function _sprintf *****************
  1872 ;; Defined at:
  1873 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  sp              1    wreg     PTR unsigned char 
  1876 ;;		 -> char_data(9), 
  1877 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1878 ;;		 -> STR_2(4), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1881 ;;		 -> char_data(9), 
  1882 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1883 ;;  tmpval          4   25[BANK1 ] struct .
  1884 ;;  val             4   19[BANK1 ] unsigned long 
  1885 ;;  eexp            2   23[BANK1 ] int 
  1886 ;;  prec            2   17[BANK1 ] int 
  1887 ;;  flag            2   15[BANK1 ] unsigned short 
  1888 ;;  cp              2    0        PTR const unsigned char 
  1889 ;;  len             2    0        unsigned int 
  1890 ;;  width           2    0        int 
  1891 ;;  c               1   34[BANK1 ] unsigned char 
  1892 ;;  ap              1   14[BANK1 ] PTR void [1]
  1893 ;;		 -> ?_sprintf(2), 
  1894 ;;  d               1    0        unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    0[BANK1 ] int 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       5       0       0
  1905 ;;      Locals:         0       0      25       0       0
  1906 ;;      Temps:          0       0       5       0       0
  1907 ;;      Totals:         0       0      35       0       0
  1908 ;;Total ram usage:       35 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    3
  1911 ;; This function calls:
  1912 ;;		___awdiv
  1913 ;;		___fladd
  1914 ;;		___fleq
  1915 ;;		___flge
  1916 ;;		___flmul
  1917 ;;		___flneg
  1918 ;;		___flsub
  1919 ;;		___fltol
  1920 ;;		___lldiv
  1921 ;;		___llmod
  1922 ;;		___wmul
  1923 ;;		___xxtofl
  1924 ;;		__div_to_l_
  1925 ;;		__tdiv_to_l_
  1926 ;;		_fround
  1927 ;;		_scale
  1928 ;; This function is called by:
  1929 ;;		_Read_ADC
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _sprintf
  1935  0239                     _sprintf:	
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1939                           ;sprintf@sp stored from wreg
  1940  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1941  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1942  023B  00BD               	movwf	sprintf@sp^(0+128)
  1943  023C                     l3081:	
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1946  023C  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1947  023D  00A5               	movwf	??_sprintf^(0+128)
  1948  023E  0825               	movf	??_sprintf^(0+128),w
  1949  023F  00AE               	movwf	sprintf@ap^(0+128)
  1950                           
  1951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1952  0240  2FDC               	goto	l3241
  1953  0241                     l3083:	
  1954                           
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1956  0241  3025               	movlw	37
  1957  0242  0642               	xorwf	sprintf@c^(0+128),w
  1958  0243  1903               	btfsc	3,2
  1959  0244  2A46               	goto	u5231
  1960  0245  2A47               	goto	u5230
  1961  0246                     u5231:	
  1962  0246  2A53               	goto	l3089
  1963  0247                     u5230:	
  1964  0247                     l3085:	
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1967  0247  0842               	movf	sprintf@c^(0+128),w
  1968  0248  00A5               	movwf	??_sprintf^(0+128)
  1969  0249  083D               	movf	sprintf@sp^(0+128),w
  1970  024A  0084               	movwf	4
  1971  024B  0825               	movf	??_sprintf^(0+128),w
  1972  024C  1383               	bcf	3,7	;select IRP bank0
  1973  024D  0080               	movwf	0
  1974  024E                     l3087:	
  1975  024E  3001               	movlw	1
  1976  024F  00A5               	movwf	??_sprintf^(0+128)
  1977  0250  0825               	movf	??_sprintf^(0+128),w
  1978  0251  07BD               	addwf	sprintf@sp^(0+128),f
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1981  0252  2FDC               	goto	l3241
  1982  0253                     l3089:	
  1983                           
  1984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1985  0253  01AF               	clrf	sprintf@flag^(0+128)
  1986  0254  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1987                           
  1988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1989  0255  2A58               	goto	l3093
  1990  0256                     l283:	
  1991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1992                           
  1993                           
  1994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1995  0256  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1996                           
  1997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1998  0257  2A72               	goto	l3095
  1999  0258                     l3093:	
  2000  0258  3001               	movlw	1
  2001  0259  07A0               	addwf	sprintf@f^(0+128),f
  2002  025A  30FF               	movlw	-1
  2003  025B  0720               	addwf	sprintf@f^(0+128),w
  2004  025C  0084               	movwf	4
  2005  025D  160A  118A  200A  120A  118A  	fcall	stringdir
  2006  0262  00C2               	movwf	sprintf@c^(0+128)
  2007  0263  00A5               	movwf	??_sprintf^(0+128)
  2008  0264  01A6               	clrf	(??_sprintf^(0+128)+1)
  2009                           
  2010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 1, Range of values is 0 to 0
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte            4     3 (average)
  2016                           ; direct_byte           11     8 (fixed)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  2020  0266  3A00               	xorlw	0	; case 0
  2021  0267  1903               	skipnz
  2022  0268  2A6A               	goto	l3577
  2023  0269  2FDC               	goto	l3241
  2024  026A                     l3577:	
  2025                           
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 2, Range of values is 0 to 102
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            7     4 (average)
  2031                           ; jumptable            260     6 (fixed)
  2032                           ;	Chosen strategy is simple_byte
  2033  026A  0825               	movf	??_sprintf^(0+128),w
  2034  026B  3A00               	xorlw	0	; case 0
  2035  026C  1903               	skipnz
  2036  026D  2FEE               	goto	l3243
  2037  026E  3A66               	xorlw	102	; case 102
  2038  026F  1903               	skipnz
  2039  0270  2A56               	goto	l283
  2040  0271  2FDC               	goto	l3241
  2041  0272                     l3095:	
  2042                           
  2043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2044  0272  3000               	movlw	0
  2045  0273  052F               	andwf	sprintf@flag^(0+128),w
  2046  0274  00A5               	movwf	??_sprintf^(0+128)
  2047  0275  3007               	movlw	7
  2048  0276  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2049  0277  00A6               	movwf	(??_sprintf+1)^(0+128)
  2050  0278  0825               	movf	??_sprintf^(0+128),w
  2051  0279  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2052  027A  1903               	btfsc	3,2
  2053  027B  2A7D               	goto	u5241
  2054  027C  2A7E               	goto	u5240
  2055  027D                     u5241:	
  2056  027D  2FC8               	goto	l3235
  2057  027E                     u5240:	
  2058  027E                     l3097:	
  2059                           
  2060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2061  027E  3006               	movlw	6
  2062  027F  00B1               	movwf	sprintf@prec^(0+128)
  2063  0280  3000               	movlw	0
  2064  0281  00B2               	movwf	(sprintf@prec^(0+128)+1)
  2065  0282                     l3099:	
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2068  0282  082E               	movf	sprintf@ap^(0+128),w
  2069  0283  0084               	movwf	4
  2070  0284  1383               	bcf	3,7	;select IRP bank0
  2071  0285  0800               	movf	0,w
  2072  0286  00BE               	movwf	sprintf@fval^(0+128)
  2073  0287  0A84               	incf	4,f
  2074  0288  0800               	movf	0,w
  2075  0289  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2076  028A  0A84               	incf	4,f
  2077  028B  0800               	movf	0,w
  2078  028C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2079  028D  0A84               	incf	4,f
  2080  028E  0800               	movf	0,w
  2081  028F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2082  0290                     l3101:	
  2083  0290  3004               	movlw	4
  2084  0291  00A5               	movwf	??_sprintf^(0+128)
  2085  0292  0825               	movf	??_sprintf^(0+128),w
  2086  0293  07AE               	addwf	sprintf@ap^(0+128),f
  2087  0294                     l3103:	
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2090  0294  0841               	movf	(sprintf@fval+3)^(0+128),w
  2091  0295  00F3               	movwf	___flge@ff1+3
  2092  0296  0840               	movf	(sprintf@fval+2)^(0+128),w
  2093  0297  00F2               	movwf	___flge@ff1+2
  2094  0298  083F               	movf	(sprintf@fval+1)^(0+128),w
  2095  0299  00F1               	movwf	___flge@ff1+1
  2096  029A  083E               	movf	sprintf@fval^(0+128),w
  2097  029B  00F0               	movwf	___flge@ff1
  2098  029C  3000               	movlw	0
  2099  029D  00F7               	movwf	___flge@ff2+3
  2100  029E  3000               	movlw	0
  2101  029F  00F6               	movwf	___flge@ff2+2
  2102  02A0  3000               	movlw	0
  2103  02A1  00F5               	movwf	___flge@ff2+1
  2104  02A2  3000               	movlw	0
  2105  02A3  00F4               	movwf	___flge@ff2
  2106  02A4  160A  118A  20C4  120A  118A  	fcall	___flge
  2107  02A9  1803               	btfsc	3,0
  2108  02AA  2AAC               	goto	u5251
  2109  02AB  2AAD               	goto	u5250
  2110  02AC                     u5251:	
  2111  02AC  2ACA               	goto	l3109
  2112  02AD                     u5250:	
  2113  02AD                     l3105:	
  2114                           
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2116  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2117  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2118  02AF  0841               	movf	(sprintf@fval+3)^(0+128),w
  2119  02B0  00F3               	movwf	___flneg@f1+3
  2120  02B1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2121  02B2  00F2               	movwf	___flneg@f1+2
  2122  02B3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2123  02B4  00F1               	movwf	___flneg@f1+1
  2124  02B5  083E               	movf	sprintf@fval^(0+128),w
  2125  02B6  00F0               	movwf	___flneg@f1
  2126  02B7  160A  158A  230D  120A  118A  	fcall	___flneg
  2127  02BC  0873               	movf	?___flneg+3,w
  2128  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2129  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2130  02BF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2131  02C0  0872               	movf	?___flneg+2,w
  2132  02C1  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2133  02C2  0871               	movf	?___flneg+1,w
  2134  02C3  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2135  02C4  0870               	movf	?___flneg,w
  2136  02C5  00BE               	movwf	sprintf@fval^(0+128)
  2137  02C6                     l3107:	
  2138                           
  2139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2140  02C6  3003               	movlw	3
  2141  02C7  04AF               	iorwf	sprintf@flag^(0+128),f
  2142  02C8  3000               	movlw	0
  2143  02C9  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2144  02CA                     l3109:	
  2145                           
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2147  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2148  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2149  02CC  01B7               	clrf	sprintf@eexp^(0+128)
  2150  02CD  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2151  02CE                     l3111:	
  2152                           
  2153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2154  02CE  0841               	movf	(sprintf@fval+3)^(0+128),w
  2155  02CF  00F3               	movwf	___fleq@ff1+3
  2156  02D0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2157  02D1  00F2               	movwf	___fleq@ff1+2
  2158  02D2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2159  02D3  00F1               	movwf	___fleq@ff1+1
  2160  02D4  083E               	movf	sprintf@fval^(0+128),w
  2161  02D5  00F0               	movwf	___fleq@ff1
  2162  02D6  3000               	movlw	0
  2163  02D7  00F7               	movwf	___fleq@ff2+3
  2164  02D8  3000               	movlw	0
  2165  02D9  00F6               	movwf	___fleq@ff2+2
  2166  02DA  3000               	movlw	0
  2167  02DB  00F5               	movwf	___fleq@ff2+1
  2168  02DC  3000               	movlw	0
  2169  02DD  00F4               	movwf	___fleq@ff2
  2170  02DE  160A  158A  24F6  120A  118A  	fcall	___fleq
  2171  02E3  1803               	btfsc	3,0
  2172  02E4  2AE6               	goto	u5261
  2173  02E5  2AE7               	goto	u5260
  2174  02E6                     u5261:	
  2175  02E6  2BD7               	goto	l3137
  2176  02E7                     u5260:	
  2177  02E7                     l3113:	
  2178                           
  2179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2180  02E7  1003               	clrc
  2181  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2182  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2183  02EA  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2184  02EB  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2185  02EC  3E82               	addlw	130
  2186  02ED  00B7               	movwf	sprintf@eexp^(0+128)
  2187  02EE  30FF               	movlw	255
  2188  02EF  1803               	skipnc
  2189  02F0  3000               	movlw	0
  2190  02F1  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2191  02F2                     l3115:	
  2192                           
  2193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2194  02F2  30FF               	movlw	255
  2195  02F3  07B7               	addwf	sprintf@eexp^(0+128),f
  2196  02F4  1803               	skipnc
  2197  02F5  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2198  02F6  30FF               	movlw	255
  2199  02F7  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2200  02F8                     l3117:	
  2201                           
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2203  02F8  3003               	movlw	3
  2204  02F9  00F0               	movwf	___wmul@multiplier
  2205  02FA  3000               	movlw	0
  2206  02FB  00F1               	movwf	___wmul@multiplier+1
  2207  02FC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2208  02FD  00F3               	movwf	___wmul@multiplicand+1
  2209  02FE  0837               	movf	sprintf@eexp^(0+128),w
  2210  02FF  00F2               	movwf	___wmul@multiplicand
  2211  0300  160A  158A  23D4  120A  118A  	fcall	___wmul
  2212  0305  0871               	movf	?___wmul+1,w
  2213  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0308  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2216  0309  0870               	movf	?___wmul,w
  2217  030A  00B7               	movwf	sprintf@eexp^(0+128)
  2218  030B                     l3119:	
  2219                           
  2220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2221  030B  300A               	movlw	10
  2222  030C  00F7               	movwf	___awdiv@divisor
  2223  030D  3000               	movlw	0
  2224  030E  00F8               	movwf	___awdiv@divisor+1
  2225  030F  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2226  0310  00FA               	movwf	___awdiv@dividend+1
  2227  0311  0837               	movf	sprintf@eexp^(0+128),w
  2228  0312  00F9               	movwf	___awdiv@dividend
  2229  0313  160A  158A  26A9  120A  118A  	fcall	___awdiv
  2230  0318  0878               	movf	?___awdiv+1,w
  2231  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2232  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2233  031B  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2234  031C  0877               	movf	?___awdiv,w
  2235  031D  00B7               	movwf	sprintf@eexp^(0+128)
  2236  031E                     l3121:	
  2237                           
  2238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2239  031E  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2240  031F  2B21               	goto	u5271
  2241  0320  2B22               	goto	u5270
  2242  0321                     u5271:	
  2243  0321  2B28               	goto	l3125
  2244  0322                     u5270:	
  2245  0322                     l3123:	
  2246                           
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2248  0322  30FF               	movlw	255
  2249  0323  07B7               	addwf	sprintf@eexp^(0+128),f
  2250  0324  1803               	skipnc
  2251  0325  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2252  0326  30FF               	movlw	255
  2253  0327  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2254  0328                     l3125:	
  2255                           
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2257  0328  0337               	decf	sprintf@eexp^(0+128),w
  2258  0329  3AFF               	xorlw	255
  2259  032A  120A  158A  2140  120A  118A  	fcall	_scale
  2260  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0331  0841               	movf	?_scale+3,w
  2263  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2264  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0334  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2266  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0337  0840               	movf	?_scale+2,w
  2269  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2271  033A  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2272  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2273  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2274  033D  083F               	movf	?_scale+1,w
  2275  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2276  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0340  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2278  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0343  083E               	movf	?_scale,w
  2281  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0346  00B9               	movwf	sprintf@tmpval^(0+128)
  2284  0347                     l3127:	
  2285                           
  2286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2287  0347  0841               	movf	(sprintf@fval+3)^(0+128),w
  2288  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2290  034A  00A7               	movwf	___flmul@b+3
  2291  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2292  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2293  034D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2294  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2295  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0350  00A6               	movwf	___flmul@b+2
  2297  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0353  083F               	movf	(sprintf@fval+1)^(0+128),w
  2300  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0356  00A5               	movwf	___flmul@b+1
  2303  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0359  083E               	movf	sprintf@fval^(0+128),w
  2306  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2307  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2308  035C  00A4               	movwf	___flmul@b
  2309  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2310  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2311  035F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2312  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0362  00AB               	movwf	___flmul@a+3
  2315  0363  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0364  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0365  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2318  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0368  00AA               	movwf	___flmul@a+2
  2321  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2322  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2323  036B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2324  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2325  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2326  036E  00A9               	movwf	___flmul@a+1
  2327  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0371  0839               	movf	sprintf@tmpval^(0+128),w
  2330  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2332  0374  00A8               	movwf	___flmul@a
  2333  0375  120A  158A  249F  120A  118A  	fcall	___flmul
  2334  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2335  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2336  037C  0827               	movf	?___flmul+3,w
  2337  037D  1683               	bsf	3,5	;RP0=1, select bank1
  2338  037E  1303               	bcf	3,6	;RP1=0, select bank1
  2339  037F  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2340  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0382  0826               	movf	?___flmul+2,w
  2343  0383  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0384  1303               	bcf	3,6	;RP1=0, select bank1
  2345  0385  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2346  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0388  0825               	movf	?___flmul+1,w
  2349  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2350  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2351  038B  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2352  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2353  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2354  038E  0824               	movf	?___flmul,w
  2355  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2357  0391  00B9               	movwf	sprintf@tmpval^(0+128)
  2358  0392                     l3129:	
  2359                           
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2361  0392  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2362  0393  00F3               	movwf	___flge@ff1+3
  2363  0394  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2364  0395  00F2               	movwf	___flge@ff1+2
  2365  0396  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2366  0397  00F1               	movwf	___flge@ff1+1
  2367  0398  0839               	movf	sprintf@tmpval^(0+128),w
  2368  0399  00F0               	movwf	___flge@ff1
  2369  039A  303F               	movlw	63
  2370  039B  00F7               	movwf	___flge@ff2+3
  2371  039C  3080               	movlw	128
  2372  039D  00F6               	movwf	___flge@ff2+2
  2373  039E  3000               	movlw	0
  2374  039F  00F5               	movwf	___flge@ff2+1
  2375  03A0  3000               	movlw	0
  2376  03A1  00F4               	movwf	___flge@ff2
  2377  03A2  160A  118A  20C4  120A  118A  	fcall	___flge
  2378  03A7  1803               	btfsc	3,0
  2379  03A8  2BAA               	goto	u5281
  2380  03A9  2BAB               	goto	u5280
  2381  03AA                     u5281:	
  2382  03AA  2BB4               	goto	l3133
  2383  03AB                     u5280:	
  2384  03AB                     l3131:	
  2385                           
  2386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2387  03AB  30FF               	movlw	255
  2388  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2389  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2390  03AE  07B7               	addwf	sprintf@eexp^(0+128),f
  2391  03AF  1803               	skipnc
  2392  03B0  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2393  03B1  30FF               	movlw	255
  2394  03B2  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2395  03B3  2BD7               	goto	l3137
  2396  03B4                     l3133:	
  2397  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2398  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2399  03B6  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2400  03B7  00F3               	movwf	___flge@ff1+3
  2401  03B8  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2402  03B9  00F2               	movwf	___flge@ff1+2
  2403  03BA  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2404  03BB  00F1               	movwf	___flge@ff1+1
  2405  03BC  0839               	movf	sprintf@tmpval^(0+128),w
  2406  03BD  00F0               	movwf	___flge@ff1
  2407  03BE  3041               	movlw	65
  2408  03BF  00F7               	movwf	___flge@ff2+3
  2409  03C0  3020               	movlw	32
  2410  03C1  00F6               	movwf	___flge@ff2+2
  2411  03C2  3000               	movlw	0
  2412  03C3  00F5               	movwf	___flge@ff2+1
  2413  03C4  3000               	movlw	0
  2414  03C5  00F4               	movwf	___flge@ff2
  2415  03C6  160A  118A  20C4  120A  118A  	fcall	___flge
  2416  03CB  1C03               	btfss	3,0
  2417  03CC  2BCE               	goto	u5291
  2418  03CD  2BCF               	goto	u5290
  2419  03CE                     u5291:	
  2420  03CE  2BD7               	goto	l3137
  2421  03CF                     u5290:	
  2422  03CF                     l3135:	
  2423                           
  2424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2425  03CF  3001               	movlw	1
  2426  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2427  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2428  03D2  07B7               	addwf	sprintf@eexp^(0+128),f
  2429  03D3  1803               	skipnc
  2430  03D4  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2431  03D5  3000               	movlw	0
  2432  03D6  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2433  03D7                     l3137:	
  2434  03D7                     l3139:	
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2436                           
  2437                           
  2438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2439  03D7  3006               	movlw	6
  2440  03D8  120A  118A  202E  120A  118A  	fcall	_fround
  2441  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2442  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2443  03DF  0841               	movf	?_fround+3,w
  2444  03E0  00D5               	movwf	___fladd@b+3
  2445  03E1  0840               	movf	?_fround+2,w
  2446  03E2  00D4               	movwf	___fladd@b+2
  2447  03E3  083F               	movf	?_fround+1,w
  2448  03E4  00D3               	movwf	___fladd@b+1
  2449  03E5  083E               	movf	?_fround,w
  2450  03E6  00D2               	movwf	___fladd@b
  2451  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2452  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2453  03E9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2454  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2455  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2456  03EC  00D9               	movwf	___fladd@a+3
  2457  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2458  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2459  03EF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2460  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03F2  00D8               	movwf	___fladd@a+2
  2463  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2464  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2465  03F5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2466  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2467  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2468  03F8  00D7               	movwf	___fladd@a+1
  2469  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2470  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2471  03FB  083E               	movf	sprintf@fval^(0+128),w
  2472  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2473  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2474  03FE  00D6               	movwf	___fladd@a
  2475  03FF  160A  118A  2578  120A  118A  	fcall	___fladd
  2476  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0406  0855               	movf	?___fladd+3,w
  2479  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0409  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2482  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2483  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2484  040C  0854               	movf	?___fladd+2,w
  2485  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2486  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2487  040F  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2488  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0412  0853               	movf	?___fladd+1,w
  2491  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0415  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2494  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0418  0852               	movf	?___fladd,w
  2497  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2498  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2499  041B  00BE               	movwf	sprintf@fval^(0+128)
  2500  041C                     l3141:	
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2503  041C  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2504  041D  3A80               	xorlw	128
  2505  041E  00FF               	movwf	btemp+1
  2506  041F  3080               	movlw	128
  2507  0420  027F               	subwf	btemp+1,w
  2508  0421  1D03               	skipz
  2509  0422  2C25               	goto	u5305
  2510  0423  300A               	movlw	10
  2511  0424  0237               	subwf	sprintf@eexp^(0+128),w
  2512  0425                     u5305:	
  2513  0425  1803               	skipnc
  2514  0426  2C28               	goto	u5301
  2515  0427  2C29               	goto	u5300
  2516  0428                     u5301:	
  2517  0428  2C7A               	goto	l3149
  2518  0429                     u5300:	
  2519  0429                     l3143:	
  2520  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2521  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2522  042B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2523  042C  00F3               	movwf	___fleq@ff1+3
  2524  042D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2525  042E  00F2               	movwf	___fleq@ff1+2
  2526  042F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2527  0430  00F1               	movwf	___fleq@ff1+1
  2528  0431  083E               	movf	sprintf@fval^(0+128),w
  2529  0432  00F0               	movwf	___fleq@ff1
  2530  0433  3000               	movlw	0
  2531  0434  00F7               	movwf	___fleq@ff2+3
  2532  0435  3000               	movlw	0
  2533  0436  00F6               	movwf	___fleq@ff2+2
  2534  0437  3000               	movlw	0
  2535  0438  00F5               	movwf	___fleq@ff2+1
  2536  0439  3000               	movlw	0
  2537  043A  00F4               	movwf	___fleq@ff2
  2538  043B  160A  158A  24F6  120A  118A  	fcall	___fleq
  2539  0440  1803               	btfsc	3,0
  2540  0441  2C43               	goto	u5311
  2541  0442  2C44               	goto	u5310
  2542  0443                     u5311:	
  2543  0443  2CEC               	goto	l3163
  2544  0444                     u5310:	
  2545  0444                     l3145:	
  2546  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0446  0841               	movf	(sprintf@fval+3)^(0+128),w
  2549  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0449  00D4               	movwf	___fltol@f1+3
  2552  044A  1683               	bsf	3,5	;RP0=1, select bank1
  2553  044B  1303               	bcf	3,6	;RP1=0, select bank1
  2554  044C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2555  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2556  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2557  044F  00D3               	movwf	___fltol@f1+2
  2558  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2560  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2561  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0455  00D2               	movwf	___fltol@f1+1
  2564  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2565  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2566  0458  083E               	movf	sprintf@fval^(0+128),w
  2567  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2568  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2569  045B  00D1               	movwf	___fltol@f1
  2570  045C  160A  158A  2784  120A  118A  	fcall	___fltol
  2571  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0463  0854               	movf	?___fltol+3,w
  2574  0464  0453               	iorwf	?___fltol+2,w
  2575  0465  0452               	iorwf	?___fltol+1,w
  2576  0466  0451               	iorwf	?___fltol,w
  2577  0467  1D03               	skipz
  2578  0468  2C6A               	goto	u5321
  2579  0469  2C6B               	goto	u5320
  2580  046A                     u5321:	
  2581  046A  2CEC               	goto	l3163
  2582  046B                     u5320:	
  2583  046B                     l3147:	
  2584  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2585  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2586  046D  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2587  046E  3A80               	xorlw	128
  2588  046F  00FF               	movwf	btemp+1
  2589  0470  3080               	movlw	128
  2590  0471  027F               	subwf	btemp+1,w
  2591  0472  1D03               	skipz
  2592  0473  2C76               	goto	u5335
  2593  0474  3002               	movlw	2
  2594  0475  0237               	subwf	sprintf@eexp^(0+128),w
  2595  0476                     u5335:	
  2596  0476  1C03               	skipc
  2597  0477  2C79               	goto	u5331
  2598  0478  2C7A               	goto	u5330
  2599  0479                     u5331:	
  2600  0479  2CEC               	goto	l3163
  2601  047A                     u5330:	
  2602  047A                     l3149:	
  2603                           
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2605  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2606  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2607  047C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2608  047D  00F3               	movwf	___flge@ff1+3
  2609  047E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2610  047F  00F2               	movwf	___flge@ff1+2
  2611  0480  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2612  0481  00F1               	movwf	___flge@ff1+1
  2613  0482  0839               	movf	sprintf@tmpval^(0+128),w
  2614  0483  00F0               	movwf	___flge@ff1
  2615  0484  3040               	movlw	64
  2616  0485  00F7               	movwf	___flge@ff2+3
  2617  0486  3089               	movlw	137
  2618  0487  00F6               	movwf	___flge@ff2+2
  2619  0488  3070               	movlw	112
  2620  0489  00F5               	movwf	___flge@ff2+1
  2621  048A  305F               	movlw	95
  2622  048B  00F4               	movwf	___flge@ff2
  2623  048C  160A  118A  20C4  120A  118A  	fcall	___flge
  2624  0491  1803               	btfsc	3,0
  2625  0492  2C94               	goto	u5341
  2626  0493  2C95               	goto	u5340
  2627  0494                     u5341:	
  2628  0494  2C9E               	goto	l3153
  2629  0495                     u5340:	
  2630  0495                     l3151:	
  2631                           
  2632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2633  0495  30F7               	movlw	247
  2634  0496  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0497  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0498  07B7               	addwf	sprintf@eexp^(0+128),f
  2637  0499  1803               	skipnc
  2638  049A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2639  049B  30FF               	movlw	255
  2640  049C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2641                           
  2642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2643  049D  2CA6               	goto	l3155
  2644  049E                     l3153:	
  2645                           
  2646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2647  049E  30F8               	movlw	248
  2648  049F  1683               	bsf	3,5	;RP0=1, select bank1
  2649  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  2650  04A1  07B7               	addwf	sprintf@eexp^(0+128),f
  2651  04A2  1803               	skipnc
  2652  04A3  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2653  04A4  30FF               	movlw	255
  2654  04A5  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2655  04A6                     l3155:	
  2656                           
  2657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2658  04A6  0837               	movf	sprintf@eexp^(0+128),w
  2659  04A7  120A  158A  2140  120A  118A  	fcall	_scale
  2660  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2661  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2662  04AE  0841               	movf	?_scale+3,w
  2663  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2664  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2665  04B1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2666  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2667  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2668  04B4  0840               	movf	?_scale+2,w
  2669  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2670  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  2671  04B7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2672  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2673  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2674  04BA  083F               	movf	?_scale+1,w
  2675  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  2676  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  2677  04BD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2678  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2679  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2680  04C0  083E               	movf	?_scale,w
  2681  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2682  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2683  04C3  00B9               	movwf	sprintf@tmpval^(0+128)
  2684  04C4                     l3157:	
  2685  04C4  0841               	movf	(sprintf@fval+3)^(0+128),w
  2686  04C5  00F3               	movwf	__div_to_l_@f1+3
  2687  04C6  0840               	movf	(sprintf@fval+2)^(0+128),w
  2688  04C7  00F2               	movwf	__div_to_l_@f1+2
  2689  04C8  083F               	movf	(sprintf@fval+1)^(0+128),w
  2690  04C9  00F1               	movwf	__div_to_l_@f1+1
  2691  04CA  083E               	movf	sprintf@fval^(0+128),w
  2692  04CB  00F0               	movwf	__div_to_l_@f1
  2693  04CC  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2694  04CD  00F7               	movwf	__div_to_l_@f2+3
  2695  04CE  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2696  04CF  00F6               	movwf	__div_to_l_@f2+2
  2697  04D0  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2698  04D1  00F5               	movwf	__div_to_l_@f2+1
  2699  04D2  0839               	movf	sprintf@tmpval^(0+128),w
  2700  04D3  00F4               	movwf	__div_to_l_@f2
  2701  04D4  160A  118A  22DD  120A  118A  	fcall	__div_to_l_
  2702  04D9  0873               	movf	?__div_to_l_+3,w
  2703  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2704  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2705  04DC  00B6               	movwf	(sprintf@val+3)^(0+128)
  2706  04DD  0872               	movf	?__div_to_l_+2,w
  2707  04DE  00B5               	movwf	(sprintf@val+2)^(0+128)
  2708  04DF  0871               	movf	?__div_to_l_+1,w
  2709  04E0  00B4               	movwf	(sprintf@val+1)^(0+128)
  2710  04E1  0870               	movf	?__div_to_l_,w
  2711  04E2  00B3               	movwf	sprintf@val^(0+128)
  2712  04E3                     l3161:	
  2713                           
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2715  04E3  3000               	movlw	0
  2716  04E4  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2717  04E5  3000               	movlw	0
  2718  04E6  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2719  04E7  3000               	movlw	0
  2720  04E8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2721  04E9  3000               	movlw	0
  2722  04EA  00BE               	movwf	sprintf@fval^(0+128)
  2723                           
  2724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2725  04EB  2D70               	goto	l3169
  2726  04EC                     l3163:	
  2727                           
  2728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2729  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2730  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2731  04EE  0841               	movf	(sprintf@fval+3)^(0+128),w
  2732  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2733  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2734  04F1  00D4               	movwf	___fltol@f1+3
  2735  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2736  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  2737  04F4  0840               	movf	(sprintf@fval+2)^(0+128),w
  2738  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2739  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2740  04F7  00D3               	movwf	___fltol@f1+2
  2741  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  2742  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  2743  04FA  083F               	movf	(sprintf@fval+1)^(0+128),w
  2744  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2745  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2746  04FD  00D2               	movwf	___fltol@f1+1
  2747  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2748  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0500  083E               	movf	sprintf@fval^(0+128),w
  2750  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0503  00D1               	movwf	___fltol@f1
  2753  0504  160A  158A  2784  120A  118A  	fcall	___fltol
  2754  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2755  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2756  050B  0854               	movf	?___fltol+3,w
  2757  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2758  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2759  050E  00B6               	movwf	(sprintf@val+3)^(0+128)
  2760  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0511  0853               	movf	?___fltol+2,w
  2763  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0514  00B5               	movwf	(sprintf@val+2)^(0+128)
  2766  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0517  0852               	movf	?___fltol+1,w
  2769  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2771  051A  00B4               	movwf	(sprintf@val+1)^(0+128)
  2772  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2773  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2774  051D  0851               	movf	?___fltol,w
  2775  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2776  051F  1303               	bcf	3,6	;RP1=0, select bank1
  2777  0520  00B3               	movwf	sprintf@val^(0+128)
  2778  0521                     l3165:	
  2779                           
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2781  0521  0836               	movf	(sprintf@val+3)^(0+128),w
  2782  0522  00F3               	movwf	___xxtofl@val+3
  2783  0523  0835               	movf	(sprintf@val+2)^(0+128),w
  2784  0524  00F2               	movwf	___xxtofl@val+2
  2785  0525  0834               	movf	(sprintf@val+1)^(0+128),w
  2786  0526  00F1               	movwf	___xxtofl@val+1
  2787  0527  0833               	movf	sprintf@val^(0+128),w
  2788  0528  00F0               	movwf	___xxtofl@val
  2789  0529  3000               	movlw	0
  2790  052A  160A  118A  2166  120A  118A  	fcall	___xxtofl
  2791  052F  0873               	movf	?___xxtofl+3,w
  2792  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0532  00E9               	movwf	___flsub@a+3
  2795  0533  0872               	movf	?___xxtofl+2,w
  2796  0534  00E8               	movwf	___flsub@a+2
  2797  0535  0871               	movf	?___xxtofl+1,w
  2798  0536  00E7               	movwf	___flsub@a+1
  2799  0537  0870               	movf	?___xxtofl,w
  2800  0538  00E6               	movwf	___flsub@a
  2801  0539  1683               	bsf	3,5	;RP0=1, select bank1
  2802  053A  1303               	bcf	3,6	;RP1=0, select bank1
  2803  053B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2804  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2805  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2806  053E  00ED               	movwf	___flsub@b+3
  2807  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2808  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2809  0541  0840               	movf	(sprintf@fval+2)^(0+128),w
  2810  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0544  00EC               	movwf	___flsub@b+2
  2813  0545  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0546  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0547  083F               	movf	(sprintf@fval+1)^(0+128),w
  2816  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2818  054A  00EB               	movwf	___flsub@b+1
  2819  054B  1683               	bsf	3,5	;RP0=1, select bank1
  2820  054C  1303               	bcf	3,6	;RP1=0, select bank1
  2821  054D  083E               	movf	sprintf@fval^(0+128),w
  2822  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2823  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0550  00EA               	movwf	___flsub@b
  2825  0551  160A  158A  23B0  120A  118A  	fcall	___flsub
  2826  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0558  0869               	movf	?___flsub+3,w
  2829  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2830  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2831  055B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2832  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2833  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2834  055E  0868               	movf	?___flsub+2,w
  2835  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2836  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2837  0561  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2838  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0564  0867               	movf	?___flsub+1,w
  2841  0565  1683               	bsf	3,5	;RP0=1, select bank1
  2842  0566  1303               	bcf	3,6	;RP1=0, select bank1
  2843  0567  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2844  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2846  056A  0866               	movf	?___flsub,w
  2847  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2848  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2849  056D  00BE               	movwf	sprintf@fval^(0+128)
  2850  056E                     l3167:	
  2851                           
  2852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2853  056E  01B7               	clrf	sprintf@eexp^(0+128)
  2854  056F  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2855  0570                     l3169:	
  2856                           
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2858  0570  01C2               	clrf	sprintf@c^(0+128)
  2859  0571  0AC2               	incf	sprintf@c^(0+128),f
  2860  0572                     l3175:	
  2861                           
  2862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2863  0572  0842               	movf	sprintf@c^(0+128),w
  2864  0573  00A5               	movwf	??_sprintf^(0+128)
  2865  0574  3001               	movlw	1
  2866  0575                     u5355:	
  2867  0575  1003               	clrc
  2868  0576  0DA5               	rlf	??_sprintf^(0+128),f
  2869  0577  3EFF               	addlw	-1
  2870  0578  1D03               	skipz
  2871  0579  2D75               	goto	u5355
  2872  057A  1003               	clrc
  2873  057B  0D25               	rlf	??_sprintf^(0+128),w
  2874  057C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2875  057D  0084               	movwf	4
  2876  057E  160A  118A  200A  120A  118A  	fcall	stringdir
  2877  0583  00A6               	movwf	(??_sprintf+1)^(0+128)
  2878  0584  160A  118A  200A  120A  118A  	fcall	stringdir
  2879  0589  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2880  058A  160A  118A  200A  120A  118A  	fcall	stringdir
  2881  058F  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2882  0590  160A  118A  200A  120A  118A  	fcall	stringdir
  2883  0595  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2884  0596  0829               	movf	(??_sprintf+4)^(0+128),w
  2885  0597  0236               	subwf	(sprintf@val+3)^(0+128),w
  2886  0598  1D03               	skipz
  2887  0599  2DA4               	goto	u5365
  2888  059A  0828               	movf	(??_sprintf+3)^(0+128),w
  2889  059B  0235               	subwf	(sprintf@val+2)^(0+128),w
  2890  059C  1D03               	skipz
  2891  059D  2DA4               	goto	u5365
  2892  059E  0827               	movf	(??_sprintf+2)^(0+128),w
  2893  059F  0234               	subwf	(sprintf@val+1)^(0+128),w
  2894  05A0  1D03               	skipz
  2895  05A1  2DA4               	goto	u5365
  2896  05A2  0826               	movf	(??_sprintf+1)^(0+128),w
  2897  05A3  0233               	subwf	sprintf@val^(0+128),w
  2898  05A4                     u5365:	
  2899  05A4  1803               	skipnc
  2900  05A5  2DA7               	goto	u5361
  2901  05A6  2DA8               	goto	u5360
  2902  05A7                     u5361:	
  2903  05A7  2DA9               	goto	l3179
  2904  05A8                     u5360:	
  2905  05A8  2DB3               	goto	l3181
  2906  05A9                     l3179:	
  2907  05A9  3001               	movlw	1
  2908  05AA  00A5               	movwf	??_sprintf^(0+128)
  2909  05AB  0825               	movf	??_sprintf^(0+128),w
  2910  05AC  07C2               	addwf	sprintf@c^(0+128),f
  2911  05AD  300A               	movlw	10
  2912  05AE  0642               	xorwf	sprintf@c^(0+128),w
  2913  05AF  1D03               	btfss	3,2
  2914  05B0  2DB2               	goto	u5371
  2915  05B1  2DB3               	goto	u5370
  2916  05B2                     u5371:	
  2917  05B2  2D72               	goto	l3175
  2918  05B3                     u5370:	
  2919  05B3                     l3181:	
  2920                           
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2922  05B3  3003               	movlw	3
  2923  05B4  052F               	andwf	sprintf@flag^(0+128),w
  2924  05B5  00A5               	movwf	??_sprintf^(0+128)
  2925  05B6  3000               	movlw	0
  2926  05B7  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2927  05B8  00A6               	movwf	(??_sprintf+1)^(0+128)
  2928  05B9  0825               	movf	??_sprintf^(0+128),w
  2929  05BA  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2930  05BB  1903               	btfsc	3,2
  2931  05BC  2DBE               	goto	u5381
  2932  05BD  2DBF               	goto	u5380
  2933  05BE                     u5381:	
  2934  05BE  2E31               	goto	l308
  2935  05BF                     u5380:	
  2936  05BF                     l3183:	
  2937                           
  2938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2939  05BF  302D               	movlw	45
  2940  05C0  00A5               	movwf	??_sprintf^(0+128)
  2941  05C1  083D               	movf	sprintf@sp^(0+128),w
  2942  05C2  0084               	movwf	4
  2943  05C3  0825               	movf	??_sprintf^(0+128),w
  2944  05C4  1383               	bcf	3,7	;select IRP bank0
  2945  05C5  0080               	movwf	0
  2946  05C6                     l3185:	
  2947  05C6  3001               	movlw	1
  2948  05C7  00A5               	movwf	??_sprintf^(0+128)
  2949  05C8  0825               	movf	??_sprintf^(0+128),w
  2950  05C9  07BD               	addwf	sprintf@sp^(0+128),f
  2951  05CA  2E31               	goto	l308
  2952  05CB                     l3187:	
  2953                           
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2955  05CB  0842               	movf	sprintf@c^(0+128),w
  2956  05CC  00A5               	movwf	??_sprintf^(0+128)
  2957  05CD  3001               	movlw	1
  2958  05CE                     u5395:	
  2959  05CE  1003               	clrc
  2960  05CF  0DA5               	rlf	??_sprintf^(0+128),f
  2961  05D0  3EFF               	addlw	-1
  2962  05D1  1D03               	skipz
  2963  05D2  2DCE               	goto	u5395
  2964  05D3  1003               	clrc
  2965  05D4  0D25               	rlf	??_sprintf^(0+128),w
  2966  05D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2967  05D6  0084               	movwf	4
  2968  05D7  160A  118A  200A  120A  118A  	fcall	stringdir
  2969  05DC  00F0               	movwf	___lldiv@divisor
  2970  05DD  160A  118A  200A  120A  118A  	fcall	stringdir
  2971  05E2  00F1               	movwf	___lldiv@divisor+1
  2972  05E3  160A  118A  200A  120A  118A  	fcall	stringdir
  2973  05E8  00F2               	movwf	___lldiv@divisor+2
  2974  05E9  160A  118A  200A  120A  118A  	fcall	stringdir
  2975  05EE  00F3               	movwf	___lldiv@divisor+3
  2976  05EF  0836               	movf	(sprintf@val+3)^(0+128),w
  2977  05F0  00F7               	movwf	___lldiv@dividend+3
  2978  05F1  0835               	movf	(sprintf@val+2)^(0+128),w
  2979  05F2  00F6               	movwf	___lldiv@dividend+2
  2980  05F3  0834               	movf	(sprintf@val+1)^(0+128),w
  2981  05F4  00F5               	movwf	___lldiv@dividend+1
  2982  05F5  0833               	movf	sprintf@val^(0+128),w
  2983  05F6  00F4               	movwf	___lldiv@dividend
  2984  05F7  160A  158A  2643  120A  118A  	fcall	___lldiv
  2985  05FC  0873               	movf	?___lldiv+3,w
  2986  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2987  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2988  05FF  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2989  0600  0872               	movf	?___lldiv+2,w
  2990  0601  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2991  0602  0871               	movf	?___lldiv+1,w
  2992  0603  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2993  0604  0870               	movf	?___lldiv,w
  2994  0605  00B9               	movwf	sprintf@tmpval^(0+128)
  2995  0606                     l3189:	
  2996                           
  2997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2998  0606  3000               	movlw	0
  2999  0607  00F3               	movwf	___llmod@divisor+3
  3000  0608  3000               	movlw	0
  3001  0609  00F2               	movwf	___llmod@divisor+2
  3002  060A  3000               	movlw	0
  3003  060B  00F1               	movwf	___llmod@divisor+1
  3004  060C  300A               	movlw	10
  3005  060D  00F0               	movwf	___llmod@divisor
  3006  060E  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3007  060F  00F7               	movwf	___llmod@dividend+3
  3008  0610  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3009  0611  00F6               	movwf	___llmod@dividend+2
  3010  0612  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3011  0613  00F5               	movwf	___llmod@dividend+1
  3012  0614  0839               	movf	sprintf@tmpval^(0+128),w
  3013  0615  00F4               	movwf	___llmod@dividend
  3014  0616  160A  158A  2596  120A  118A  	fcall	___llmod
  3015  061B  0873               	movf	?___llmod+3,w
  3016  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3017  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3018  061E  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3019  061F  0872               	movf	?___llmod+2,w
  3020  0620  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3021  0621  0871               	movf	?___llmod+1,w
  3022  0622  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3023  0623  0870               	movf	?___llmod,w
  3024  0624  00B9               	movwf	sprintf@tmpval^(0+128)
  3025  0625                     l3191:	
  3026                           
  3027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3028  0625  0839               	movf	sprintf@tmpval^(0+128),w
  3029  0626  3E30               	addlw	48
  3030  0627  00A5               	movwf	??_sprintf^(0+128)
  3031  0628  083D               	movf	sprintf@sp^(0+128),w
  3032  0629  0084               	movwf	4
  3033  062A  0825               	movf	??_sprintf^(0+128),w
  3034  062B  1383               	bcf	3,7	;select IRP bank0
  3035  062C  0080               	movwf	0
  3036  062D  3001               	movlw	1
  3037  062E  00A5               	movwf	??_sprintf^(0+128)
  3038  062F  0825               	movf	??_sprintf^(0+128),w
  3039  0630  07BD               	addwf	sprintf@sp^(0+128),f
  3040  0631                     l308:	
  3041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3042                           
  3043                           
  3044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3045  0631  3001               	movlw	1
  3046  0632  02C2               	subwf	sprintf@c^(0+128),f
  3047  0633  0A42               	incf	sprintf@c^(0+128),w
  3048  0634  1D03               	btfss	3,2
  3049  0635  2E37               	goto	u5401
  3050  0636  2E38               	goto	u5400
  3051  0637                     u5401:	
  3052  0637  2DCB               	goto	l3187
  3053  0638                     u5400:	
  3054  0638  2E4C               	goto	l3199
  3055  0639                     l3193:	
  3056                           
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3058  0639  3030               	movlw	48
  3059  063A  1683               	bsf	3,5	;RP0=1, select bank1
  3060  063B  1303               	bcf	3,6	;RP1=0, select bank1
  3061  063C  00A5               	movwf	??_sprintf^(0+128)
  3062  063D  083D               	movf	sprintf@sp^(0+128),w
  3063  063E  0084               	movwf	4
  3064  063F  0825               	movf	??_sprintf^(0+128),w
  3065  0640  1383               	bcf	3,7	;select IRP bank0
  3066  0641  0080               	movwf	0
  3067  0642                     l3195:	
  3068  0642  3001               	movlw	1
  3069  0643  00A5               	movwf	??_sprintf^(0+128)
  3070  0644  0825               	movf	??_sprintf^(0+128),w
  3071  0645  07BD               	addwf	sprintf@sp^(0+128),f
  3072  0646                     l3197:	
  3073                           
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3075  0646  30FF               	movlw	255
  3076  0647  07B7               	addwf	sprintf@eexp^(0+128),f
  3077  0648  1803               	skipnc
  3078  0649  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3079  064A  30FF               	movlw	255
  3080  064B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3081  064C                     l3199:	
  3082                           
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3084  064C  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3085  064D  3A80               	xorlw	128
  3086  064E  00FF               	movwf	btemp+1
  3087  064F  3080               	movlw	128
  3088  0650  027F               	subwf	btemp+1,w
  3089  0651  1D03               	skipz
  3090  0652  2E55               	goto	u5415
  3091  0653  3001               	movlw	1
  3092  0654  0237               	subwf	sprintf@eexp^(0+128),w
  3093  0655                     u5415:	
  3094  0655  1803               	skipnc
  3095  0656  2E58               	goto	u5411
  3096  0657  2E59               	goto	u5410
  3097  0658                     u5411:	
  3098  0658  2E39               	goto	l3193
  3099  0659                     u5410:	
  3100  0659                     l3201:	
  3101                           
  3102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3103  0659  1683               	bsf	3,5	;RP0=1, select bank1
  3104  065A  1303               	bcf	3,6	;RP1=0, select bank1
  3105  065B  0832               	movf	(sprintf@prec+1)^(0+128),w
  3106  065C  3A80               	xorlw	128
  3107  065D  00FF               	movwf	btemp+1
  3108  065E  3080               	movlw	128
  3109  065F  027F               	subwf	btemp+1,w
  3110  0660  1D03               	skipz
  3111  0661  2E64               	goto	u5425
  3112  0662  3009               	movlw	9
  3113  0663  0231               	subwf	sprintf@prec^(0+128),w
  3114  0664                     u5425:	
  3115  0664  1C03               	skipc
  3116  0665  2E67               	goto	u5421
  3117  0666  2E68               	goto	u5420
  3118  0667                     u5421:	
  3119  0667  2E6F               	goto	l3205
  3120  0668                     u5420:	
  3121  0668                     l3203:	
  3122                           
  3123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3124  0668  3008               	movlw	8
  3125  0669  1683               	bsf	3,5	;RP0=1, select bank1
  3126  066A  1303               	bcf	3,6	;RP1=0, select bank1
  3127  066B  00A5               	movwf	??_sprintf^(0+128)
  3128  066C  0825               	movf	??_sprintf^(0+128),w
  3129  066D  00C2               	movwf	sprintf@c^(0+128)
  3130  066E  2E75               	goto	l315
  3131  066F                     l3205:	
  3132                           
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3134  066F  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0670  1303               	bcf	3,6	;RP1=0, select bank1
  3136  0671  0831               	movf	sprintf@prec^(0+128),w
  3137  0672  00A5               	movwf	??_sprintf^(0+128)
  3138  0673  0825               	movf	??_sprintf^(0+128),w
  3139  0674  00C2               	movwf	sprintf@c^(0+128)
  3140  0675                     l315:	
  3141                           
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3143  0675  0842               	movf	sprintf@c^(0+128),w
  3144  0676  00A5               	movwf	??_sprintf^(0+128)
  3145  0677  01A6               	clrf	(??_sprintf^(0+128)+1)
  3146  0678  0825               	movf	??_sprintf^(0+128),w
  3147  0679  02B1               	subwf	sprintf@prec^(0+128),f
  3148  067A  0826               	movf	(??_sprintf+1)^(0+128),w
  3149  067B  1C03               	skipc
  3150  067C  03B2               	decf	(sprintf@prec+1)^(0+128),f
  3151  067D  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  3152  067E                     l3207:	
  3153                           
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3155  067E  0842               	movf	sprintf@c^(0+128),w
  3156  067F  1903               	btfsc	3,2
  3157  0680  2E82               	goto	u5431
  3158  0681  2E83               	goto	u5430
  3159  0682                     u5431:	
  3160  0682  2E8E               	goto	l3213
  3161  0683                     u5430:	
  3162  0683                     l3209:	
  3163                           
  3164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3165  0683  302E               	movlw	46
  3166  0684  00A5               	movwf	??_sprintf^(0+128)
  3167  0685  083D               	movf	sprintf@sp^(0+128),w
  3168  0686  0084               	movwf	4
  3169  0687  0825               	movf	??_sprintf^(0+128),w
  3170  0688  1383               	bcf	3,7	;select IRP bank0
  3171  0689  0080               	movwf	0
  3172  068A                     l3211:	
  3173  068A  3001               	movlw	1
  3174  068B  00A5               	movwf	??_sprintf^(0+128)
  3175  068C  0825               	movf	??_sprintf^(0+128),w
  3176  068D  07BD               	addwf	sprintf@sp^(0+128),f
  3177  068E                     l3213:	
  3178                           
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3180  068E  0842               	movf	sprintf@c^(0+128),w
  3181  068F  120A  158A  2140  120A  118A  	fcall	_scale
  3182  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0696  0841               	movf	?_scale+3,w
  3185  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0698  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0699  00AD               	movwf	(_sprintf$1079+3)^(0+128)
  3188  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3189  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3190  069C  0840               	movf	?_scale+2,w
  3191  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3192  069E  1303               	bcf	3,6	;RP1=0, select bank1
  3193  069F  00AC               	movwf	(_sprintf$1079+2)^(0+128)
  3194  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3195  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3196  06A2  083F               	movf	?_scale+1,w
  3197  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  3198  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  3199  06A5  00AB               	movwf	(_sprintf$1079+1)^(0+128)
  3200  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3201  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3202  06A8  083E               	movf	?_scale,w
  3203  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3204  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  3205  06AB  00AA               	movwf	_sprintf$1079^(0+128)
  3206  06AC                     l3215:	
  3207                           
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3209  06AC  082D               	movf	(_sprintf$1079+3)^(0+128),w
  3210  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3211  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3212  06AF  00AB               	movwf	___flmul@a+3
  3213  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3214  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3215  06B2  082C               	movf	(_sprintf$1079+2)^(0+128),w
  3216  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3217  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3218  06B5  00AA               	movwf	___flmul@a+2
  3219  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3220  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3221  06B8  082B               	movf	(_sprintf$1079+1)^(0+128),w
  3222  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3223  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3224  06BB  00A9               	movwf	___flmul@a+1
  3225  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3226  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3227  06BE  082A               	movf	_sprintf$1079^(0+128),w
  3228  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3229  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3230  06C1  00A8               	movwf	___flmul@a
  3231  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  3232  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  3233  06C4  0841               	movf	(sprintf@fval+3)^(0+128),w
  3234  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3235  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3236  06C7  00A7               	movwf	___flmul@b+3
  3237  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3238  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  3239  06CA  0840               	movf	(sprintf@fval+2)^(0+128),w
  3240  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3241  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3242  06CD  00A6               	movwf	___flmul@b+2
  3243  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  3244  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  3245  06D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  3246  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3247  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3248  06D3  00A5               	movwf	___flmul@b+1
  3249  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3250  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  3251  06D6  083E               	movf	sprintf@fval^(0+128),w
  3252  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3253  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3254  06D9  00A4               	movwf	___flmul@b
  3255  06DA  120A  158A  249F  120A  118A  	fcall	___flmul
  3256  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3257  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3258  06E1  0827               	movf	?___flmul+3,w
  3259  06E2  00D4               	movwf	___fltol@f1+3
  3260  06E3  0826               	movf	?___flmul+2,w
  3261  06E4  00D3               	movwf	___fltol@f1+2
  3262  06E5  0825               	movf	?___flmul+1,w
  3263  06E6  00D2               	movwf	___fltol@f1+1
  3264  06E7  0824               	movf	?___flmul,w
  3265  06E8  00D1               	movwf	___fltol@f1
  3266  06E9  160A  158A  2784  120A  118A  	fcall	___fltol
  3267  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3268  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  3269  06F0  0854               	movf	?___fltol+3,w
  3270  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3271  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3272  06F3  00B6               	movwf	(sprintf@val+3)^(0+128)
  3273  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3274  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3275  06F6  0853               	movf	?___fltol+2,w
  3276  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3277  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3278  06F9  00B5               	movwf	(sprintf@val+2)^(0+128)
  3279  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3280  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3281  06FC  0852               	movf	?___fltol+1,w
  3282  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3283  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3284  06FF  00B4               	movwf	(sprintf@val+1)^(0+128)
  3285  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0702  0851               	movf	?___fltol,w
  3288  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3289  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3290  0705  00B3               	movwf	sprintf@val^(0+128)
  3291                           
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3293  0706  2FA8               	goto	l3225
  3294  0707                     l3217:	
  3295                           
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3297  0707  0842               	movf	sprintf@c^(0+128),w
  3298  0708  00A5               	movwf	??_sprintf^(0+128)
  3299  0709  3001               	movlw	1
  3300  070A                     u5445:	
  3301  070A  1003               	clrc
  3302  070B  0DA5               	rlf	??_sprintf^(0+128),f
  3303  070C  3EFF               	addlw	-1
  3304  070D  1D03               	skipz
  3305  070E  2F0A               	goto	u5445
  3306  070F  1003               	clrc
  3307  0710  0D25               	rlf	??_sprintf^(0+128),w
  3308  0711  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3309  0712  0084               	movwf	4
  3310  0713  160A  118A  200A  120A  118A  	fcall	stringdir
  3311  0718  00F0               	movwf	___lldiv@divisor
  3312  0719  160A  118A  200A  120A  118A  	fcall	stringdir
  3313  071E  00F1               	movwf	___lldiv@divisor+1
  3314  071F  160A  118A  200A  120A  118A  	fcall	stringdir
  3315  0724  00F2               	movwf	___lldiv@divisor+2
  3316  0725  160A  118A  200A  120A  118A  	fcall	stringdir
  3317  072A  00F3               	movwf	___lldiv@divisor+3
  3318  072B  0836               	movf	(sprintf@val+3)^(0+128),w
  3319  072C  00F7               	movwf	___lldiv@dividend+3
  3320  072D  0835               	movf	(sprintf@val+2)^(0+128),w
  3321  072E  00F6               	movwf	___lldiv@dividend+2
  3322  072F  0834               	movf	(sprintf@val+1)^(0+128),w
  3323  0730  00F5               	movwf	___lldiv@dividend+1
  3324  0731  0833               	movf	sprintf@val^(0+128),w
  3325  0732  00F4               	movwf	___lldiv@dividend
  3326  0733  160A  158A  2643  120A  118A  	fcall	___lldiv
  3327  0738  0873               	movf	?___lldiv+3,w
  3328  0739  1683               	bsf	3,5	;RP0=1, select bank1
  3329  073A  1303               	bcf	3,6	;RP1=0, select bank1
  3330  073B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3331  073C  0872               	movf	?___lldiv+2,w
  3332  073D  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3333  073E  0871               	movf	?___lldiv+1,w
  3334  073F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3335  0740  0870               	movf	?___lldiv,w
  3336  0741  00B9               	movwf	sprintf@tmpval^(0+128)
  3337  0742                     l3219:	
  3338                           
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3340  0742  3000               	movlw	0
  3341  0743  00F3               	movwf	___llmod@divisor+3
  3342  0744  3000               	movlw	0
  3343  0745  00F2               	movwf	___llmod@divisor+2
  3344  0746  3000               	movlw	0
  3345  0747  00F1               	movwf	___llmod@divisor+1
  3346  0748  300A               	movlw	10
  3347  0749  00F0               	movwf	___llmod@divisor
  3348  074A  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3349  074B  00F7               	movwf	___llmod@dividend+3
  3350  074C  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3351  074D  00F6               	movwf	___llmod@dividend+2
  3352  074E  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3353  074F  00F5               	movwf	___llmod@dividend+1
  3354  0750  0839               	movf	sprintf@tmpval^(0+128),w
  3355  0751  00F4               	movwf	___llmod@dividend
  3356  0752  160A  158A  2596  120A  118A  	fcall	___llmod
  3357  0757  0873               	movf	?___llmod+3,w
  3358  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0759  1303               	bcf	3,6	;RP1=0, select bank1
  3360  075A  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3361  075B  0872               	movf	?___llmod+2,w
  3362  075C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3363  075D  0871               	movf	?___llmod+1,w
  3364  075E  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3365  075F  0870               	movf	?___llmod,w
  3366  0760  00B9               	movwf	sprintf@tmpval^(0+128)
  3367  0761                     l3221:	
  3368                           
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3370  0761  0839               	movf	sprintf@tmpval^(0+128),w
  3371  0762  3E30               	addlw	48
  3372  0763  00A5               	movwf	??_sprintf^(0+128)
  3373  0764  083D               	movf	sprintf@sp^(0+128),w
  3374  0765  0084               	movwf	4
  3375  0766  0825               	movf	??_sprintf^(0+128),w
  3376  0767  1383               	bcf	3,7	;select IRP bank0
  3377  0768  0080               	movwf	0
  3378  0769  3001               	movlw	1
  3379  076A  00A5               	movwf	??_sprintf^(0+128)
  3380  076B  0825               	movf	??_sprintf^(0+128),w
  3381  076C  07BD               	addwf	sprintf@sp^(0+128),f
  3382  076D                     l3223:	
  3383                           
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3385  076D  0842               	movf	sprintf@c^(0+128),w
  3386  076E  00A5               	movwf	??_sprintf^(0+128)
  3387  076F  3001               	movlw	1
  3388  0770                     u5455:	
  3389  0770  1003               	clrc
  3390  0771  0DA5               	rlf	??_sprintf^(0+128),f
  3391  0772  3EFF               	addlw	-1
  3392  0773  1D03               	skipz
  3393  0774  2F70               	goto	u5455
  3394  0775  1003               	clrc
  3395  0776  0D25               	rlf	??_sprintf^(0+128),w
  3396  0777  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3397  0778  0084               	movwf	4
  3398  0779  160A  118A  200A  120A  118A  	fcall	stringdir
  3399  077E  00F0               	movwf	___llmod@divisor
  3400  077F  160A  118A  200A  120A  118A  	fcall	stringdir
  3401  0784  00F1               	movwf	___llmod@divisor+1
  3402  0785  160A  118A  200A  120A  118A  	fcall	stringdir
  3403  078A  00F2               	movwf	___llmod@divisor+2
  3404  078B  160A  118A  200A  120A  118A  	fcall	stringdir
  3405  0790  00F3               	movwf	___llmod@divisor+3
  3406  0791  0836               	movf	(sprintf@val+3)^(0+128),w
  3407  0792  00F7               	movwf	___llmod@dividend+3
  3408  0793  0835               	movf	(sprintf@val+2)^(0+128),w
  3409  0794  00F6               	movwf	___llmod@dividend+2
  3410  0795  0834               	movf	(sprintf@val+1)^(0+128),w
  3411  0796  00F5               	movwf	___llmod@dividend+1
  3412  0797  0833               	movf	sprintf@val^(0+128),w
  3413  0798  00F4               	movwf	___llmod@dividend
  3414  0799  160A  158A  2596  120A  118A  	fcall	___llmod
  3415  079E  0873               	movf	?___llmod+3,w
  3416  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3417  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  3418  07A1  00B6               	movwf	(sprintf@val+3)^(0+128)
  3419  07A2  0872               	movf	?___llmod+2,w
  3420  07A3  00B5               	movwf	(sprintf@val+2)^(0+128)
  3421  07A4  0871               	movf	?___llmod+1,w
  3422  07A5  00B4               	movwf	(sprintf@val+1)^(0+128)
  3423  07A6  0870               	movf	?___llmod,w
  3424  07A7  00B3               	movwf	sprintf@val^(0+128)
  3425  07A8                     l3225:	
  3426                           
  3427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3428  07A8  3001               	movlw	1
  3429  07A9  02C2               	subwf	sprintf@c^(0+128),f
  3430  07AA  0A42               	incf	sprintf@c^(0+128),w
  3431  07AB  1D03               	btfss	3,2
  3432  07AC  2FAE               	goto	u5461
  3433  07AD  2FAF               	goto	u5460
  3434  07AE                     u5461:	
  3435  07AE  2F07               	goto	l3217
  3436  07AF                     u5460:	
  3437  07AF  2FC1               	goto	l3233
  3438  07B0                     l3227:	
  3439                           
  3440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3441  07B0  3030               	movlw	48
  3442  07B1  00A5               	movwf	??_sprintf^(0+128)
  3443  07B2  083D               	movf	sprintf@sp^(0+128),w
  3444  07B3  0084               	movwf	4
  3445  07B4  0825               	movf	??_sprintf^(0+128),w
  3446  07B5  1383               	bcf	3,7	;select IRP bank0
  3447  07B6  0080               	movwf	0
  3448  07B7                     l3229:	
  3449  07B7  3001               	movlw	1
  3450  07B8  00A5               	movwf	??_sprintf^(0+128)
  3451  07B9  0825               	movf	??_sprintf^(0+128),w
  3452  07BA  07BD               	addwf	sprintf@sp^(0+128),f
  3453  07BB                     l3231:	
  3454                           
  3455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3456  07BB  30FF               	movlw	255
  3457  07BC  07B1               	addwf	sprintf@prec^(0+128),f
  3458  07BD  1803               	skipnc
  3459  07BE  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  3460  07BF  30FF               	movlw	255
  3461  07C0  07B2               	addwf	(sprintf@prec+1)^(0+128),f
  3462  07C1                     l3233:	
  3463                           
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3465  07C1  0831               	movf	sprintf@prec^(0+128),w
  3466  07C2  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  3467  07C3  1D03               	btfss	3,2
  3468  07C4  2FC6               	goto	u5471
  3469  07C5  2FC7               	goto	u5470
  3470  07C6                     u5471:	
  3471  07C6  2FB0               	goto	l3227
  3472  07C7                     u5470:	
  3473  07C7  2FDC               	goto	l3241
  3474  07C8                     l3235:	
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3477  07C8  3003               	movlw	3
  3478  07C9  052F               	andwf	sprintf@flag^(0+128),w
  3479  07CA  00A5               	movwf	??_sprintf^(0+128)
  3480  07CB  3000               	movlw	0
  3481  07CC  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3482  07CD  00A6               	movwf	(??_sprintf+1)^(0+128)
  3483  07CE  0825               	movf	??_sprintf^(0+128),w
  3484  07CF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3485  07D0  1903               	btfsc	3,2
  3486  07D1  2FD3               	goto	u5481
  3487  07D2  2FD4               	goto	u5480
  3488  07D3                     u5481:	
  3489  07D3  2FDC               	goto	l3241
  3490  07D4                     u5480:	
  3491  07D4                     l3237:	
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3494  07D4  302D               	movlw	45
  3495  07D5  00A5               	movwf	??_sprintf^(0+128)
  3496  07D6  083D               	movf	sprintf@sp^(0+128),w
  3497  07D7  0084               	movwf	4
  3498  07D8  0825               	movf	??_sprintf^(0+128),w
  3499  07D9  1383               	bcf	3,7	;select IRP bank0
  3500  07DA  0080               	movwf	0
  3501  07DB  2A4E               	goto	l3087
  3502  07DC                     l3241:	
  3503                           
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3505  07DC  3001               	movlw	1
  3506  07DD  07A0               	addwf	sprintf@f^(0+128),f
  3507  07DE  30FF               	movlw	-1
  3508  07DF  0720               	addwf	sprintf@f^(0+128),w
  3509  07E0  0084               	movwf	4
  3510  07E1  160A  118A  200A  120A  118A  	fcall	stringdir
  3511  07E6  00A5               	movwf	??_sprintf^(0+128)
  3512  07E7  0825               	movf	??_sprintf^(0+128),w
  3513  07E8  00C2               	movwf	sprintf@c^(0+128)
  3514  07E9  0842               	movf	sprintf@c^(0+128),w
  3515  07EA  1D03               	btfss	3,2
  3516  07EB  2FED               	goto	u5491
  3517  07EC  2FEE               	goto	u5490
  3518  07ED                     u5491:	
  3519  07ED  2A41               	goto	l3083
  3520  07EE                     u5490:	
  3521  07EE                     l3243:	
  3522                           
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3524  07EE  083D               	movf	sprintf@sp^(0+128),w
  3525  07EF  0084               	movwf	4
  3526  07F0  1383               	bcf	3,7	;select IRP bank0
  3527  07F1  0180               	clrf	0
  3528  07F2                     l325:	
  3529  07F2  0008               	return
  3530  07F3                     __end_of_sprintf:	
  3531                           
  3532                           	psect	text5
  3533  0940                     __ptext5:	
  3534 ;; *************** function _scale *****************
  3535 ;; Defined at:
  3536 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  scl             1    wreg     char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  scl             1   48[BANK0 ] char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  4   30[BANK0 ] char 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       4       0       0       0
  3551 ;;      Locals:         0       5       0       0       0
  3552 ;;      Temps:          0      10       0       0       0
  3553 ;;      Totals:         0      19       0       0       0
  3554 ;;Total ram usage:       19 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    2
  3557 ;; This function calls:
  3558 ;;		___awdiv
  3559 ;;		___awmod
  3560 ;;		___flmul
  3561 ;; This function is called by:
  3562 ;;		_sprintf
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _scale
  3568  0940                     _scale:	
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3572                           ;scale@scl stored from wreg
  3573  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0942  00D0               	movwf	scale@scl
  3576  0943                     l2749:	
  3577                           
  3578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3579  0943  1FD0               	btfss	scale@scl,7
  3580  0944  2946               	goto	u4271
  3581  0945  2947               	goto	u4270
  3582  0946                     u4271:	
  3583  0946  2AF4               	goto	l2771
  3584  0947                     u4270:	
  3585  0947                     l2751:	
  3586                           
  3587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3588  0947  09D0               	comf	scale@scl,f
  3589  0948  0AD0               	incf	scale@scl,f
  3590  0949                     l2753:	
  3591                           
  3592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3593  0949  0850               	movf	scale@scl,w
  3594  094A  3A80               	xorlw	128
  3595  094B  3E12               	addlw	-238
  3596  094C  1C03               	skipc
  3597  094D  294F               	goto	u4281
  3598  094E  2950               	goto	u4280
  3599  094F                     u4281:	
  3600  094F  2A38               	goto	l2761
  3601  0950                     u4280:	
  3602  0950                     l2755:	
  3603                           
  3604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3605  0950  300A               	movlw	10
  3606  0951  00F7               	movwf	___awdiv@divisor
  3607  0952  3000               	movlw	0
  3608  0953  00F8               	movwf	___awdiv@divisor+1
  3609  0954  0850               	movf	scale@scl,w
  3610  0955  00F2               	movwf	___awmod@dividend
  3611  0956  01F3               	clrf	___awmod@dividend+1
  3612  0957  1BF2               	btfsc	___awmod@dividend,7
  3613  0958  03F3               	decf	___awmod@dividend+1,f
  3614  0959  3064               	movlw	100
  3615  095A  00F0               	movwf	___awmod@divisor
  3616  095B  3000               	movlw	0
  3617  095C  00F1               	movwf	___awmod@divisor+1
  3618  095D  160A  158A  25EA  120A  158A  	fcall	___awmod
  3619  0962  0871               	movf	?___awmod+1,w
  3620  0963  00FA               	movwf	___awdiv@dividend+1
  3621  0964  0870               	movf	?___awmod,w
  3622  0965  00F9               	movwf	___awdiv@dividend
  3623  0966  160A  158A  26A9  120A  158A  	fcall	___awdiv
  3624  096B  0877               	movf	?___awdiv,w
  3625  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3626  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3627  096E  00C2               	movwf	??_scale
  3628  096F  3001               	movlw	1
  3629  0970                     u4295:	
  3630  0970  1003               	clrc
  3631  0971  0DC2               	rlf	??_scale,f
  3632  0972  3EFF               	addlw	-1
  3633  0973  1D03               	skipz
  3634  0974  2970               	goto	u4295
  3635  0975  1003               	clrc
  3636  0976  0D42               	rlf	??_scale,w
  3637  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3638  0978  0084               	movwf	4
  3639  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  3640  097E  00C3               	movwf	??_scale+1
  3641  097F  160A  118A  200A  120A  158A  	fcall	stringdir
  3642  0984  00C4               	movwf	??_scale+2
  3643  0985  160A  118A  200A  120A  158A  	fcall	stringdir
  3644  098A  00C5               	movwf	??_scale+3
  3645  098B  160A  118A  200A  120A  158A  	fcall	stringdir
  3646  0990  00C6               	movwf	??_scale+4
  3647  0991  0846               	movf	??_scale+4,w
  3648  0992  00A7               	movwf	___flmul@b+3
  3649  0993  0845               	movf	??_scale+3,w
  3650  0994  00A6               	movwf	___flmul@b+2
  3651  0995  0844               	movf	??_scale+2,w
  3652  0996  00A5               	movwf	___flmul@b+1
  3653  0997  0843               	movf	??_scale+1,w
  3654  0998  00A4               	movwf	___flmul@b
  3655  0999  3064               	movlw	100
  3656  099A  00F7               	movwf	___awdiv@divisor
  3657  099B  3000               	movlw	0
  3658  099C  00F8               	movwf	___awdiv@divisor+1
  3659  099D  0850               	movf	scale@scl,w
  3660  099E  00F9               	movwf	___awdiv@dividend
  3661  099F  01FA               	clrf	___awdiv@dividend+1
  3662  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3663  09A1  03FA               	decf	___awdiv@dividend+1,f
  3664  09A2  160A  158A  26A9  120A  158A  	fcall	___awdiv
  3665  09A7  0877               	movf	?___awdiv,w
  3666  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3667  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3668  09AA  00C7               	movwf	??_scale+5
  3669  09AB  3001               	movlw	1
  3670  09AC                     u4305:	
  3671  09AC  1003               	clrc
  3672  09AD  0DC7               	rlf	??_scale+5,f
  3673  09AE  3EFF               	addlw	-1
  3674  09AF  1D03               	skipz
  3675  09B0  29AC               	goto	u4305
  3676  09B1  1003               	clrc
  3677  09B2  0D47               	rlf	??_scale+5,w
  3678  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3679  09B4  0084               	movwf	4
  3680  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  3681  09BA  00C8               	movwf	??_scale+6
  3682  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  3683  09C0  00C9               	movwf	??_scale+7
  3684  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  3685  09C6  00CA               	movwf	??_scale+8
  3686  09C7  160A  118A  200A  120A  158A  	fcall	stringdir
  3687  09CC  00CB               	movwf	??_scale+9
  3688  09CD  084B               	movf	??_scale+9,w
  3689  09CE  00AB               	movwf	___flmul@a+3
  3690  09CF  084A               	movf	??_scale+8,w
  3691  09D0  00AA               	movwf	___flmul@a+2
  3692  09D1  0849               	movf	??_scale+7,w
  3693  09D2  00A9               	movwf	___flmul@a+1
  3694  09D3  0848               	movf	??_scale+6,w
  3695  09D4  00A8               	movwf	___flmul@a
  3696  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3697  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3698  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3699  09DC  0827               	movf	?___flmul+3,w
  3700  09DD  00CF               	movwf	_scale$1078+3
  3701  09DE  0826               	movf	?___flmul+2,w
  3702  09DF  00CE               	movwf	_scale$1078+2
  3703  09E0  0825               	movf	?___flmul+1,w
  3704  09E1  00CD               	movwf	_scale$1078+1
  3705  09E2  0824               	movf	?___flmul,w
  3706  09E3  00CC               	movwf	_scale$1078
  3707                           
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3709  09E4  300A               	movlw	10
  3710  09E5  00F0               	movwf	___awmod@divisor
  3711  09E6  3000               	movlw	0
  3712  09E7  00F1               	movwf	___awmod@divisor+1
  3713  09E8  0850               	movf	scale@scl,w
  3714  09E9  00F2               	movwf	___awmod@dividend
  3715  09EA  01F3               	clrf	___awmod@dividend+1
  3716  09EB  1BF2               	btfsc	___awmod@dividend,7
  3717  09EC  03F3               	decf	___awmod@dividend+1,f
  3718  09ED  160A  158A  25EA  120A  158A  	fcall	___awmod
  3719  09F2  0870               	movf	?___awmod,w
  3720  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3721  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3722  09F5  00C2               	movwf	??_scale
  3723  09F6  3001               	movlw	1
  3724  09F7                     u4315:	
  3725  09F7  1003               	clrc
  3726  09F8  0DC2               	rlf	??_scale,f
  3727  09F9  3EFF               	addlw	-1
  3728  09FA  1D03               	skipz
  3729  09FB  29F7               	goto	u4315
  3730  09FC  1003               	clrc
  3731  09FD  0D42               	rlf	??_scale,w
  3732  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3733  09FF  0084               	movwf	4
  3734  0A00  160A  118A  200A  120A  158A  	fcall	stringdir
  3735  0A05  00C3               	movwf	??_scale+1
  3736  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  3737  0A0B  00C4               	movwf	??_scale+2
  3738  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3739  0A11  00C5               	movwf	??_scale+3
  3740  0A12  160A  118A  200A  120A  158A  	fcall	stringdir
  3741  0A17  00C6               	movwf	??_scale+4
  3742  0A18  0846               	movf	??_scale+4,w
  3743  0A19  00A7               	movwf	___flmul@b+3
  3744  0A1A  0845               	movf	??_scale+3,w
  3745  0A1B  00A6               	movwf	___flmul@b+2
  3746  0A1C  0844               	movf	??_scale+2,w
  3747  0A1D  00A5               	movwf	___flmul@b+1
  3748  0A1E  0843               	movf	??_scale+1,w
  3749  0A1F  00A4               	movwf	___flmul@b
  3750  0A20  084F               	movf	_scale$1078+3,w
  3751  0A21  00AB               	movwf	___flmul@a+3
  3752  0A22  084E               	movf	_scale$1078+2,w
  3753  0A23  00AA               	movwf	___flmul@a+2
  3754  0A24  084D               	movf	_scale$1078+1,w
  3755  0A25  00A9               	movwf	___flmul@a+1
  3756  0A26  084C               	movf	_scale$1078,w
  3757  0A27  00A8               	movwf	___flmul@a
  3758  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3759  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0A2F  0827               	movf	?___flmul+3,w
  3762  0A30  00C1               	movwf	?_scale+3
  3763  0A31  0826               	movf	?___flmul+2,w
  3764  0A32  00C0               	movwf	?_scale+2
  3765  0A33  0825               	movf	?___flmul+1,w
  3766  0A34  00BF               	movwf	?_scale+1
  3767  0A35  0824               	movf	?___flmul,w
  3768  0A36  00BE               	movwf	?_scale
  3769  0A37  2C9E               	goto	l269
  3770  0A38                     l2761:	
  3771  0A38  0850               	movf	scale@scl,w
  3772  0A39  3A80               	xorlw	128
  3773  0A3A  3E75               	addlw	-139
  3774  0A3B  1C03               	skipc
  3775  0A3C  2A3E               	goto	u4321
  3776  0A3D  2A3F               	goto	u4320
  3777  0A3E                     u4321:	
  3778  0A3E  2AC7               	goto	l2767
  3779  0A3F                     u4320:	
  3780  0A3F                     l2763:	
  3781                           
  3782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3783  0A3F  300A               	movlw	10
  3784  0A40  00F0               	movwf	___awmod@divisor
  3785  0A41  3000               	movlw	0
  3786  0A42  00F1               	movwf	___awmod@divisor+1
  3787  0A43  0850               	movf	scale@scl,w
  3788  0A44  00F2               	movwf	___awmod@dividend
  3789  0A45  01F3               	clrf	___awmod@dividend+1
  3790  0A46  1BF2               	btfsc	___awmod@dividend,7
  3791  0A47  03F3               	decf	___awmod@dividend+1,f
  3792  0A48  160A  158A  25EA  120A  158A  	fcall	___awmod
  3793  0A4D  0870               	movf	?___awmod,w
  3794  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0A50  00C2               	movwf	??_scale
  3797  0A51  3001               	movlw	1
  3798  0A52                     u4335:	
  3799  0A52  1003               	clrc
  3800  0A53  0DC2               	rlf	??_scale,f
  3801  0A54  3EFF               	addlw	-1
  3802  0A55  1D03               	skipz
  3803  0A56  2A52               	goto	u4335
  3804  0A57  1003               	clrc
  3805  0A58  0D42               	rlf	??_scale,w
  3806  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3807  0A5A  0084               	movwf	4
  3808  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  3809  0A60  00C3               	movwf	??_scale+1
  3810  0A61  160A  118A  200A  120A  158A  	fcall	stringdir
  3811  0A66  00C4               	movwf	??_scale+2
  3812  0A67  160A  118A  200A  120A  158A  	fcall	stringdir
  3813  0A6C  00C5               	movwf	??_scale+3
  3814  0A6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3815  0A72  00C6               	movwf	??_scale+4
  3816  0A73  0846               	movf	??_scale+4,w
  3817  0A74  00A7               	movwf	___flmul@b+3
  3818  0A75  0845               	movf	??_scale+3,w
  3819  0A76  00A6               	movwf	___flmul@b+2
  3820  0A77  0844               	movf	??_scale+2,w
  3821  0A78  00A5               	movwf	___flmul@b+1
  3822  0A79  0843               	movf	??_scale+1,w
  3823  0A7A  00A4               	movwf	___flmul@b
  3824  0A7B  300A               	movlw	10
  3825  0A7C  00F7               	movwf	___awdiv@divisor
  3826  0A7D  3000               	movlw	0
  3827  0A7E  00F8               	movwf	___awdiv@divisor+1
  3828  0A7F  0850               	movf	scale@scl,w
  3829  0A80  00F9               	movwf	___awdiv@dividend
  3830  0A81  01FA               	clrf	___awdiv@dividend+1
  3831  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3832  0A83  03FA               	decf	___awdiv@dividend+1,f
  3833  0A84  160A  158A  26A9  120A  158A  	fcall	___awdiv
  3834  0A89  0877               	movf	?___awdiv,w
  3835  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0A8C  00C7               	movwf	??_scale+5
  3838  0A8D  3001               	movlw	1
  3839  0A8E                     u4345:	
  3840  0A8E  1003               	clrc
  3841  0A8F  0DC7               	rlf	??_scale+5,f
  3842  0A90  3EFF               	addlw	-1
  3843  0A91  1D03               	skipz
  3844  0A92  2A8E               	goto	u4345
  3845  0A93  1003               	clrc
  3846  0A94  0D47               	rlf	??_scale+5,w
  3847  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3848  0A96  0084               	movwf	4
  3849  0A97  160A  118A  200A  120A  158A  	fcall	stringdir
  3850  0A9C  00C8               	movwf	??_scale+6
  3851  0A9D  160A  118A  200A  120A  158A  	fcall	stringdir
  3852  0AA2  00C9               	movwf	??_scale+7
  3853  0AA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3854  0AA8  00CA               	movwf	??_scale+8
  3855  0AA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3856  0AAE  00CB               	movwf	??_scale+9
  3857  0AAF  084B               	movf	??_scale+9,w
  3858  0AB0  00AB               	movwf	___flmul@a+3
  3859  0AB1  084A               	movf	??_scale+8,w
  3860  0AB2  00AA               	movwf	___flmul@a+2
  3861  0AB3  0849               	movf	??_scale+7,w
  3862  0AB4  00A9               	movwf	___flmul@a+1
  3863  0AB5  0848               	movf	??_scale+6,w
  3864  0AB6  00A8               	movwf	___flmul@a
  3865  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3866  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0ABE  0827               	movf	?___flmul+3,w
  3869  0ABF  00C1               	movwf	?_scale+3
  3870  0AC0  0826               	movf	?___flmul+2,w
  3871  0AC1  00C0               	movwf	?_scale+2
  3872  0AC2  0825               	movf	?___flmul+1,w
  3873  0AC3  00BF               	movwf	?_scale+1
  3874  0AC4  0824               	movf	?___flmul,w
  3875  0AC5  00BE               	movwf	?_scale
  3876  0AC6  2C9E               	goto	l269
  3877  0AC7                     l2767:	
  3878                           
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3880  0AC7  0850               	movf	scale@scl,w
  3881  0AC8  00C2               	movwf	??_scale
  3882  0AC9  3001               	movlw	1
  3883  0ACA                     u4355:	
  3884  0ACA  1003               	clrc
  3885  0ACB  0DC2               	rlf	??_scale,f
  3886  0ACC  3EFF               	addlw	-1
  3887  0ACD  1D03               	skipz
  3888  0ACE  2ACA               	goto	u4355
  3889  0ACF  1003               	clrc
  3890  0AD0  0D42               	rlf	??_scale,w
  3891  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3892  0AD2  0084               	movwf	4
  3893  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  3894  0AD8  00C3               	movwf	??_scale+1
  3895  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  3896  0ADE  00C4               	movwf	??_scale+2
  3897  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  3898  0AE4  00C5               	movwf	??_scale+3
  3899  0AE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3900  0AEA  00C6               	movwf	??_scale+4
  3901  0AEB  0846               	movf	??_scale+4,w
  3902  0AEC  00C1               	movwf	?_scale+3
  3903  0AED  0845               	movf	??_scale+3,w
  3904  0AEE  00C0               	movwf	?_scale+2
  3905  0AEF  0844               	movf	??_scale+2,w
  3906  0AF0  00BF               	movwf	?_scale+1
  3907  0AF1  0843               	movf	??_scale+1,w
  3908  0AF2  00BE               	movwf	?_scale
  3909  0AF3  2C9E               	goto	l269
  3910  0AF4                     l2771:	
  3911                           
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3913  0AF4  0850               	movf	scale@scl,w
  3914  0AF5  3A80               	xorlw	128
  3915  0AF6  3E12               	addlw	-238
  3916  0AF7  1C03               	skipc
  3917  0AF8  2AFA               	goto	u4361
  3918  0AF9  2AFB               	goto	u4360
  3919  0AFA                     u4361:	
  3920  0AFA  2BE3               	goto	l2779
  3921  0AFB                     u4360:	
  3922  0AFB                     l2773:	
  3923                           
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3925  0AFB  300A               	movlw	10
  3926  0AFC  00F7               	movwf	___awdiv@divisor
  3927  0AFD  3000               	movlw	0
  3928  0AFE  00F8               	movwf	___awdiv@divisor+1
  3929  0AFF  0850               	movf	scale@scl,w
  3930  0B00  00F2               	movwf	___awmod@dividend
  3931  0B01  01F3               	clrf	___awmod@dividend+1
  3932  0B02  1BF2               	btfsc	___awmod@dividend,7
  3933  0B03  03F3               	decf	___awmod@dividend+1,f
  3934  0B04  3064               	movlw	100
  3935  0B05  00F0               	movwf	___awmod@divisor
  3936  0B06  3000               	movlw	0
  3937  0B07  00F1               	movwf	___awmod@divisor+1
  3938  0B08  160A  158A  25EA  120A  158A  	fcall	___awmod
  3939  0B0D  0871               	movf	?___awmod+1,w
  3940  0B0E  00FA               	movwf	___awdiv@dividend+1
  3941  0B0F  0870               	movf	?___awmod,w
  3942  0B10  00F9               	movwf	___awdiv@dividend
  3943  0B11  160A  158A  26A9  120A  158A  	fcall	___awdiv
  3944  0B16  0877               	movf	?___awdiv,w
  3945  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3946  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3947  0B19  00C2               	movwf	??_scale
  3948  0B1A  3001               	movlw	1
  3949  0B1B                     u4375:	
  3950  0B1B  1003               	clrc
  3951  0B1C  0DC2               	rlf	??_scale,f
  3952  0B1D  3EFF               	addlw	-1
  3953  0B1E  1D03               	skipz
  3954  0B1F  2B1B               	goto	u4375
  3955  0B20  1003               	clrc
  3956  0B21  0D42               	rlf	??_scale,w
  3957  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3958  0B23  0084               	movwf	4
  3959  0B24  160A  118A  200A  120A  158A  	fcall	stringdir
  3960  0B29  00C3               	movwf	??_scale+1
  3961  0B2A  160A  118A  200A  120A  158A  	fcall	stringdir
  3962  0B2F  00C4               	movwf	??_scale+2
  3963  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  3964  0B35  00C5               	movwf	??_scale+3
  3965  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  3966  0B3B  00C6               	movwf	??_scale+4
  3967  0B3C  0846               	movf	??_scale+4,w
  3968  0B3D  00A7               	movwf	___flmul@b+3
  3969  0B3E  0845               	movf	??_scale+3,w
  3970  0B3F  00A6               	movwf	___flmul@b+2
  3971  0B40  0844               	movf	??_scale+2,w
  3972  0B41  00A5               	movwf	___flmul@b+1
  3973  0B42  0843               	movf	??_scale+1,w
  3974  0B43  00A4               	movwf	___flmul@b
  3975  0B44  3064               	movlw	100
  3976  0B45  00F7               	movwf	___awdiv@divisor
  3977  0B46  3000               	movlw	0
  3978  0B47  00F8               	movwf	___awdiv@divisor+1
  3979  0B48  0850               	movf	scale@scl,w
  3980  0B49  00F9               	movwf	___awdiv@dividend
  3981  0B4A  01FA               	clrf	___awdiv@dividend+1
  3982  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3983  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3984  0B4D  160A  158A  26A9  120A  158A  	fcall	___awdiv
  3985  0B52  0877               	movf	?___awdiv,w
  3986  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0B55  00C7               	movwf	??_scale+5
  3989  0B56  3001               	movlw	1
  3990  0B57                     u4385:	
  3991  0B57  1003               	clrc
  3992  0B58  0DC7               	rlf	??_scale+5,f
  3993  0B59  3EFF               	addlw	-1
  3994  0B5A  1D03               	skipz
  3995  0B5B  2B57               	goto	u4385
  3996  0B5C  1003               	clrc
  3997  0B5D  0D47               	rlf	??_scale+5,w
  3998  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3999  0B5F  0084               	movwf	4
  4000  0B60  160A  118A  200A  120A  158A  	fcall	stringdir
  4001  0B65  00C8               	movwf	??_scale+6
  4002  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  4003  0B6B  00C9               	movwf	??_scale+7
  4004  0B6C  160A  118A  200A  120A  158A  	fcall	stringdir
  4005  0B71  00CA               	movwf	??_scale+8
  4006  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  4007  0B77  00CB               	movwf	??_scale+9
  4008  0B78  084B               	movf	??_scale+9,w
  4009  0B79  00AB               	movwf	___flmul@a+3
  4010  0B7A  084A               	movf	??_scale+8,w
  4011  0B7B  00AA               	movwf	___flmul@a+2
  4012  0B7C  0849               	movf	??_scale+7,w
  4013  0B7D  00A9               	movwf	___flmul@a+1
  4014  0B7E  0848               	movf	??_scale+6,w
  4015  0B7F  00A8               	movwf	___flmul@a
  4016  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4017  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0B87  0827               	movf	?___flmul+3,w
  4020  0B88  00CF               	movwf	_scale$1078+3
  4021  0B89  0826               	movf	?___flmul+2,w
  4022  0B8A  00CE               	movwf	_scale$1078+2
  4023  0B8B  0825               	movf	?___flmul+1,w
  4024  0B8C  00CD               	movwf	_scale$1078+1
  4025  0B8D  0824               	movf	?___flmul,w
  4026  0B8E  00CC               	movwf	_scale$1078
  4027                           
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4029  0B8F  300A               	movlw	10
  4030  0B90  00F0               	movwf	___awmod@divisor
  4031  0B91  3000               	movlw	0
  4032  0B92  00F1               	movwf	___awmod@divisor+1
  4033  0B93  0850               	movf	scale@scl,w
  4034  0B94  00F2               	movwf	___awmod@dividend
  4035  0B95  01F3               	clrf	___awmod@dividend+1
  4036  0B96  1BF2               	btfsc	___awmod@dividend,7
  4037  0B97  03F3               	decf	___awmod@dividend+1,f
  4038  0B98  160A  158A  25EA  120A  158A  	fcall	___awmod
  4039  0B9D  0870               	movf	?___awmod,w
  4040  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0BA0  00C2               	movwf	??_scale
  4043  0BA1  3001               	movlw	1
  4044  0BA2                     u4395:	
  4045  0BA2  1003               	clrc
  4046  0BA3  0DC2               	rlf	??_scale,f
  4047  0BA4  3EFF               	addlw	-1
  4048  0BA5  1D03               	skipz
  4049  0BA6  2BA2               	goto	u4395
  4050  0BA7  1003               	clrc
  4051  0BA8  0D42               	rlf	??_scale,w
  4052  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4053  0BAA  0084               	movwf	4
  4054  0BAB  160A  118A  200A  120A  158A  	fcall	stringdir
  4055  0BB0  00C3               	movwf	??_scale+1
  4056  0BB1  160A  118A  200A  120A  158A  	fcall	stringdir
  4057  0BB6  00C4               	movwf	??_scale+2
  4058  0BB7  160A  118A  200A  120A  158A  	fcall	stringdir
  4059  0BBC  00C5               	movwf	??_scale+3
  4060  0BBD  160A  118A  200A  120A  158A  	fcall	stringdir
  4061  0BC2  00C6               	movwf	??_scale+4
  4062  0BC3  0846               	movf	??_scale+4,w
  4063  0BC4  00A7               	movwf	___flmul@b+3
  4064  0BC5  0845               	movf	??_scale+3,w
  4065  0BC6  00A6               	movwf	___flmul@b+2
  4066  0BC7  0844               	movf	??_scale+2,w
  4067  0BC8  00A5               	movwf	___flmul@b+1
  4068  0BC9  0843               	movf	??_scale+1,w
  4069  0BCA  00A4               	movwf	___flmul@b
  4070  0BCB  084F               	movf	_scale$1078+3,w
  4071  0BCC  00AB               	movwf	___flmul@a+3
  4072  0BCD  084E               	movf	_scale$1078+2,w
  4073  0BCE  00AA               	movwf	___flmul@a+2
  4074  0BCF  084D               	movf	_scale$1078+1,w
  4075  0BD0  00A9               	movwf	___flmul@a+1
  4076  0BD1  084C               	movf	_scale$1078,w
  4077  0BD2  00A8               	movwf	___flmul@a
  4078  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4079  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0BDA  0827               	movf	?___flmul+3,w
  4082  0BDB  00C1               	movwf	?_scale+3
  4083  0BDC  0826               	movf	?___flmul+2,w
  4084  0BDD  00C0               	movwf	?_scale+2
  4085  0BDE  0825               	movf	?___flmul+1,w
  4086  0BDF  00BF               	movwf	?_scale+1
  4087  0BE0  0824               	movf	?___flmul,w
  4088  0BE1  00BE               	movwf	?_scale
  4089  0BE2  2C9E               	goto	l269
  4090  0BE3                     l2779:	
  4091  0BE3  0850               	movf	scale@scl,w
  4092  0BE4  3A80               	xorlw	128
  4093  0BE5  3E75               	addlw	-139
  4094  0BE6  1C03               	skipc
  4095  0BE7  2BE9               	goto	u4401
  4096  0BE8  2BEA               	goto	u4400
  4097  0BE9                     u4401:	
  4098  0BE9  2C72               	goto	l2785
  4099  0BEA                     u4400:	
  4100  0BEA                     l2781:	
  4101                           
  4102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4103  0BEA  300A               	movlw	10
  4104  0BEB  00F0               	movwf	___awmod@divisor
  4105  0BEC  3000               	movlw	0
  4106  0BED  00F1               	movwf	___awmod@divisor+1
  4107  0BEE  0850               	movf	scale@scl,w
  4108  0BEF  00F2               	movwf	___awmod@dividend
  4109  0BF0  01F3               	clrf	___awmod@dividend+1
  4110  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4111  0BF2  03F3               	decf	___awmod@dividend+1,f
  4112  0BF3  160A  158A  25EA  120A  158A  	fcall	___awmod
  4113  0BF8  0870               	movf	?___awmod,w
  4114  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4115  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4116  0BFB  00C2               	movwf	??_scale
  4117  0BFC  3001               	movlw	1
  4118  0BFD                     u4415:	
  4119  0BFD  1003               	clrc
  4120  0BFE  0DC2               	rlf	??_scale,f
  4121  0BFF  3EFF               	addlw	-1
  4122  0C00  1D03               	skipz
  4123  0C01  2BFD               	goto	u4415
  4124  0C02  1003               	clrc
  4125  0C03  0D42               	rlf	??_scale,w
  4126  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4127  0C05  0084               	movwf	4
  4128  0C06  160A  118A  200A  120A  158A  	fcall	stringdir
  4129  0C0B  00C3               	movwf	??_scale+1
  4130  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4131  0C11  00C4               	movwf	??_scale+2
  4132  0C12  160A  118A  200A  120A  158A  	fcall	stringdir
  4133  0C17  00C5               	movwf	??_scale+3
  4134  0C18  160A  118A  200A  120A  158A  	fcall	stringdir
  4135  0C1D  00C6               	movwf	??_scale+4
  4136  0C1E  0846               	movf	??_scale+4,w
  4137  0C1F  00A7               	movwf	___flmul@b+3
  4138  0C20  0845               	movf	??_scale+3,w
  4139  0C21  00A6               	movwf	___flmul@b+2
  4140  0C22  0844               	movf	??_scale+2,w
  4141  0C23  00A5               	movwf	___flmul@b+1
  4142  0C24  0843               	movf	??_scale+1,w
  4143  0C25  00A4               	movwf	___flmul@b
  4144  0C26  300A               	movlw	10
  4145  0C27  00F7               	movwf	___awdiv@divisor
  4146  0C28  3000               	movlw	0
  4147  0C29  00F8               	movwf	___awdiv@divisor+1
  4148  0C2A  0850               	movf	scale@scl,w
  4149  0C2B  00F9               	movwf	___awdiv@dividend
  4150  0C2C  01FA               	clrf	___awdiv@dividend+1
  4151  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4152  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4153  0C2F  160A  158A  26A9  120A  158A  	fcall	___awdiv
  4154  0C34  0877               	movf	?___awdiv,w
  4155  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4156  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4157  0C37  00C7               	movwf	??_scale+5
  4158  0C38  3001               	movlw	1
  4159  0C39                     u4425:	
  4160  0C39  1003               	clrc
  4161  0C3A  0DC7               	rlf	??_scale+5,f
  4162  0C3B  3EFF               	addlw	-1
  4163  0C3C  1D03               	skipz
  4164  0C3D  2C39               	goto	u4425
  4165  0C3E  1003               	clrc
  4166  0C3F  0D47               	rlf	??_scale+5,w
  4167  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4168  0C41  0084               	movwf	4
  4169  0C42  160A  118A  200A  120A  158A  	fcall	stringdir
  4170  0C47  00C8               	movwf	??_scale+6
  4171  0C48  160A  118A  200A  120A  158A  	fcall	stringdir
  4172  0C4D  00C9               	movwf	??_scale+7
  4173  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  4174  0C53  00CA               	movwf	??_scale+8
  4175  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  4176  0C59  00CB               	movwf	??_scale+9
  4177  0C5A  084B               	movf	??_scale+9,w
  4178  0C5B  00AB               	movwf	___flmul@a+3
  4179  0C5C  084A               	movf	??_scale+8,w
  4180  0C5D  00AA               	movwf	___flmul@a+2
  4181  0C5E  0849               	movf	??_scale+7,w
  4182  0C5F  00A9               	movwf	___flmul@a+1
  4183  0C60  0848               	movf	??_scale+6,w
  4184  0C61  00A8               	movwf	___flmul@a
  4185  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4186  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0C69  0827               	movf	?___flmul+3,w
  4189  0C6A  00C1               	movwf	?_scale+3
  4190  0C6B  0826               	movf	?___flmul+2,w
  4191  0C6C  00C0               	movwf	?_scale+2
  4192  0C6D  0825               	movf	?___flmul+1,w
  4193  0C6E  00BF               	movwf	?_scale+1
  4194  0C6F  0824               	movf	?___flmul,w
  4195  0C70  00BE               	movwf	?_scale
  4196  0C71  2C9E               	goto	l269
  4197  0C72                     l2785:	
  4198                           
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4200  0C72  0850               	movf	scale@scl,w
  4201  0C73  00C2               	movwf	??_scale
  4202  0C74  3001               	movlw	1
  4203  0C75                     u4435:	
  4204  0C75  1003               	clrc
  4205  0C76  0DC2               	rlf	??_scale,f
  4206  0C77  3EFF               	addlw	-1
  4207  0C78  1D03               	skipz
  4208  0C79  2C75               	goto	u4435
  4209  0C7A  1003               	clrc
  4210  0C7B  0D42               	rlf	??_scale,w
  4211  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4212  0C7D  0084               	movwf	4
  4213  0C7E  160A  118A  200A  120A  158A  	fcall	stringdir
  4214  0C83  00C3               	movwf	??_scale+1
  4215  0C84  160A  118A  200A  120A  158A  	fcall	stringdir
  4216  0C89  00C4               	movwf	??_scale+2
  4217  0C8A  160A  118A  200A  120A  158A  	fcall	stringdir
  4218  0C8F  00C5               	movwf	??_scale+3
  4219  0C90  160A  118A  200A  120A  158A  	fcall	stringdir
  4220  0C95  00C6               	movwf	??_scale+4
  4221  0C96  0846               	movf	??_scale+4,w
  4222  0C97  00C1               	movwf	?_scale+3
  4223  0C98  0845               	movf	??_scale+3,w
  4224  0C99  00C0               	movwf	?_scale+2
  4225  0C9A  0844               	movf	??_scale+2,w
  4226  0C9B  00BF               	movwf	?_scale+1
  4227  0C9C  0843               	movf	??_scale+1,w
  4228  0C9D  00BE               	movwf	?_scale
  4229  0C9E                     l269:	
  4230  0C9E  0008               	return
  4231  0C9F                     __end_of_scale:	
  4232                           
  4233                           	psect	text6
  4234  1DEA                     __ptext6:	
  4235 ;; *************** function ___awmod *****************
  4236 ;; Defined at:
  4237 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  divisor         2    0[COMMON] int 
  4240 ;;  dividend        2    2[COMMON] int 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  sign            1    6[COMMON] unsigned char 
  4243 ;;  counter         1    5[COMMON] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2    0[COMMON] int 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         4       0       0       0       0
  4254 ;;      Locals:         2       0       0       0       0
  4255 ;;      Temps:          1       0       0       0       0
  4256 ;;      Totals:         7       0       0       0       0
  4257 ;;Total ram usage:        7 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_scale
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function ___awmod
  4268  1DEA                     ___awmod:	
  4269  1DEA                     l2293:	
  4270                           ;incstack = 0
  4271                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4272                           
  4273  1DEA  01F6               	clrf	___awmod@sign
  4274  1DEB                     l2295:	
  4275  1DEB  1FF3               	btfss	___awmod@dividend+1,7
  4276  1DEC  2DEE               	goto	u3091
  4277  1DED  2DEF               	goto	u3090
  4278  1DEE                     u3091:	
  4279  1DEE  2DF6               	goto	l2301
  4280  1DEF                     u3090:	
  4281  1DEF                     l2297:	
  4282  1DEF  09F2               	comf	___awmod@dividend,f
  4283  1DF0  09F3               	comf	___awmod@dividend+1,f
  4284  1DF1  0AF2               	incf	___awmod@dividend,f
  4285  1DF2  1903               	skipnz
  4286  1DF3  0AF3               	incf	___awmod@dividend+1,f
  4287  1DF4                     l2299:	
  4288  1DF4  01F6               	clrf	___awmod@sign
  4289  1DF5  0AF6               	incf	___awmod@sign,f
  4290  1DF6                     l2301:	
  4291  1DF6  1FF1               	btfss	___awmod@divisor+1,7
  4292  1DF7  2DF9               	goto	u3101
  4293  1DF8  2DFA               	goto	u3100
  4294  1DF9                     u3101:	
  4295  1DF9  2DFF               	goto	l2305
  4296  1DFA                     u3100:	
  4297  1DFA                     l2303:	
  4298  1DFA  09F0               	comf	___awmod@divisor,f
  4299  1DFB  09F1               	comf	___awmod@divisor+1,f
  4300  1DFC  0AF0               	incf	___awmod@divisor,f
  4301  1DFD  1903               	skipnz
  4302  1DFE  0AF1               	incf	___awmod@divisor+1,f
  4303  1DFF                     l2305:	
  4304  1DFF  0870               	movf	___awmod@divisor,w
  4305  1E00  0471               	iorwf	___awmod@divisor+1,w
  4306  1E01  1903               	btfsc	3,2
  4307  1E02  2E04               	goto	u3111
  4308  1E03  2E05               	goto	u3110
  4309  1E04                     u3111:	
  4310  1E04  2E34               	goto	l2323
  4311  1E05                     u3110:	
  4312  1E05                     l2307:	
  4313  1E05  01F5               	clrf	___awmod@counter
  4314  1E06  0AF5               	incf	___awmod@counter,f
  4315  1E07  2E13               	goto	l2313
  4316  1E08                     l2309:	
  4317  1E08  3001               	movlw	1
  4318  1E09                     u3125:	
  4319  1E09  1003               	clrc
  4320  1E0A  0DF0               	rlf	___awmod@divisor,f
  4321  1E0B  0DF1               	rlf	___awmod@divisor+1,f
  4322  1E0C  3EFF               	addlw	-1
  4323  1E0D  1D03               	skipz
  4324  1E0E  2E09               	goto	u3125
  4325  1E0F                     l2311:	
  4326  1E0F  3001               	movlw	1
  4327  1E10  00F4               	movwf	??___awmod
  4328  1E11  0874               	movf	??___awmod,w
  4329  1E12  07F5               	addwf	___awmod@counter,f
  4330  1E13                     l2313:	
  4331  1E13  1FF1               	btfss	___awmod@divisor+1,7
  4332  1E14  2E16               	goto	u3131
  4333  1E15  2E17               	goto	u3130
  4334  1E16                     u3131:	
  4335  1E16  2E08               	goto	l2309
  4336  1E17                     u3130:	
  4337  1E17                     l2315:	
  4338  1E17  0871               	movf	___awmod@divisor+1,w
  4339  1E18  0273               	subwf	___awmod@dividend+1,w
  4340  1E19  1D03               	skipz
  4341  1E1A  2E1D               	goto	u3145
  4342  1E1B  0870               	movf	___awmod@divisor,w
  4343  1E1C  0272               	subwf	___awmod@dividend,w
  4344  1E1D                     u3145:	
  4345  1E1D  1C03               	skipc
  4346  1E1E  2E20               	goto	u3141
  4347  1E1F  2E21               	goto	u3140
  4348  1E20                     u3141:	
  4349  1E20  2E27               	goto	l2319
  4350  1E21                     u3140:	
  4351  1E21                     l2317:	
  4352  1E21  0870               	movf	___awmod@divisor,w
  4353  1E22  02F2               	subwf	___awmod@dividend,f
  4354  1E23  0871               	movf	___awmod@divisor+1,w
  4355  1E24  1C03               	skipc
  4356  1E25  03F3               	decf	___awmod@dividend+1,f
  4357  1E26  02F3               	subwf	___awmod@dividend+1,f
  4358  1E27                     l2319:	
  4359  1E27  3001               	movlw	1
  4360  1E28                     u3155:	
  4361  1E28  1003               	clrc
  4362  1E29  0CF1               	rrf	___awmod@divisor+1,f
  4363  1E2A  0CF0               	rrf	___awmod@divisor,f
  4364  1E2B  3EFF               	addlw	-1
  4365  1E2C  1D03               	skipz
  4366  1E2D  2E28               	goto	u3155
  4367  1E2E                     l2321:	
  4368  1E2E  3001               	movlw	1
  4369  1E2F  02F5               	subwf	___awmod@counter,f
  4370  1E30  1D03               	btfss	3,2
  4371  1E31  2E33               	goto	u3161
  4372  1E32  2E34               	goto	u3160
  4373  1E33                     u3161:	
  4374  1E33  2E17               	goto	l2315
  4375  1E34                     u3160:	
  4376  1E34                     l2323:	
  4377  1E34  0876               	movf	___awmod@sign,w
  4378  1E35  1903               	btfsc	3,2
  4379  1E36  2E38               	goto	u3171
  4380  1E37  2E39               	goto	u3170
  4381  1E38                     u3171:	
  4382  1E38  2E3E               	goto	l2327
  4383  1E39                     u3170:	
  4384  1E39                     l2325:	
  4385  1E39  09F2               	comf	___awmod@dividend,f
  4386  1E3A  09F3               	comf	___awmod@dividend+1,f
  4387  1E3B  0AF2               	incf	___awmod@dividend,f
  4388  1E3C  1903               	skipnz
  4389  1E3D  0AF3               	incf	___awmod@dividend+1,f
  4390  1E3E                     l2327:	
  4391  1E3E  0873               	movf	___awmod@dividend+1,w
  4392  1E3F  00F1               	movwf	?___awmod+1
  4393  1E40  0872               	movf	___awmod@dividend,w
  4394  1E41  00F0               	movwf	?___awmod
  4395  1E42                     l495:	
  4396  1E42  0008               	return
  4397  1E43                     __end_of___awmod:	
  4398                           
  4399                           	psect	text7
  4400  1EA9                     __ptext7:	
  4401 ;; *************** function ___awdiv *****************
  4402 ;; Defined at:
  4403 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  divisor         2    7[COMMON] int 
  4406 ;;  dividend        2    9[COMMON] int 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  quotient        2    2[BANK0 ] int 
  4409 ;;  sign            1    1[BANK0 ] unsigned char 
  4410 ;;  counter         1    0[BANK0 ] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  2    7[COMMON] int 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         4       0       0       0       0
  4421 ;;      Locals:         0       4       0       0       0
  4422 ;;      Temps:          1       0       0       0       0
  4423 ;;      Totals:         5       4       0       0       0
  4424 ;;Total ram usage:        9 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_scale
  4430 ;;		_sprintf
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function ___awdiv
  4436  1EA9                     ___awdiv:	
  4437  1EA9                     l2249:	
  4438                           ;incstack = 0
  4439                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4440                           
  4441  1EA9  1283               	bcf	3,5	;RP0=0, select bank0
  4442  1EAA  1303               	bcf	3,6	;RP1=0, select bank0
  4443  1EAB  01A1               	clrf	___awdiv@sign
  4444  1EAC                     l2251:	
  4445  1EAC  1FF8               	btfss	___awdiv@divisor+1,7
  4446  1EAD  2EAF               	goto	u2991
  4447  1EAE  2EB0               	goto	u2990
  4448  1EAF                     u2991:	
  4449  1EAF  2EB7               	goto	l2257
  4450  1EB0                     u2990:	
  4451  1EB0                     l2253:	
  4452  1EB0  09F7               	comf	___awdiv@divisor,f
  4453  1EB1  09F8               	comf	___awdiv@divisor+1,f
  4454  1EB2  0AF7               	incf	___awdiv@divisor,f
  4455  1EB3  1903               	skipnz
  4456  1EB4  0AF8               	incf	___awdiv@divisor+1,f
  4457  1EB5                     l2255:	
  4458  1EB5  01A1               	clrf	___awdiv@sign
  4459  1EB6  0AA1               	incf	___awdiv@sign,f
  4460  1EB7                     l2257:	
  4461  1EB7  1FFA               	btfss	___awdiv@dividend+1,7
  4462  1EB8  2EBA               	goto	u3001
  4463  1EB9  2EBB               	goto	u3000
  4464  1EBA                     u3001:	
  4465  1EBA  2EC4               	goto	l2263
  4466  1EBB                     u3000:	
  4467  1EBB                     l2259:	
  4468  1EBB  09F9               	comf	___awdiv@dividend,f
  4469  1EBC  09FA               	comf	___awdiv@dividend+1,f
  4470  1EBD  0AF9               	incf	___awdiv@dividend,f
  4471  1EBE  1903               	skipnz
  4472  1EBF  0AFA               	incf	___awdiv@dividend+1,f
  4473  1EC0                     l2261:	
  4474  1EC0  3001               	movlw	1
  4475  1EC1  00FB               	movwf	??___awdiv
  4476  1EC2  087B               	movf	??___awdiv,w
  4477  1EC3  06A1               	xorwf	___awdiv@sign,f
  4478  1EC4                     l2263:	
  4479  1EC4  01A2               	clrf	___awdiv@quotient
  4480  1EC5  01A3               	clrf	___awdiv@quotient+1
  4481  1EC6                     l2265:	
  4482  1EC6  0877               	movf	___awdiv@divisor,w
  4483  1EC7  0478               	iorwf	___awdiv@divisor+1,w
  4484  1EC8  1903               	btfsc	3,2
  4485  1EC9  2ECB               	goto	u3011
  4486  1ECA  2ECC               	goto	u3010
  4487  1ECB                     u3011:	
  4488  1ECB  2F03               	goto	l2285
  4489  1ECC                     u3010:	
  4490  1ECC                     l2267:	
  4491  1ECC  01A0               	clrf	___awdiv@counter
  4492  1ECD  0AA0               	incf	___awdiv@counter,f
  4493  1ECE  2EDA               	goto	l2273
  4494  1ECF                     l2269:	
  4495  1ECF  3001               	movlw	1
  4496  1ED0                     u3025:	
  4497  1ED0  1003               	clrc
  4498  1ED1  0DF7               	rlf	___awdiv@divisor,f
  4499  1ED2  0DF8               	rlf	___awdiv@divisor+1,f
  4500  1ED3  3EFF               	addlw	-1
  4501  1ED4  1D03               	skipz
  4502  1ED5  2ED0               	goto	u3025
  4503  1ED6                     l2271:	
  4504  1ED6  3001               	movlw	1
  4505  1ED7  00FB               	movwf	??___awdiv
  4506  1ED8  087B               	movf	??___awdiv,w
  4507  1ED9  07A0               	addwf	___awdiv@counter,f
  4508  1EDA                     l2273:	
  4509  1EDA  1FF8               	btfss	___awdiv@divisor+1,7
  4510  1EDB  2EDD               	goto	u3031
  4511  1EDC  2EDE               	goto	u3030
  4512  1EDD                     u3031:	
  4513  1EDD  2ECF               	goto	l2269
  4514  1EDE                     u3030:	
  4515  1EDE                     l2275:	
  4516  1EDE  3001               	movlw	1
  4517  1EDF                     u3045:	
  4518  1EDF  1003               	clrc
  4519  1EE0  0DA2               	rlf	___awdiv@quotient,f
  4520  1EE1  0DA3               	rlf	___awdiv@quotient+1,f
  4521  1EE2  3EFF               	addlw	-1
  4522  1EE3  1D03               	skipz
  4523  1EE4  2EDF               	goto	u3045
  4524  1EE5  0878               	movf	___awdiv@divisor+1,w
  4525  1EE6  027A               	subwf	___awdiv@dividend+1,w
  4526  1EE7  1D03               	skipz
  4527  1EE8  2EEB               	goto	u3055
  4528  1EE9  0877               	movf	___awdiv@divisor,w
  4529  1EEA  0279               	subwf	___awdiv@dividend,w
  4530  1EEB                     u3055:	
  4531  1EEB  1C03               	skipc
  4532  1EEC  2EEE               	goto	u3051
  4533  1EED  2EEF               	goto	u3050
  4534  1EEE                     u3051:	
  4535  1EEE  2EF6               	goto	l2281
  4536  1EEF                     u3050:	
  4537  1EEF                     l2277:	
  4538  1EEF  0877               	movf	___awdiv@divisor,w
  4539  1EF0  02F9               	subwf	___awdiv@dividend,f
  4540  1EF1  0878               	movf	___awdiv@divisor+1,w
  4541  1EF2  1C03               	skipc
  4542  1EF3  03FA               	decf	___awdiv@dividend+1,f
  4543  1EF4  02FA               	subwf	___awdiv@dividend+1,f
  4544  1EF5                     l2279:	
  4545  1EF5  1422               	bsf	___awdiv@quotient,0
  4546  1EF6                     l2281:	
  4547  1EF6  3001               	movlw	1
  4548  1EF7                     u3065:	
  4549  1EF7  1003               	clrc
  4550  1EF8  0CF8               	rrf	___awdiv@divisor+1,f
  4551  1EF9  0CF7               	rrf	___awdiv@divisor,f
  4552  1EFA  3EFF               	addlw	-1
  4553  1EFB  1D03               	skipz
  4554  1EFC  2EF7               	goto	u3065
  4555  1EFD                     l2283:	
  4556  1EFD  3001               	movlw	1
  4557  1EFE  02A0               	subwf	___awdiv@counter,f
  4558  1EFF  1D03               	btfss	3,2
  4559  1F00  2F02               	goto	u3071
  4560  1F01  2F03               	goto	u3070
  4561  1F02                     u3071:	
  4562  1F02  2EDE               	goto	l2275
  4563  1F03                     u3070:	
  4564  1F03                     l2285:	
  4565  1F03  0821               	movf	___awdiv@sign,w
  4566  1F04  1903               	btfsc	3,2
  4567  1F05  2F07               	goto	u3081
  4568  1F06  2F08               	goto	u3080
  4569  1F07                     u3081:	
  4570  1F07  2F0D               	goto	l2289
  4571  1F08                     u3080:	
  4572  1F08                     l2287:	
  4573  1F08  09A2               	comf	___awdiv@quotient,f
  4574  1F09  09A3               	comf	___awdiv@quotient+1,f
  4575  1F0A  0AA2               	incf	___awdiv@quotient,f
  4576  1F0B  1903               	skipnz
  4577  1F0C  0AA3               	incf	___awdiv@quotient+1,f
  4578  1F0D                     l2289:	
  4579  1F0D  0823               	movf	___awdiv@quotient+1,w
  4580  1F0E  00F8               	movwf	?___awdiv+1
  4581  1F0F  0822               	movf	___awdiv@quotient,w
  4582  1F10  00F7               	movwf	?___awdiv
  4583  1F11                     l482:	
  4584  1F11  0008               	return
  4585  1F12                     __end_of___awdiv:	
  4586                           
  4587                           	psect	text8
  4588  002E                     __ptext8:	
  4589 ;; *************** function _fround *****************
  4590 ;; Defined at:
  4591 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  prec            1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  prec            1   49[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  4   30[BANK0 ] unsigned char 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       4       0       0       0
  4606 ;;      Locals:         0       9       0       0       0
  4607 ;;      Temps:          0       7       0       0       0
  4608 ;;      Totals:         0      20       0       0       0
  4609 ;;Total ram usage:       20 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    2
  4612 ;; This function calls:
  4613 ;;		___flmul
  4614 ;;		___lwdiv
  4615 ;;		___lwmod
  4616 ;; This function is called by:
  4617 ;;		_sprintf
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _fround
  4623  002E                     _fround:	
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4627                           ;fround@prec stored from wreg
  4628  002E  1283               	bcf	3,5	;RP0=0, select bank0
  4629  002F  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0030  00D1               	movwf	fround@prec
  4631  0031                     l2731:	
  4632                           
  4633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4634  0031  306E               	movlw	110
  4635  0032  0251               	subwf	fround@prec,w
  4636  0033  1C03               	skipc
  4637  0034  2836               	goto	u4191
  4638  0035  2837               	goto	u4190
  4639  0036                     u4191:	
  4640  0036  2944               	goto	l2739
  4641  0037                     u4190:	
  4642  0037                     l2733:	
  4643                           
  4644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4645  0037  303F               	movlw	63
  4646  0038  00A7               	movwf	___flmul@b+3
  4647  0039  3000               	movlw	0
  4648  003A  00A6               	movwf	___flmul@b+2
  4649  003B  3000               	movlw	0
  4650  003C  00A5               	movwf	___flmul@b+1
  4651  003D  3000               	movlw	0
  4652  003E  00A4               	movwf	___flmul@b
  4653  003F  3064               	movlw	100
  4654  0040  00F6               	movwf	___lwdiv@divisor
  4655  0041  3000               	movlw	0
  4656  0042  00F7               	movwf	___lwdiv@divisor+1
  4657  0043  0851               	movf	fround@prec,w
  4658  0044  00C2               	movwf	??_fround
  4659  0045  01C3               	clrf	??_fround+1
  4660  0046  0842               	movf	??_fround,w
  4661  0047  00F8               	movwf	___lwdiv@dividend
  4662  0048  0843               	movf	??_fround+1,w
  4663  0049  00F9               	movwf	___lwdiv@dividend+1
  4664  004A  160A  158A  24B2  120A  118A  	fcall	___lwdiv
  4665  004F  0876               	movf	?___lwdiv,w
  4666  0050  1283               	bcf	3,5	;RP0=0, select bank0
  4667  0051  1303               	bcf	3,6	;RP1=0, select bank0
  4668  0052  00C4               	movwf	??_fround+2
  4669  0053  3001               	movlw	1
  4670  0054                     u4205:	
  4671  0054  1003               	clrc
  4672  0055  0DC4               	rlf	??_fround+2,f
  4673  0056  3EFF               	addlw	-1
  4674  0057  1D03               	skipz
  4675  0058  2854               	goto	u4205
  4676  0059  1003               	clrc
  4677  005A  0D44               	rlf	??_fround+2,w
  4678  005B  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4679  005C  0084               	movwf	4
  4680  005D  160A  118A  200A  120A  118A  	fcall	stringdir
  4681  0062  00C5               	movwf	??_fround+3
  4682  0063  160A  118A  200A  120A  118A  	fcall	stringdir
  4683  0068  00C6               	movwf	??_fround+4
  4684  0069  160A  118A  200A  120A  118A  	fcall	stringdir
  4685  006E  00C7               	movwf	??_fround+5
  4686  006F  160A  118A  200A  120A  118A  	fcall	stringdir
  4687  0074  00C8               	movwf	??_fround+6
  4688  0075  0848               	movf	??_fround+6,w
  4689  0076  00AB               	movwf	___flmul@a+3
  4690  0077  0847               	movf	??_fround+5,w
  4691  0078  00AA               	movwf	___flmul@a+2
  4692  0079  0846               	movf	??_fround+4,w
  4693  007A  00A9               	movwf	___flmul@a+1
  4694  007B  0845               	movf	??_fround+3,w
  4695  007C  00A8               	movwf	___flmul@a
  4696  007D  120A  158A  249F  120A  118A  	fcall	___flmul
  4697  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4698  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4699  0084  0827               	movf	?___flmul+3,w
  4700  0085  00D0               	movwf	_fround$1076+3
  4701  0086  0826               	movf	?___flmul+2,w
  4702  0087  00CF               	movwf	_fround$1076+2
  4703  0088  0825               	movf	?___flmul+1,w
  4704  0089  00CE               	movwf	_fround$1076+1
  4705  008A  0824               	movf	?___flmul,w
  4706  008B  00CD               	movwf	_fround$1076
  4707                           
  4708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4709  008C  300A               	movlw	10
  4710  008D  00F6               	movwf	___lwdiv@divisor
  4711  008E  3000               	movlw	0
  4712  008F  00F7               	movwf	___lwdiv@divisor+1
  4713  0090  0851               	movf	fround@prec,w
  4714  0091  00C2               	movwf	??_fround
  4715  0092  01C3               	clrf	??_fround+1
  4716  0093  0842               	movf	??_fround,w
  4717  0094  00F2               	movwf	___lwmod@dividend
  4718  0095  0843               	movf	??_fround+1,w
  4719  0096  00F3               	movwf	___lwmod@dividend+1
  4720  0097  3064               	movlw	100
  4721  0098  00F0               	movwf	___lwmod@divisor
  4722  0099  3000               	movlw	0
  4723  009A  00F1               	movwf	___lwmod@divisor+1
  4724  009B  160A  158A  23F9  120A  118A  	fcall	___lwmod
  4725  00A0  0871               	movf	?___lwmod+1,w
  4726  00A1  00F9               	movwf	___lwdiv@dividend+1
  4727  00A2  0870               	movf	?___lwmod,w
  4728  00A3  00F8               	movwf	___lwdiv@dividend
  4729  00A4  160A  158A  24B2  120A  118A  	fcall	___lwdiv
  4730  00A9  0876               	movf	?___lwdiv,w
  4731  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4732  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4733  00AC  00C4               	movwf	??_fround+2
  4734  00AD  3001               	movlw	1
  4735  00AE                     u4215:	
  4736  00AE  1003               	clrc
  4737  00AF  0DC4               	rlf	??_fround+2,f
  4738  00B0  3EFF               	addlw	-1
  4739  00B1  1D03               	skipz
  4740  00B2  28AE               	goto	u4215
  4741  00B3  1003               	clrc
  4742  00B4  0D44               	rlf	??_fround+2,w
  4743  00B5  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4744  00B6  0084               	movwf	4
  4745  00B7  160A  118A  200A  120A  118A  	fcall	stringdir
  4746  00BC  00C5               	movwf	??_fround+3
  4747  00BD  160A  118A  200A  120A  118A  	fcall	stringdir
  4748  00C2  00C6               	movwf	??_fround+4
  4749  00C3  160A  118A  200A  120A  118A  	fcall	stringdir
  4750  00C8  00C7               	movwf	??_fround+5
  4751  00C9  160A  118A  200A  120A  118A  	fcall	stringdir
  4752  00CE  00C8               	movwf	??_fround+6
  4753  00CF  0848               	movf	??_fround+6,w
  4754  00D0  00A7               	movwf	___flmul@b+3
  4755  00D1  0847               	movf	??_fround+5,w
  4756  00D2  00A6               	movwf	___flmul@b+2
  4757  00D3  0846               	movf	??_fround+4,w
  4758  00D4  00A5               	movwf	___flmul@b+1
  4759  00D5  0845               	movf	??_fround+3,w
  4760  00D6  00A4               	movwf	___flmul@b
  4761  00D7  0850               	movf	_fround$1076+3,w
  4762  00D8  00AB               	movwf	___flmul@a+3
  4763  00D9  084F               	movf	_fround$1076+2,w
  4764  00DA  00AA               	movwf	___flmul@a+2
  4765  00DB  084E               	movf	_fround$1076+1,w
  4766  00DC  00A9               	movwf	___flmul@a+1
  4767  00DD  084D               	movf	_fround$1076,w
  4768  00DE  00A8               	movwf	___flmul@a
  4769  00DF  120A  158A  249F  120A  118A  	fcall	___flmul
  4770  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4771  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4772  00E6  0827               	movf	?___flmul+3,w
  4773  00E7  00CC               	movwf	_fround$1077+3
  4774  00E8  0826               	movf	?___flmul+2,w
  4775  00E9  00CB               	movwf	_fround$1077+2
  4776  00EA  0825               	movf	?___flmul+1,w
  4777  00EB  00CA               	movwf	_fround$1077+1
  4778  00EC  0824               	movf	?___flmul,w
  4779  00ED  00C9               	movwf	_fround$1077
  4780                           
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4782  00EE  300A               	movlw	10
  4783  00EF  00F0               	movwf	___lwmod@divisor
  4784  00F0  3000               	movlw	0
  4785  00F1  00F1               	movwf	___lwmod@divisor+1
  4786  00F2  0851               	movf	fround@prec,w
  4787  00F3  00C2               	movwf	??_fround
  4788  00F4  01C3               	clrf	??_fround+1
  4789  00F5  0842               	movf	??_fround,w
  4790  00F6  00F2               	movwf	___lwmod@dividend
  4791  00F7  0843               	movf	??_fround+1,w
  4792  00F8  00F3               	movwf	___lwmod@dividend+1
  4793  00F9  160A  158A  23F9  120A  118A  	fcall	___lwmod
  4794  00FE  0870               	movf	?___lwmod,w
  4795  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0100  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0101  00C4               	movwf	??_fround+2
  4798  0102  3001               	movlw	1
  4799  0103                     u4225:	
  4800  0103  1003               	clrc
  4801  0104  0DC4               	rlf	??_fround+2,f
  4802  0105  3EFF               	addlw	-1
  4803  0106  1D03               	skipz
  4804  0107  2903               	goto	u4225
  4805  0108  1003               	clrc
  4806  0109  0D44               	rlf	??_fround+2,w
  4807  010A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4808  010B  0084               	movwf	4
  4809  010C  160A  118A  200A  120A  118A  	fcall	stringdir
  4810  0111  00C5               	movwf	??_fround+3
  4811  0112  160A  118A  200A  120A  118A  	fcall	stringdir
  4812  0117  00C6               	movwf	??_fround+4
  4813  0118  160A  118A  200A  120A  118A  	fcall	stringdir
  4814  011D  00C7               	movwf	??_fround+5
  4815  011E  160A  118A  200A  120A  118A  	fcall	stringdir
  4816  0123  00C8               	movwf	??_fround+6
  4817  0124  0848               	movf	??_fround+6,w
  4818  0125  00A7               	movwf	___flmul@b+3
  4819  0126  0847               	movf	??_fround+5,w
  4820  0127  00A6               	movwf	___flmul@b+2
  4821  0128  0846               	movf	??_fround+4,w
  4822  0129  00A5               	movwf	___flmul@b+1
  4823  012A  0845               	movf	??_fround+3,w
  4824  012B  00A4               	movwf	___flmul@b
  4825  012C  084C               	movf	_fround$1077+3,w
  4826  012D  00AB               	movwf	___flmul@a+3
  4827  012E  084B               	movf	_fround$1077+2,w
  4828  012F  00AA               	movwf	___flmul@a+2
  4829  0130  084A               	movf	_fround$1077+1,w
  4830  0131  00A9               	movwf	___flmul@a+1
  4831  0132  0849               	movf	_fround$1077,w
  4832  0133  00A8               	movwf	___flmul@a
  4833  0134  120A  158A  249F  120A  118A  	fcall	___flmul
  4834  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4835  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4836  013B  0827               	movf	?___flmul+3,w
  4837  013C  00C1               	movwf	?_fround+3
  4838  013D  0826               	movf	?___flmul+2,w
  4839  013E  00C0               	movwf	?_fround+2
  4840  013F  0825               	movf	?___flmul+1,w
  4841  0140  00BF               	movwf	?_fround+1
  4842  0141  0824               	movf	?___flmul,w
  4843  0142  00BE               	movwf	?_fround
  4844  0143  2A38               	goto	l262
  4845  0144                     l2739:	
  4846  0144  300B               	movlw	11
  4847  0145  0251               	subwf	fround@prec,w
  4848  0146  1C03               	skipc
  4849  0147  2949               	goto	u4231
  4850  0148  294A               	goto	u4230
  4851  0149                     u4231:	
  4852  0149  29F5               	goto	l2745
  4853  014A                     u4230:	
  4854  014A                     l2741:	
  4855                           
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4857  014A  303F               	movlw	63
  4858  014B  00A7               	movwf	___flmul@b+3
  4859  014C  3000               	movlw	0
  4860  014D  00A6               	movwf	___flmul@b+2
  4861  014E  3000               	movlw	0
  4862  014F  00A5               	movwf	___flmul@b+1
  4863  0150  3000               	movlw	0
  4864  0151  00A4               	movwf	___flmul@b
  4865  0152  300A               	movlw	10
  4866  0153  00F6               	movwf	___lwdiv@divisor
  4867  0154  3000               	movlw	0
  4868  0155  00F7               	movwf	___lwdiv@divisor+1
  4869  0156  0851               	movf	fround@prec,w
  4870  0157  00C2               	movwf	??_fround
  4871  0158  01C3               	clrf	??_fround+1
  4872  0159  0842               	movf	??_fround,w
  4873  015A  00F8               	movwf	___lwdiv@dividend
  4874  015B  0843               	movf	??_fround+1,w
  4875  015C  00F9               	movwf	___lwdiv@dividend+1
  4876  015D  160A  158A  24B2  120A  118A  	fcall	___lwdiv
  4877  0162  0876               	movf	?___lwdiv,w
  4878  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0165  00C4               	movwf	??_fround+2
  4881  0166  3001               	movlw	1
  4882  0167                     u4245:	
  4883  0167  1003               	clrc
  4884  0168  0DC4               	rlf	??_fround+2,f
  4885  0169  3EFF               	addlw	-1
  4886  016A  1D03               	skipz
  4887  016B  2967               	goto	u4245
  4888  016C  1003               	clrc
  4889  016D  0D44               	rlf	??_fround+2,w
  4890  016E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4891  016F  0084               	movwf	4
  4892  0170  160A  118A  200A  120A  118A  	fcall	stringdir
  4893  0175  00C5               	movwf	??_fround+3
  4894  0176  160A  118A  200A  120A  118A  	fcall	stringdir
  4895  017B  00C6               	movwf	??_fround+4
  4896  017C  160A  118A  200A  120A  118A  	fcall	stringdir
  4897  0181  00C7               	movwf	??_fround+5
  4898  0182  160A  118A  200A  120A  118A  	fcall	stringdir
  4899  0187  00C8               	movwf	??_fround+6
  4900  0188  0848               	movf	??_fround+6,w
  4901  0189  00AB               	movwf	___flmul@a+3
  4902  018A  0847               	movf	??_fround+5,w
  4903  018B  00AA               	movwf	___flmul@a+2
  4904  018C  0846               	movf	??_fround+4,w
  4905  018D  00A9               	movwf	___flmul@a+1
  4906  018E  0845               	movf	??_fround+3,w
  4907  018F  00A8               	movwf	___flmul@a
  4908  0190  120A  158A  249F  120A  118A  	fcall	___flmul
  4909  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4911  0197  0827               	movf	?___flmul+3,w
  4912  0198  00D0               	movwf	_fround$1076+3
  4913  0199  0826               	movf	?___flmul+2,w
  4914  019A  00CF               	movwf	_fround$1076+2
  4915  019B  0825               	movf	?___flmul+1,w
  4916  019C  00CE               	movwf	_fround$1076+1
  4917  019D  0824               	movf	?___flmul,w
  4918  019E  00CD               	movwf	_fround$1076
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4921  019F  300A               	movlw	10
  4922  01A0  00F0               	movwf	___lwmod@divisor
  4923  01A1  3000               	movlw	0
  4924  01A2  00F1               	movwf	___lwmod@divisor+1
  4925  01A3  0851               	movf	fround@prec,w
  4926  01A4  00C2               	movwf	??_fround
  4927  01A5  01C3               	clrf	??_fround+1
  4928  01A6  0842               	movf	??_fround,w
  4929  01A7  00F2               	movwf	___lwmod@dividend
  4930  01A8  0843               	movf	??_fround+1,w
  4931  01A9  00F3               	movwf	___lwmod@dividend+1
  4932  01AA  160A  158A  23F9  120A  118A  	fcall	___lwmod
  4933  01AF  0870               	movf	?___lwmod,w
  4934  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  4935  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  4936  01B2  00C4               	movwf	??_fround+2
  4937  01B3  3001               	movlw	1
  4938  01B4                     u4255:	
  4939  01B4  1003               	clrc
  4940  01B5  0DC4               	rlf	??_fround+2,f
  4941  01B6  3EFF               	addlw	-1
  4942  01B7  1D03               	skipz
  4943  01B8  29B4               	goto	u4255
  4944  01B9  1003               	clrc
  4945  01BA  0D44               	rlf	??_fround+2,w
  4946  01BB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4947  01BC  0084               	movwf	4
  4948  01BD  160A  118A  200A  120A  118A  	fcall	stringdir
  4949  01C2  00C5               	movwf	??_fround+3
  4950  01C3  160A  118A  200A  120A  118A  	fcall	stringdir
  4951  01C8  00C6               	movwf	??_fround+4
  4952  01C9  160A  118A  200A  120A  118A  	fcall	stringdir
  4953  01CE  00C7               	movwf	??_fround+5
  4954  01CF  160A  118A  200A  120A  118A  	fcall	stringdir
  4955  01D4  00C8               	movwf	??_fround+6
  4956  01D5  0848               	movf	??_fround+6,w
  4957  01D6  00A7               	movwf	___flmul@b+3
  4958  01D7  0847               	movf	??_fround+5,w
  4959  01D8  00A6               	movwf	___flmul@b+2
  4960  01D9  0846               	movf	??_fround+4,w
  4961  01DA  00A5               	movwf	___flmul@b+1
  4962  01DB  0845               	movf	??_fround+3,w
  4963  01DC  00A4               	movwf	___flmul@b
  4964  01DD  0850               	movf	_fround$1076+3,w
  4965  01DE  00AB               	movwf	___flmul@a+3
  4966  01DF  084F               	movf	_fround$1076+2,w
  4967  01E0  00AA               	movwf	___flmul@a+2
  4968  01E1  084E               	movf	_fround$1076+1,w
  4969  01E2  00A9               	movwf	___flmul@a+1
  4970  01E3  084D               	movf	_fround$1076,w
  4971  01E4  00A8               	movwf	___flmul@a
  4972  01E5  120A  158A  249F  120A  118A  	fcall	___flmul
  4973  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4974  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4975  01EC  0827               	movf	?___flmul+3,w
  4976  01ED  00C1               	movwf	?_fround+3
  4977  01EE  0826               	movf	?___flmul+2,w
  4978  01EF  00C0               	movwf	?_fround+2
  4979  01F0  0825               	movf	?___flmul+1,w
  4980  01F1  00BF               	movwf	?_fround+1
  4981  01F2  0824               	movf	?___flmul,w
  4982  01F3  00BE               	movwf	?_fround
  4983  01F4  2A38               	goto	l262
  4984  01F5                     l2745:	
  4985                           
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4987  01F5  303F               	movlw	63
  4988  01F6  00A7               	movwf	___flmul@b+3
  4989  01F7  3000               	movlw	0
  4990  01F8  00A6               	movwf	___flmul@b+2
  4991  01F9  3000               	movlw	0
  4992  01FA  00A5               	movwf	___flmul@b+1
  4993  01FB  3000               	movlw	0
  4994  01FC  00A4               	movwf	___flmul@b
  4995  01FD  0851               	movf	fround@prec,w
  4996  01FE  00C2               	movwf	??_fround
  4997  01FF  3001               	movlw	1
  4998  0200                     u4265:	
  4999  0200  1003               	clrc
  5000  0201  0DC2               	rlf	??_fround,f
  5001  0202  3EFF               	addlw	-1
  5002  0203  1D03               	skipz
  5003  0204  2A00               	goto	u4265
  5004  0205  1003               	clrc
  5005  0206  0D42               	rlf	??_fround,w
  5006  0207  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5007  0208  0084               	movwf	4
  5008  0209  160A  118A  200A  120A  118A  	fcall	stringdir
  5009  020E  00C3               	movwf	??_fround+1
  5010  020F  160A  118A  200A  120A  118A  	fcall	stringdir
  5011  0214  00C4               	movwf	??_fround+2
  5012  0215  160A  118A  200A  120A  118A  	fcall	stringdir
  5013  021A  00C5               	movwf	??_fround+3
  5014  021B  160A  118A  200A  120A  118A  	fcall	stringdir
  5015  0220  00C6               	movwf	??_fround+4
  5016  0221  0846               	movf	??_fround+4,w
  5017  0222  00AB               	movwf	___flmul@a+3
  5018  0223  0845               	movf	??_fround+3,w
  5019  0224  00AA               	movwf	___flmul@a+2
  5020  0225  0844               	movf	??_fround+2,w
  5021  0226  00A9               	movwf	___flmul@a+1
  5022  0227  0843               	movf	??_fround+1,w
  5023  0228  00A8               	movwf	___flmul@a
  5024  0229  120A  158A  249F  120A  118A  	fcall	___flmul
  5025  022E  1283               	bcf	3,5	;RP0=0, select bank0
  5026  022F  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0230  0827               	movf	?___flmul+3,w
  5028  0231  00C1               	movwf	?_fround+3
  5029  0232  0826               	movf	?___flmul+2,w
  5030  0233  00C0               	movwf	?_fround+2
  5031  0234  0825               	movf	?___flmul+1,w
  5032  0235  00BF               	movwf	?_fround+1
  5033  0236  0824               	movf	?___flmul,w
  5034  0237  00BE               	movwf	?_fround
  5035  0238                     l262:	
  5036  0238  0008               	return
  5037  0239                     __end_of_fround:	
  5038                           
  5039                           	psect	text9
  5040  1BF9                     __ptext9:	
  5041 ;; *************** function ___lwmod *****************
  5042 ;; Defined at:
  5043 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  divisor         2    0[COMMON] unsigned int 
  5046 ;;  dividend        2    2[COMMON] unsigned int 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  counter         1    5[COMMON] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  2    0[COMMON] unsigned int 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, status,0
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5058 ;;      Params:         4       0       0       0       0
  5059 ;;      Locals:         1       0       0       0       0
  5060 ;;      Temps:          1       0       0       0       0
  5061 ;;      Totals:         6       0       0       0       0
  5062 ;;Total ram usage:        6 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_fround
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           
  5072                           ;psect for function ___lwmod
  5073  1BF9                     ___lwmod:	
  5074  1BF9                     l2357:	
  5075                           ;incstack = 0
  5076                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5077                           
  5078  1BF9  0870               	movf	___lwmod@divisor,w
  5079  1BFA  0471               	iorwf	___lwmod@divisor+1,w
  5080  1BFB  1903               	btfsc	3,2
  5081  1BFC  2BFE               	goto	u3251
  5082  1BFD  2BFF               	goto	u3250
  5083  1BFE                     u3251:	
  5084  1BFE  2C2E               	goto	l2375
  5085  1BFF                     u3250:	
  5086  1BFF                     l2359:	
  5087  1BFF  01F5               	clrf	___lwmod@counter
  5088  1C00  0AF5               	incf	___lwmod@counter,f
  5089  1C01  2C0D               	goto	l2365
  5090  1C02                     l2361:	
  5091  1C02  3001               	movlw	1
  5092  1C03                     u3265:	
  5093  1C03  1003               	clrc
  5094  1C04  0DF0               	rlf	___lwmod@divisor,f
  5095  1C05  0DF1               	rlf	___lwmod@divisor+1,f
  5096  1C06  3EFF               	addlw	-1
  5097  1C07  1D03               	skipz
  5098  1C08  2C03               	goto	u3265
  5099  1C09                     l2363:	
  5100  1C09  3001               	movlw	1
  5101  1C0A  00F4               	movwf	??___lwmod
  5102  1C0B  0874               	movf	??___lwmod,w
  5103  1C0C  07F5               	addwf	___lwmod@counter,f
  5104  1C0D                     l2365:	
  5105  1C0D  1FF1               	btfss	___lwmod@divisor+1,7
  5106  1C0E  2C10               	goto	u3271
  5107  1C0F  2C11               	goto	u3270
  5108  1C10                     u3271:	
  5109  1C10  2C02               	goto	l2361
  5110  1C11                     u3270:	
  5111  1C11                     l2367:	
  5112  1C11  0871               	movf	___lwmod@divisor+1,w
  5113  1C12  0273               	subwf	___lwmod@dividend+1,w
  5114  1C13  1D03               	skipz
  5115  1C14  2C17               	goto	u3285
  5116  1C15  0870               	movf	___lwmod@divisor,w
  5117  1C16  0272               	subwf	___lwmod@dividend,w
  5118  1C17                     u3285:	
  5119  1C17  1C03               	skipc
  5120  1C18  2C1A               	goto	u3281
  5121  1C19  2C1B               	goto	u3280
  5122  1C1A                     u3281:	
  5123  1C1A  2C21               	goto	l2371
  5124  1C1B                     u3280:	
  5125  1C1B                     l2369:	
  5126  1C1B  0870               	movf	___lwmod@divisor,w
  5127  1C1C  02F2               	subwf	___lwmod@dividend,f
  5128  1C1D  0871               	movf	___lwmod@divisor+1,w
  5129  1C1E  1C03               	skipc
  5130  1C1F  03F3               	decf	___lwmod@dividend+1,f
  5131  1C20  02F3               	subwf	___lwmod@dividend+1,f
  5132  1C21                     l2371:	
  5133  1C21  3001               	movlw	1
  5134  1C22                     u3295:	
  5135  1C22  1003               	clrc
  5136  1C23  0CF1               	rrf	___lwmod@divisor+1,f
  5137  1C24  0CF0               	rrf	___lwmod@divisor,f
  5138  1C25  3EFF               	addlw	-1
  5139  1C26  1D03               	skipz
  5140  1C27  2C22               	goto	u3295
  5141  1C28                     l2373:	
  5142  1C28  3001               	movlw	1
  5143  1C29  02F5               	subwf	___lwmod@counter,f
  5144  1C2A  1D03               	btfss	3,2
  5145  1C2B  2C2D               	goto	u3301
  5146  1C2C  2C2E               	goto	u3300
  5147  1C2D                     u3301:	
  5148  1C2D  2C11               	goto	l2367
  5149  1C2E                     u3300:	
  5150  1C2E                     l2375:	
  5151  1C2E  0873               	movf	___lwmod@dividend+1,w
  5152  1C2F  00F1               	movwf	?___lwmod+1
  5153  1C30  0872               	movf	___lwmod@dividend,w
  5154  1C31  00F0               	movwf	?___lwmod
  5155  1C32                     l645:	
  5156  1C32  0008               	return
  5157  1C33                     __end_of___lwmod:	
  5158                           
  5159                           	psect	text10
  5160  1CB2                     __ptext10:	
  5161 ;; *************** function ___lwdiv *****************
  5162 ;; Defined at:
  5163 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  divisor         2    6[COMMON] unsigned int 
  5166 ;;  dividend        2    8[COMMON] unsigned int 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  quotient        2   11[COMMON] unsigned int 
  5169 ;;  counter         1   13[COMMON] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  2    6[COMMON] unsigned int 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         4       0       0       0       0
  5180 ;;      Locals:         3       0       0       0       0
  5181 ;;      Temps:          1       0       0       0       0
  5182 ;;      Totals:         8       0       0       0       0
  5183 ;;Total ram usage:        8 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_fround
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function ___lwdiv
  5194  1CB2                     ___lwdiv:	
  5195  1CB2                     l2331:	
  5196                           ;incstack = 0
  5197                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5198                           
  5199  1CB2  01FB               	clrf	___lwdiv@quotient
  5200  1CB3  01FC               	clrf	___lwdiv@quotient+1
  5201  1CB4                     l2333:	
  5202  1CB4  0876               	movf	___lwdiv@divisor,w
  5203  1CB5  0477               	iorwf	___lwdiv@divisor+1,w
  5204  1CB6  1903               	btfsc	3,2
  5205  1CB7  2CB9               	goto	u3181
  5206  1CB8  2CBA               	goto	u3180
  5207  1CB9                     u3181:	
  5208  1CB9  2CF1               	goto	l2353
  5209  1CBA                     u3180:	
  5210  1CBA                     l2335:	
  5211  1CBA  01FD               	clrf	___lwdiv@counter
  5212  1CBB  0AFD               	incf	___lwdiv@counter,f
  5213  1CBC  2CC8               	goto	l2341
  5214  1CBD                     l2337:	
  5215  1CBD  3001               	movlw	1
  5216  1CBE                     u3195:	
  5217  1CBE  1003               	clrc
  5218  1CBF  0DF6               	rlf	___lwdiv@divisor,f
  5219  1CC0  0DF7               	rlf	___lwdiv@divisor+1,f
  5220  1CC1  3EFF               	addlw	-1
  5221  1CC2  1D03               	skipz
  5222  1CC3  2CBE               	goto	u3195
  5223  1CC4                     l2339:	
  5224  1CC4  3001               	movlw	1
  5225  1CC5  00FA               	movwf	??___lwdiv
  5226  1CC6  087A               	movf	??___lwdiv,w
  5227  1CC7  07FD               	addwf	___lwdiv@counter,f
  5228  1CC8                     l2341:	
  5229  1CC8  1FF7               	btfss	___lwdiv@divisor+1,7
  5230  1CC9  2CCB               	goto	u3201
  5231  1CCA  2CCC               	goto	u3200
  5232  1CCB                     u3201:	
  5233  1CCB  2CBD               	goto	l2337
  5234  1CCC                     u3200:	
  5235  1CCC                     l2343:	
  5236  1CCC  3001               	movlw	1
  5237  1CCD                     u3215:	
  5238  1CCD  1003               	clrc
  5239  1CCE  0DFB               	rlf	___lwdiv@quotient,f
  5240  1CCF  0DFC               	rlf	___lwdiv@quotient+1,f
  5241  1CD0  3EFF               	addlw	-1
  5242  1CD1  1D03               	skipz
  5243  1CD2  2CCD               	goto	u3215
  5244  1CD3  0877               	movf	___lwdiv@divisor+1,w
  5245  1CD4  0279               	subwf	___lwdiv@dividend+1,w
  5246  1CD5  1D03               	skipz
  5247  1CD6  2CD9               	goto	u3225
  5248  1CD7  0876               	movf	___lwdiv@divisor,w
  5249  1CD8  0278               	subwf	___lwdiv@dividend,w
  5250  1CD9                     u3225:	
  5251  1CD9  1C03               	skipc
  5252  1CDA  2CDC               	goto	u3221
  5253  1CDB  2CDD               	goto	u3220
  5254  1CDC                     u3221:	
  5255  1CDC  2CE4               	goto	l2349
  5256  1CDD                     u3220:	
  5257  1CDD                     l2345:	
  5258  1CDD  0876               	movf	___lwdiv@divisor,w
  5259  1CDE  02F8               	subwf	___lwdiv@dividend,f
  5260  1CDF  0877               	movf	___lwdiv@divisor+1,w
  5261  1CE0  1C03               	skipc
  5262  1CE1  03F9               	decf	___lwdiv@dividend+1,f
  5263  1CE2  02F9               	subwf	___lwdiv@dividend+1,f
  5264  1CE3                     l2347:	
  5265  1CE3  147B               	bsf	___lwdiv@quotient,0
  5266  1CE4                     l2349:	
  5267  1CE4  3001               	movlw	1
  5268  1CE5                     u3235:	
  5269  1CE5  1003               	clrc
  5270  1CE6  0CF7               	rrf	___lwdiv@divisor+1,f
  5271  1CE7  0CF6               	rrf	___lwdiv@divisor,f
  5272  1CE8  3EFF               	addlw	-1
  5273  1CE9  1D03               	skipz
  5274  1CEA  2CE5               	goto	u3235
  5275  1CEB                     l2351:	
  5276  1CEB  3001               	movlw	1
  5277  1CEC  02FD               	subwf	___lwdiv@counter,f
  5278  1CED  1D03               	btfss	3,2
  5279  1CEE  2CF0               	goto	u3241
  5280  1CEF  2CF1               	goto	u3240
  5281  1CF0                     u3241:	
  5282  1CF0  2CCC               	goto	l2343
  5283  1CF1                     u3240:	
  5284  1CF1                     l2353:	
  5285  1CF1  087C               	movf	___lwdiv@quotient+1,w
  5286  1CF2  00F7               	movwf	?___lwdiv+1
  5287  1CF3  087B               	movf	___lwdiv@quotient,w
  5288  1CF4  00F6               	movwf	?___lwdiv
  5289  1CF5                     l635:	
  5290  1CF5  0008               	return
  5291  1CF6                     __end_of___lwdiv:	
  5292                           
  5293                           	psect	text11
  5294  0C9F                     __ptext11:	
  5295 ;; *************** function ___flmul *****************
  5296 ;; Defined at:
  5297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  b               4    4[BANK0 ] unsigned int 
  5300 ;;  a               4    8[BANK0 ] unsigned int 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  prod            4   24[BANK0 ] struct .
  5303 ;;  grs             4   18[BANK0 ] unsigned long 
  5304 ;;  temp            2   28[BANK0 ] struct .
  5305 ;;  bexp            1   23[BANK0 ] unsigned char 
  5306 ;;  aexp            1   22[BANK0 ] unsigned char 
  5307 ;;  sign            1   17[BANK0 ] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  4    4[BANK0 ] unsigned char 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         0       8       0       0       0
  5318 ;;      Locals:         0      13       0       0       0
  5319 ;;      Temps:          0       5       0       0       0
  5320 ;;      Totals:         0      26       0       0       0
  5321 ;;Total ram usage:       26 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    1
  5324 ;; This function calls:
  5325 ;;		__Umul8_16
  5326 ;; This function is called by:
  5327 ;;		_Read_ADC
  5328 ;;		_fround
  5329 ;;		_scale
  5330 ;;		_sprintf
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function ___flmul
  5336  0C9F                     ___flmul:	
  5337  0C9F                     l2573:	
  5338                           ;incstack = 0
  5339                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5340                           
  5341  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5342  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5343  0CA1  0827               	movf	___flmul@b+3,w
  5344  0CA2  3980               	andlw	128
  5345  0CA3  00AC               	movwf	??___flmul
  5346  0CA4  082C               	movf	??___flmul,w
  5347  0CA5  00B1               	movwf	___flmul@sign
  5348  0CA6                     l2575:	
  5349  0CA6  0827               	movf	___flmul@b+3,w
  5350  0CA7  00AC               	movwf	??___flmul
  5351  0CA8  072C               	addwf	??___flmul,w
  5352  0CA9  00AD               	movwf	??___flmul+1
  5353  0CAA  082D               	movf	??___flmul+1,w
  5354  0CAB  00B7               	movwf	___flmul@bexp
  5355  0CAC                     l2577:	
  5356  0CAC  1FA6               	btfss	___flmul@b+2,7
  5357  0CAD  2CAF               	goto	u3771
  5358  0CAE  2CB0               	goto	u3770
  5359  0CAF                     u3771:	
  5360  0CAF  2CB1               	goto	l2581
  5361  0CB0                     u3770:	
  5362  0CB0                     l2579:	
  5363  0CB0  1437               	bsf	___flmul@bexp,0
  5364  0CB1                     l2581:	
  5365  0CB1  0837               	movf	___flmul@bexp,w
  5366  0CB2  1903               	btfsc	3,2
  5367  0CB3  2CB5               	goto	u3781
  5368  0CB4  2CB6               	goto	u3780
  5369  0CB5                     u3781:	
  5370  0CB5  2CC5               	goto	l2589
  5371  0CB6                     u3780:	
  5372  0CB6                     l2583:	
  5373  0CB6  0A37               	incf	___flmul@bexp,w
  5374  0CB7  1D03               	btfss	3,2
  5375  0CB8  2CBA               	goto	u3791
  5376  0CB9  2CBB               	goto	u3790
  5377  0CBA                     u3791:	
  5378  0CBA  2CC3               	goto	l2587
  5379  0CBB                     u3790:	
  5380  0CBB                     l2585:	
  5381  0CBB  3000               	movlw	0
  5382  0CBC  00A7               	movwf	___flmul@b+3
  5383  0CBD  3000               	movlw	0
  5384  0CBE  00A6               	movwf	___flmul@b+2
  5385  0CBF  3000               	movlw	0
  5386  0CC0  00A5               	movwf	___flmul@b+1
  5387  0CC1  3000               	movlw	0
  5388  0CC2  00A4               	movwf	___flmul@b
  5389  0CC3                     l2587:	
  5390  0CC3  17A6               	bsf	___flmul@b+2,7
  5391  0CC4  2CCD               	goto	l2591
  5392  0CC5                     l2589:	
  5393  0CC5  3000               	movlw	0
  5394  0CC6  00A7               	movwf	___flmul@b+3
  5395  0CC7  3000               	movlw	0
  5396  0CC8  00A6               	movwf	___flmul@b+2
  5397  0CC9  3000               	movlw	0
  5398  0CCA  00A5               	movwf	___flmul@b+1
  5399  0CCB  3000               	movlw	0
  5400  0CCC  00A4               	movwf	___flmul@b
  5401  0CCD                     l2591:	
  5402  0CCD  082B               	movf	___flmul@a+3,w
  5403  0CCE  3980               	andlw	128
  5404  0CCF  00AC               	movwf	??___flmul
  5405  0CD0  082C               	movf	??___flmul,w
  5406  0CD1  06B1               	xorwf	___flmul@sign,f
  5407  0CD2                     l2593:	
  5408  0CD2  082B               	movf	___flmul@a+3,w
  5409  0CD3  00AC               	movwf	??___flmul
  5410  0CD4  072C               	addwf	??___flmul,w
  5411  0CD5  00AD               	movwf	??___flmul+1
  5412  0CD6  082D               	movf	??___flmul+1,w
  5413  0CD7  00B6               	movwf	___flmul@aexp
  5414  0CD8                     l2595:	
  5415  0CD8  1FAA               	btfss	___flmul@a+2,7
  5416  0CD9  2CDB               	goto	u3801
  5417  0CDA  2CDC               	goto	u3800
  5418  0CDB                     u3801:	
  5419  0CDB  2CDD               	goto	l2599
  5420  0CDC                     u3800:	
  5421  0CDC                     l2597:	
  5422  0CDC  1436               	bsf	___flmul@aexp,0
  5423  0CDD                     l2599:	
  5424  0CDD  0836               	movf	___flmul@aexp,w
  5425  0CDE  1903               	btfsc	3,2
  5426  0CDF  2CE1               	goto	u3811
  5427  0CE0  2CE2               	goto	u3810
  5428  0CE1                     u3811:	
  5429  0CE1  2CF1               	goto	l2607
  5430  0CE2                     u3810:	
  5431  0CE2                     l2601:	
  5432  0CE2  0A36               	incf	___flmul@aexp,w
  5433  0CE3  1D03               	btfss	3,2
  5434  0CE4  2CE6               	goto	u3821
  5435  0CE5  2CE7               	goto	u3820
  5436  0CE6                     u3821:	
  5437  0CE6  2CEF               	goto	l2605
  5438  0CE7                     u3820:	
  5439  0CE7                     l2603:	
  5440  0CE7  3000               	movlw	0
  5441  0CE8  00AB               	movwf	___flmul@a+3
  5442  0CE9  3000               	movlw	0
  5443  0CEA  00AA               	movwf	___flmul@a+2
  5444  0CEB  3000               	movlw	0
  5445  0CEC  00A9               	movwf	___flmul@a+1
  5446  0CED  3000               	movlw	0
  5447  0CEE  00A8               	movwf	___flmul@a
  5448  0CEF                     l2605:	
  5449  0CEF  17AA               	bsf	___flmul@a+2,7
  5450  0CF0  2CF9               	goto	l2609
  5451  0CF1                     l2607:	
  5452  0CF1  3000               	movlw	0
  5453  0CF2  00AB               	movwf	___flmul@a+3
  5454  0CF3  3000               	movlw	0
  5455  0CF4  00AA               	movwf	___flmul@a+2
  5456  0CF5  3000               	movlw	0
  5457  0CF6  00A9               	movwf	___flmul@a+1
  5458  0CF7  3000               	movlw	0
  5459  0CF8  00A8               	movwf	___flmul@a
  5460  0CF9                     l2609:	
  5461  0CF9  0836               	movf	___flmul@aexp,w
  5462  0CFA  1903               	btfsc	3,2
  5463  0CFB  2CFD               	goto	u3831
  5464  0CFC  2CFE               	goto	u3830
  5465  0CFD                     u3831:	
  5466  0CFD  2D03               	goto	l2613
  5467  0CFE                     u3830:	
  5468  0CFE                     l2611:	
  5469  0CFE  0837               	movf	___flmul@bexp,w
  5470  0CFF  1D03               	btfss	3,2
  5471  0D00  2D02               	goto	u3841
  5472  0D01  2D03               	goto	u3840
  5473  0D02                     u3841:	
  5474  0D02  2D0C               	goto	l2617
  5475  0D03                     u3840:	
  5476  0D03                     l2613:	
  5477  0D03  3000               	movlw	0
  5478  0D04  00A7               	movwf	?___flmul+3
  5479  0D05  3000               	movlw	0
  5480  0D06  00A6               	movwf	?___flmul+2
  5481  0D07  3000               	movlw	0
  5482  0D08  00A5               	movwf	?___flmul+1
  5483  0D09  3000               	movlw	0
  5484  0D0A  00A4               	movwf	?___flmul
  5485  0D0B  2FFF               	goto	l752
  5486  0D0C                     l2617:	
  5487  0D0C  0824               	movf	___flmul@b,w
  5488  0D0D  00AC               	movwf	??___flmul
  5489  0D0E  082C               	movf	??___flmul,w
  5490  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5491  0D10  082A               	movf	___flmul@a+2,w
  5492  0D11  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5493  0D16  0871               	movf	?__Umul8_16+1,w
  5494  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5495  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5496  0D19  00BD               	movwf	___flmul@temp+1
  5497  0D1A  0870               	movf	?__Umul8_16,w
  5498  0D1B  00BC               	movwf	___flmul@temp
  5499  0D1C                     l2619:	
  5500  0D1C  083C               	movf	___flmul@temp,w
  5501  0D1D  00AC               	movwf	??___flmul
  5502  0D1E  01AD               	clrf	??___flmul+1
  5503  0D1F  01AE               	clrf	??___flmul+2
  5504  0D20  01AF               	clrf	??___flmul+3
  5505  0D21  082F               	movf	??___flmul+3,w
  5506  0D22  00B5               	movwf	___flmul@grs+3
  5507  0D23  082E               	movf	??___flmul+2,w
  5508  0D24  00B4               	movwf	___flmul@grs+2
  5509  0D25  082D               	movf	??___flmul+1,w
  5510  0D26  00B3               	movwf	___flmul@grs+1
  5511  0D27  082C               	movf	??___flmul,w
  5512  0D28  00B2               	movwf	___flmul@grs
  5513  0D29                     l2621:	
  5514  0D29  083D               	movf	___flmul@temp+1,w
  5515  0D2A  00AC               	movwf	??___flmul
  5516  0D2B  01AD               	clrf	??___flmul+1
  5517  0D2C  01AE               	clrf	??___flmul+2
  5518  0D2D  01AF               	clrf	??___flmul+3
  5519  0D2E  082F               	movf	??___flmul+3,w
  5520  0D2F  00BB               	movwf	___flmul@prod+3
  5521  0D30  082E               	movf	??___flmul+2,w
  5522  0D31  00BA               	movwf	___flmul@prod+2
  5523  0D32  082D               	movf	??___flmul+1,w
  5524  0D33  00B9               	movwf	___flmul@prod+1
  5525  0D34  082C               	movf	??___flmul,w
  5526  0D35  00B8               	movwf	___flmul@prod
  5527  0D36  0825               	movf	___flmul@b+1,w
  5528  0D37  00AC               	movwf	??___flmul
  5529  0D38  082C               	movf	??___flmul,w
  5530  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5531  0D3A  0829               	movf	___flmul@a+1,w
  5532  0D3B  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5533  0D40  0871               	movf	?__Umul8_16+1,w
  5534  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5535  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5536  0D43  00BD               	movwf	___flmul@temp+1
  5537  0D44  0870               	movf	?__Umul8_16,w
  5538  0D45  00BC               	movwf	___flmul@temp
  5539  0D46                     l2623:	
  5540  0D46  083C               	movf	___flmul@temp,w
  5541  0D47  00AC               	movwf	??___flmul
  5542  0D48  01AD               	clrf	??___flmul+1
  5543  0D49  01AE               	clrf	??___flmul+2
  5544  0D4A  01AF               	clrf	??___flmul+3
  5545  0D4B  082C               	movf	??___flmul,w
  5546  0D4C  07B2               	addwf	___flmul@grs,f
  5547  0D4D  082D               	movf	??___flmul+1,w
  5548  0D4E  1103               	clrz
  5549  0D4F  1803               	skipnc
  5550  0D50  3E01               	addlw	1
  5551  0D51  1903               	skipnz
  5552  0D52  2D54               	goto	u3851
  5553  0D53  07B3               	addwf	___flmul@grs+1,f
  5554  0D54                     u3851:	
  5555  0D54  082E               	movf	??___flmul+2,w
  5556  0D55  1103               	clrz
  5557  0D56  1803               	skipnc
  5558  0D57  3E01               	addlw	1
  5559  0D58  1903               	skipnz
  5560  0D59  2D5B               	goto	u3852
  5561  0D5A  07B4               	addwf	___flmul@grs+2,f
  5562  0D5B                     u3852:	
  5563  0D5B  082F               	movf	??___flmul+3,w
  5564  0D5C  1103               	clrz
  5565  0D5D  1803               	skipnc
  5566  0D5E  3E01               	addlw	1
  5567  0D5F  1903               	skipnz
  5568  0D60  2D62               	goto	u3853
  5569  0D61  07B5               	addwf	___flmul@grs+3,f
  5570  0D62                     u3853:	
  5571  0D62                     l2625:	
  5572  0D62  083D               	movf	___flmul@temp+1,w
  5573  0D63  00AC               	movwf	??___flmul
  5574  0D64  01AD               	clrf	??___flmul+1
  5575  0D65  01AE               	clrf	??___flmul+2
  5576  0D66  01AF               	clrf	??___flmul+3
  5577  0D67  082C               	movf	??___flmul,w
  5578  0D68  07B8               	addwf	___flmul@prod,f
  5579  0D69  082D               	movf	??___flmul+1,w
  5580  0D6A  1103               	clrz
  5581  0D6B  1803               	skipnc
  5582  0D6C  3E01               	addlw	1
  5583  0D6D  1903               	skipnz
  5584  0D6E  2D70               	goto	u3861
  5585  0D6F  07B9               	addwf	___flmul@prod+1,f
  5586  0D70                     u3861:	
  5587  0D70  082E               	movf	??___flmul+2,w
  5588  0D71  1103               	clrz
  5589  0D72  1803               	skipnc
  5590  0D73  3E01               	addlw	1
  5591  0D74  1903               	skipnz
  5592  0D75  2D77               	goto	u3862
  5593  0D76  07BA               	addwf	___flmul@prod+2,f
  5594  0D77                     u3862:	
  5595  0D77  082F               	movf	??___flmul+3,w
  5596  0D78  1103               	clrz
  5597  0D79  1803               	skipnc
  5598  0D7A  3E01               	addlw	1
  5599  0D7B  1903               	skipnz
  5600  0D7C  2D7E               	goto	u3863
  5601  0D7D  07BB               	addwf	___flmul@prod+3,f
  5602  0D7E                     u3863:	
  5603  0D7E  0826               	movf	___flmul@b+2,w
  5604  0D7F  00AC               	movwf	??___flmul
  5605  0D80  082C               	movf	??___flmul,w
  5606  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5607  0D82  0828               	movf	___flmul@a,w
  5608  0D83  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5609  0D88  0871               	movf	?__Umul8_16+1,w
  5610  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5611  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5612  0D8B  00BD               	movwf	___flmul@temp+1
  5613  0D8C  0870               	movf	?__Umul8_16,w
  5614  0D8D  00BC               	movwf	___flmul@temp
  5615  0D8E                     l2627:	
  5616  0D8E  083C               	movf	___flmul@temp,w
  5617  0D8F  00AC               	movwf	??___flmul
  5618  0D90  01AD               	clrf	??___flmul+1
  5619  0D91  01AE               	clrf	??___flmul+2
  5620  0D92  01AF               	clrf	??___flmul+3
  5621  0D93  082C               	movf	??___flmul,w
  5622  0D94  07B2               	addwf	___flmul@grs,f
  5623  0D95  082D               	movf	??___flmul+1,w
  5624  0D96  1103               	clrz
  5625  0D97  1803               	skipnc
  5626  0D98  3E01               	addlw	1
  5627  0D99  1903               	skipnz
  5628  0D9A  2D9C               	goto	u3871
  5629  0D9B  07B3               	addwf	___flmul@grs+1,f
  5630  0D9C                     u3871:	
  5631  0D9C  082E               	movf	??___flmul+2,w
  5632  0D9D  1103               	clrz
  5633  0D9E  1803               	skipnc
  5634  0D9F  3E01               	addlw	1
  5635  0DA0  1903               	skipnz
  5636  0DA1  2DA3               	goto	u3872
  5637  0DA2  07B4               	addwf	___flmul@grs+2,f
  5638  0DA3                     u3872:	
  5639  0DA3  082F               	movf	??___flmul+3,w
  5640  0DA4  1103               	clrz
  5641  0DA5  1803               	skipnc
  5642  0DA6  3E01               	addlw	1
  5643  0DA7  1903               	skipnz
  5644  0DA8  2DAA               	goto	u3873
  5645  0DA9  07B5               	addwf	___flmul@grs+3,f
  5646  0DAA                     u3873:	
  5647  0DAA                     l2629:	
  5648  0DAA  083D               	movf	___flmul@temp+1,w
  5649  0DAB  00AC               	movwf	??___flmul
  5650  0DAC  01AD               	clrf	??___flmul+1
  5651  0DAD  01AE               	clrf	??___flmul+2
  5652  0DAE  01AF               	clrf	??___flmul+3
  5653  0DAF  082C               	movf	??___flmul,w
  5654  0DB0  07B8               	addwf	___flmul@prod,f
  5655  0DB1  082D               	movf	??___flmul+1,w
  5656  0DB2  1103               	clrz
  5657  0DB3  1803               	skipnc
  5658  0DB4  3E01               	addlw	1
  5659  0DB5  1903               	skipnz
  5660  0DB6  2DB8               	goto	u3881
  5661  0DB7  07B9               	addwf	___flmul@prod+1,f
  5662  0DB8                     u3881:	
  5663  0DB8  082E               	movf	??___flmul+2,w
  5664  0DB9  1103               	clrz
  5665  0DBA  1803               	skipnc
  5666  0DBB  3E01               	addlw	1
  5667  0DBC  1903               	skipnz
  5668  0DBD  2DBF               	goto	u3882
  5669  0DBE  07BA               	addwf	___flmul@prod+2,f
  5670  0DBF                     u3882:	
  5671  0DBF  082F               	movf	??___flmul+3,w
  5672  0DC0  1103               	clrz
  5673  0DC1  1803               	skipnc
  5674  0DC2  3E01               	addlw	1
  5675  0DC3  1903               	skipnz
  5676  0DC4  2DC6               	goto	u3883
  5677  0DC5  07BB               	addwf	___flmul@prod+3,f
  5678  0DC6                     u3883:	
  5679  0DC6                     l2631:	
  5680  0DC6  3008               	movlw	8
  5681  0DC7  00AC               	movwf	??___flmul
  5682  0DC8                     u3895:	
  5683  0DC8  1003               	clrc
  5684  0DC9  0DB2               	rlf	___flmul@grs,f
  5685  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5686  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5687  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5688  0DCD  0BAC               	decfsz	??___flmul,f
  5689  0DCE  2DC8               	goto	u3895
  5690  0DCF                     l2633:	
  5691  0DCF  0825               	movf	___flmul@b+1,w
  5692  0DD0  00AC               	movwf	??___flmul
  5693  0DD1  082C               	movf	??___flmul,w
  5694  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5695  0DD3  0828               	movf	___flmul@a,w
  5696  0DD4  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5697  0DD9  0871               	movf	?__Umul8_16+1,w
  5698  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0DDC  00BD               	movwf	___flmul@temp+1
  5701  0DDD  0870               	movf	?__Umul8_16,w
  5702  0DDE  00BC               	movwf	___flmul@temp
  5703  0DDF                     l2635:	
  5704  0DDF  083C               	movf	___flmul@temp,w
  5705  0DE0  00AC               	movwf	??___flmul
  5706  0DE1  083D               	movf	___flmul@temp+1,w
  5707  0DE2  00AD               	movwf	??___flmul+1
  5708  0DE3  01AE               	clrf	??___flmul+2
  5709  0DE4  01AF               	clrf	??___flmul+3
  5710  0DE5  082C               	movf	??___flmul,w
  5711  0DE6  07B2               	addwf	___flmul@grs,f
  5712  0DE7  082D               	movf	??___flmul+1,w
  5713  0DE8  1103               	clrz
  5714  0DE9  1803               	skipnc
  5715  0DEA  3E01               	addlw	1
  5716  0DEB  1903               	skipnz
  5717  0DEC  2DEE               	goto	u3901
  5718  0DED  07B3               	addwf	___flmul@grs+1,f
  5719  0DEE                     u3901:	
  5720  0DEE  082E               	movf	??___flmul+2,w
  5721  0DEF  1103               	clrz
  5722  0DF0  1803               	skipnc
  5723  0DF1  3E01               	addlw	1
  5724  0DF2  1903               	skipnz
  5725  0DF3  2DF5               	goto	u3902
  5726  0DF4  07B4               	addwf	___flmul@grs+2,f
  5727  0DF5                     u3902:	
  5728  0DF5  082F               	movf	??___flmul+3,w
  5729  0DF6  1103               	clrz
  5730  0DF7  1803               	skipnc
  5731  0DF8  3E01               	addlw	1
  5732  0DF9  1903               	skipnz
  5733  0DFA  2DFC               	goto	u3903
  5734  0DFB  07B5               	addwf	___flmul@grs+3,f
  5735  0DFC                     u3903:	
  5736  0DFC                     l2637:	
  5737  0DFC  0824               	movf	___flmul@b,w
  5738  0DFD  00AC               	movwf	??___flmul
  5739  0DFE  082C               	movf	??___flmul,w
  5740  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5741  0E00  0829               	movf	___flmul@a+1,w
  5742  0E01  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5743  0E06  0871               	movf	?__Umul8_16+1,w
  5744  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5745  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5746  0E09  00BD               	movwf	___flmul@temp+1
  5747  0E0A  0870               	movf	?__Umul8_16,w
  5748  0E0B  00BC               	movwf	___flmul@temp
  5749  0E0C                     l2639:	
  5750  0E0C  083C               	movf	___flmul@temp,w
  5751  0E0D  00AC               	movwf	??___flmul
  5752  0E0E  083D               	movf	___flmul@temp+1,w
  5753  0E0F  00AD               	movwf	??___flmul+1
  5754  0E10  01AE               	clrf	??___flmul+2
  5755  0E11  01AF               	clrf	??___flmul+3
  5756  0E12  082C               	movf	??___flmul,w
  5757  0E13  07B2               	addwf	___flmul@grs,f
  5758  0E14  082D               	movf	??___flmul+1,w
  5759  0E15  1103               	clrz
  5760  0E16  1803               	skipnc
  5761  0E17  3E01               	addlw	1
  5762  0E18  1903               	skipnz
  5763  0E19  2E1B               	goto	u3911
  5764  0E1A  07B3               	addwf	___flmul@grs+1,f
  5765  0E1B                     u3911:	
  5766  0E1B  082E               	movf	??___flmul+2,w
  5767  0E1C  1103               	clrz
  5768  0E1D  1803               	skipnc
  5769  0E1E  3E01               	addlw	1
  5770  0E1F  1903               	skipnz
  5771  0E20  2E22               	goto	u3912
  5772  0E21  07B4               	addwf	___flmul@grs+2,f
  5773  0E22                     u3912:	
  5774  0E22  082F               	movf	??___flmul+3,w
  5775  0E23  1103               	clrz
  5776  0E24  1803               	skipnc
  5777  0E25  3E01               	addlw	1
  5778  0E26  1903               	skipnz
  5779  0E27  2E29               	goto	u3913
  5780  0E28  07B5               	addwf	___flmul@grs+3,f
  5781  0E29                     u3913:	
  5782  0E29                     l2641:	
  5783  0E29  3008               	movlw	8
  5784  0E2A  00AC               	movwf	??___flmul
  5785  0E2B                     u3925:	
  5786  0E2B  1003               	clrc
  5787  0E2C  0DB2               	rlf	___flmul@grs,f
  5788  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5789  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5790  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5791  0E30  0BAC               	decfsz	??___flmul,f
  5792  0E31  2E2B               	goto	u3925
  5793  0E32  0824               	movf	___flmul@b,w
  5794  0E33  00AC               	movwf	??___flmul
  5795  0E34  082C               	movf	??___flmul,w
  5796  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5797  0E36  0828               	movf	___flmul@a,w
  5798  0E37  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5799  0E3C  0871               	movf	?__Umul8_16+1,w
  5800  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5801  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5802  0E3F  00BD               	movwf	___flmul@temp+1
  5803  0E40  0870               	movf	?__Umul8_16,w
  5804  0E41  00BC               	movwf	___flmul@temp
  5805  0E42                     l2643:	
  5806  0E42  083C               	movf	___flmul@temp,w
  5807  0E43  00AC               	movwf	??___flmul
  5808  0E44  083D               	movf	___flmul@temp+1,w
  5809  0E45  00AD               	movwf	??___flmul+1
  5810  0E46  01AE               	clrf	??___flmul+2
  5811  0E47  01AF               	clrf	??___flmul+3
  5812  0E48  082C               	movf	??___flmul,w
  5813  0E49  07B2               	addwf	___flmul@grs,f
  5814  0E4A  082D               	movf	??___flmul+1,w
  5815  0E4B  1103               	clrz
  5816  0E4C  1803               	skipnc
  5817  0E4D  3E01               	addlw	1
  5818  0E4E  1903               	skipnz
  5819  0E4F  2E51               	goto	u3931
  5820  0E50  07B3               	addwf	___flmul@grs+1,f
  5821  0E51                     u3931:	
  5822  0E51  082E               	movf	??___flmul+2,w
  5823  0E52  1103               	clrz
  5824  0E53  1803               	skipnc
  5825  0E54  3E01               	addlw	1
  5826  0E55  1903               	skipnz
  5827  0E56  2E58               	goto	u3932
  5828  0E57  07B4               	addwf	___flmul@grs+2,f
  5829  0E58                     u3932:	
  5830  0E58  082F               	movf	??___flmul+3,w
  5831  0E59  1103               	clrz
  5832  0E5A  1803               	skipnc
  5833  0E5B  3E01               	addlw	1
  5834  0E5C  1903               	skipnz
  5835  0E5D  2E5F               	goto	u3933
  5836  0E5E  07B5               	addwf	___flmul@grs+3,f
  5837  0E5F                     u3933:	
  5838  0E5F                     l2645:	
  5839  0E5F  0825               	movf	___flmul@b+1,w
  5840  0E60  00AC               	movwf	??___flmul
  5841  0E61  082C               	movf	??___flmul,w
  5842  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5843  0E63  082A               	movf	___flmul@a+2,w
  5844  0E64  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5845  0E69  0871               	movf	?__Umul8_16+1,w
  5846  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5847  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5848  0E6C  00BD               	movwf	___flmul@temp+1
  5849  0E6D  0870               	movf	?__Umul8_16,w
  5850  0E6E  00BC               	movwf	___flmul@temp
  5851  0E6F  083C               	movf	___flmul@temp,w
  5852  0E70  00AC               	movwf	??___flmul
  5853  0E71  083D               	movf	___flmul@temp+1,w
  5854  0E72  00AD               	movwf	??___flmul+1
  5855  0E73  01AE               	clrf	??___flmul+2
  5856  0E74  01AF               	clrf	??___flmul+3
  5857  0E75  082C               	movf	??___flmul,w
  5858  0E76  07B8               	addwf	___flmul@prod,f
  5859  0E77  082D               	movf	??___flmul+1,w
  5860  0E78  1103               	clrz
  5861  0E79  1803               	skipnc
  5862  0E7A  3E01               	addlw	1
  5863  0E7B  1903               	skipnz
  5864  0E7C  2E7E               	goto	u3941
  5865  0E7D  07B9               	addwf	___flmul@prod+1,f
  5866  0E7E                     u3941:	
  5867  0E7E  082E               	movf	??___flmul+2,w
  5868  0E7F  1103               	clrz
  5869  0E80  1803               	skipnc
  5870  0E81  3E01               	addlw	1
  5871  0E82  1903               	skipnz
  5872  0E83  2E85               	goto	u3942
  5873  0E84  07BA               	addwf	___flmul@prod+2,f
  5874  0E85                     u3942:	
  5875  0E85  082F               	movf	??___flmul+3,w
  5876  0E86  1103               	clrz
  5877  0E87  1803               	skipnc
  5878  0E88  3E01               	addlw	1
  5879  0E89  1903               	skipnz
  5880  0E8A  2E8C               	goto	u3943
  5881  0E8B  07BB               	addwf	___flmul@prod+3,f
  5882  0E8C                     u3943:	
  5883  0E8C                     l2647:	
  5884  0E8C  0826               	movf	___flmul@b+2,w
  5885  0E8D  00AC               	movwf	??___flmul
  5886  0E8E  082C               	movf	??___flmul,w
  5887  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5888  0E90  0829               	movf	___flmul@a+1,w
  5889  0E91  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5890  0E96  0871               	movf	?__Umul8_16+1,w
  5891  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5893  0E99  00BD               	movwf	___flmul@temp+1
  5894  0E9A  0870               	movf	?__Umul8_16,w
  5895  0E9B  00BC               	movwf	___flmul@temp
  5896  0E9C                     l2649:	
  5897  0E9C  083C               	movf	___flmul@temp,w
  5898  0E9D  00AC               	movwf	??___flmul
  5899  0E9E  083D               	movf	___flmul@temp+1,w
  5900  0E9F  00AD               	movwf	??___flmul+1
  5901  0EA0  01AE               	clrf	??___flmul+2
  5902  0EA1  01AF               	clrf	??___flmul+3
  5903  0EA2  082C               	movf	??___flmul,w
  5904  0EA3  07B8               	addwf	___flmul@prod,f
  5905  0EA4  082D               	movf	??___flmul+1,w
  5906  0EA5  1103               	clrz
  5907  0EA6  1803               	skipnc
  5908  0EA7  3E01               	addlw	1
  5909  0EA8  1903               	skipnz
  5910  0EA9  2EAB               	goto	u3951
  5911  0EAA  07B9               	addwf	___flmul@prod+1,f
  5912  0EAB                     u3951:	
  5913  0EAB  082E               	movf	??___flmul+2,w
  5914  0EAC  1103               	clrz
  5915  0EAD  1803               	skipnc
  5916  0EAE  3E01               	addlw	1
  5917  0EAF  1903               	skipnz
  5918  0EB0  2EB2               	goto	u3952
  5919  0EB1  07BA               	addwf	___flmul@prod+2,f
  5920  0EB2                     u3952:	
  5921  0EB2  082F               	movf	??___flmul+3,w
  5922  0EB3  1103               	clrz
  5923  0EB4  1803               	skipnc
  5924  0EB5  3E01               	addlw	1
  5925  0EB6  1903               	skipnz
  5926  0EB7  2EB9               	goto	u3953
  5927  0EB8  07BB               	addwf	___flmul@prod+3,f
  5928  0EB9                     u3953:	
  5929  0EB9  0826               	movf	___flmul@b+2,w
  5930  0EBA  00AC               	movwf	??___flmul
  5931  0EBB  082C               	movf	??___flmul,w
  5932  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5933  0EBD  082A               	movf	___flmul@a+2,w
  5934  0EBE  120A  158A  2003  120A  158A  	fcall	__Umul8_16
  5935  0EC3  0871               	movf	?__Umul8_16+1,w
  5936  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5937  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5938  0EC6  00BD               	movwf	___flmul@temp+1
  5939  0EC7  0870               	movf	?__Umul8_16,w
  5940  0EC8  00BC               	movwf	___flmul@temp
  5941  0EC9                     l2651:	
  5942  0EC9  083C               	movf	___flmul@temp,w
  5943  0ECA  00AC               	movwf	??___flmul
  5944  0ECB  083D               	movf	___flmul@temp+1,w
  5945  0ECC  00AD               	movwf	??___flmul+1
  5946  0ECD  01AE               	clrf	??___flmul+2
  5947  0ECE  01AF               	clrf	??___flmul+3
  5948  0ECF  3008               	movlw	8
  5949  0ED0                     u3965:	
  5950  0ED0  1003               	clrc
  5951  0ED1  0DAC               	rlf	??___flmul,f
  5952  0ED2  0DAD               	rlf	??___flmul+1,f
  5953  0ED3  0DAE               	rlf	??___flmul+2,f
  5954  0ED4  0DAF               	rlf	??___flmul+3,f
  5955  0ED5                     u3960:	
  5956  0ED5  3EFF               	addlw	-1
  5957  0ED6  1D03               	skipz
  5958  0ED7  2ED0               	goto	u3965
  5959  0ED8  082C               	movf	??___flmul,w
  5960  0ED9  07B8               	addwf	___flmul@prod,f
  5961  0EDA  082D               	movf	??___flmul+1,w
  5962  0EDB  1103               	clrz
  5963  0EDC  1803               	skipnc
  5964  0EDD  3E01               	addlw	1
  5965  0EDE  1903               	skipnz
  5966  0EDF  2EE1               	goto	u3971
  5967  0EE0  07B9               	addwf	___flmul@prod+1,f
  5968  0EE1                     u3971:	
  5969  0EE1  082E               	movf	??___flmul+2,w
  5970  0EE2  1103               	clrz
  5971  0EE3  1803               	skipnc
  5972  0EE4  3E01               	addlw	1
  5973  0EE5  1903               	skipnz
  5974  0EE6  2EE8               	goto	u3972
  5975  0EE7  07BA               	addwf	___flmul@prod+2,f
  5976  0EE8                     u3972:	
  5977  0EE8  082F               	movf	??___flmul+3,w
  5978  0EE9  1103               	clrz
  5979  0EEA  1803               	skipnc
  5980  0EEB  3E01               	addlw	1
  5981  0EEC  1903               	skipnz
  5982  0EED  2EEF               	goto	u3973
  5983  0EEE  07BB               	addwf	___flmul@prod+3,f
  5984  0EEF                     u3973:	
  5985  0EEF                     l2653:	
  5986  0EEF  0832               	movf	___flmul@grs,w
  5987  0EF0  00AC               	movwf	??___flmul
  5988  0EF1  0833               	movf	___flmul@grs+1,w
  5989  0EF2  00AD               	movwf	??___flmul+1
  5990  0EF3  0834               	movf	___flmul@grs+2,w
  5991  0EF4  00AE               	movwf	??___flmul+2
  5992  0EF5  0835               	movf	___flmul@grs+3,w
  5993  0EF6  00AF               	movwf	??___flmul+3
  5994  0EF7  3018               	movlw	24
  5995  0EF8                     u3985:	
  5996  0EF8  1003               	clrc
  5997  0EF9  0CAF               	rrf	??___flmul+3,f
  5998  0EFA  0CAE               	rrf	??___flmul+2,f
  5999  0EFB  0CAD               	rrf	??___flmul+1,f
  6000  0EFC  0CAC               	rrf	??___flmul,f
  6001  0EFD                     u3980:	
  6002  0EFD  3EFF               	addlw	-1
  6003  0EFE  1D03               	skipz
  6004  0EFF  2EF8               	goto	u3985
  6005  0F00  082C               	movf	??___flmul,w
  6006  0F01  07B8               	addwf	___flmul@prod,f
  6007  0F02  082D               	movf	??___flmul+1,w
  6008  0F03  1103               	clrz
  6009  0F04  1803               	skipnc
  6010  0F05  3E01               	addlw	1
  6011  0F06  1903               	skipnz
  6012  0F07  2F09               	goto	u3991
  6013  0F08  07B9               	addwf	___flmul@prod+1,f
  6014  0F09                     u3991:	
  6015  0F09  082E               	movf	??___flmul+2,w
  6016  0F0A  1103               	clrz
  6017  0F0B  1803               	skipnc
  6018  0F0C  3E01               	addlw	1
  6019  0F0D  1903               	skipnz
  6020  0F0E  2F10               	goto	u3992
  6021  0F0F  07BA               	addwf	___flmul@prod+2,f
  6022  0F10                     u3992:	
  6023  0F10  082F               	movf	??___flmul+3,w
  6024  0F11  1103               	clrz
  6025  0F12  1803               	skipnc
  6026  0F13  3E01               	addlw	1
  6027  0F14  1903               	skipnz
  6028  0F15  2F17               	goto	u3993
  6029  0F16  07BB               	addwf	___flmul@prod+3,f
  6030  0F17                     u3993:	
  6031  0F17                     l2655:	
  6032  0F17  3008               	movlw	8
  6033  0F18  00AC               	movwf	??___flmul
  6034  0F19                     u4005:	
  6035  0F19  1003               	clrc
  6036  0F1A  0DB2               	rlf	___flmul@grs,f
  6037  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6038  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6039  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6040  0F1E  0BAC               	decfsz	??___flmul,f
  6041  0F1F  2F19               	goto	u4005
  6042  0F20                     l2657:	
  6043  0F20  0837               	movf	___flmul@bexp,w
  6044  0F21  0736               	addwf	___flmul@aexp,w
  6045  0F22  00AC               	movwf	??___flmul
  6046  0F23  01AD               	clrf	??___flmul+1
  6047  0F24  0DAD               	rlf	??___flmul+1,f
  6048  0F25  082C               	movf	??___flmul,w
  6049  0F26  3E82               	addlw	130
  6050  0F27  00BC               	movwf	___flmul@temp
  6051  0F28  082D               	movf	??___flmul+1,w
  6052  0F29  1803               	skipnc
  6053  0F2A  3E01               	addlw	1
  6054  0F2B  3EFF               	addlw	255
  6055  0F2C  00BD               	movwf	___flmul@temp+1
  6056  0F2D  2F4B               	goto	l2669
  6057  0F2E                     l2659:	
  6058  0F2E  3001               	movlw	1
  6059  0F2F  00AC               	movwf	??___flmul
  6060  0F30                     u4015:	
  6061  0F30  1003               	clrc
  6062  0F31  0DB8               	rlf	___flmul@prod,f
  6063  0F32  0DB9               	rlf	___flmul@prod+1,f
  6064  0F33  0DBA               	rlf	___flmul@prod+2,f
  6065  0F34  0DBB               	rlf	___flmul@prod+3,f
  6066  0F35  0BAC               	decfsz	??___flmul,f
  6067  0F36  2F30               	goto	u4015
  6068  0F37                     l2661:	
  6069  0F37  1FB5               	btfss	___flmul@grs+3,7
  6070  0F38  2F3A               	goto	u4021
  6071  0F39  2F3B               	goto	u4020
  6072  0F3A                     u4021:	
  6073  0F3A  2F3C               	goto	l2665
  6074  0F3B                     u4020:	
  6075  0F3B                     l2663:	
  6076  0F3B  1438               	bsf	___flmul@prod,0
  6077  0F3C                     l2665:	
  6078  0F3C  3001               	movlw	1
  6079  0F3D  00AC               	movwf	??___flmul
  6080  0F3E                     u4035:	
  6081  0F3E  1003               	clrc
  6082  0F3F  0DB2               	rlf	___flmul@grs,f
  6083  0F40  0DB3               	rlf	___flmul@grs+1,f
  6084  0F41  0DB4               	rlf	___flmul@grs+2,f
  6085  0F42  0DB5               	rlf	___flmul@grs+3,f
  6086  0F43  0BAC               	decfsz	??___flmul,f
  6087  0F44  2F3E               	goto	u4035
  6088  0F45                     l2667:	
  6089  0F45  30FF               	movlw	255
  6090  0F46  07BC               	addwf	___flmul@temp,f
  6091  0F47  1803               	skipnc
  6092  0F48  0ABD               	incf	___flmul@temp+1,f
  6093  0F49  30FF               	movlw	255
  6094  0F4A  07BD               	addwf	___flmul@temp+1,f
  6095  0F4B                     l2669:	
  6096  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6097  0F4C  2F4E               	goto	u4041
  6098  0F4D  2F4F               	goto	u4040
  6099  0F4E                     u4041:	
  6100  0F4E  2F2E               	goto	l2659
  6101  0F4F                     u4040:	
  6102  0F4F                     l2671:	
  6103  0F4F  01B6               	clrf	___flmul@aexp
  6104  0F50                     l2673:	
  6105  0F50  1FB5               	btfss	___flmul@grs+3,7
  6106  0F51  2F53               	goto	u4051
  6107  0F52  2F54               	goto	u4050
  6108  0F53                     u4051:	
  6109  0F53  2F70               	goto	l2681
  6110  0F54                     u4050:	
  6111  0F54                     l2675:	
  6112  0F54  30FF               	movlw	255
  6113  0F55  0532               	andwf	___flmul@grs,w
  6114  0F56  00AC               	movwf	??___flmul
  6115  0F57  30FF               	movlw	255
  6116  0F58  0533               	andwf	___flmul@grs+1,w
  6117  0F59  00AD               	movwf	??___flmul+1
  6118  0F5A  30FF               	movlw	255
  6119  0F5B  0534               	andwf	___flmul@grs+2,w
  6120  0F5C  00AE               	movwf	??___flmul+2
  6121  0F5D  307F               	movlw	127
  6122  0F5E  0535               	andwf	___flmul@grs+3,w
  6123  0F5F  00AF               	movwf	??___flmul+3
  6124  0F60  082F               	movf	??___flmul+3,w
  6125  0F61  042E               	iorwf	??___flmul+2,w
  6126  0F62  042D               	iorwf	??___flmul+1,w
  6127  0F63  042C               	iorwf	??___flmul,w
  6128  0F64  1903               	skipnz
  6129  0F65  2F67               	goto	u4061
  6130  0F66  2F68               	goto	u4060
  6131  0F67                     u4061:	
  6132  0F67  2F6B               	goto	l758
  6133  0F68                     u4060:	
  6134  0F68                     l2677:	
  6135  0F68  01B6               	clrf	___flmul@aexp
  6136  0F69  0AB6               	incf	___flmul@aexp,f
  6137  0F6A  2F70               	goto	l2681
  6138  0F6B                     l758:	
  6139  0F6B  1C38               	btfss	___flmul@prod,0
  6140  0F6C  2F6E               	goto	u4071
  6141  0F6D  2F6F               	goto	u4070
  6142  0F6E                     u4071:	
  6143  0F6E  2F70               	goto	l2681
  6144  0F6F                     u4070:	
  6145  0F6F  2F68               	goto	l2677
  6146  0F70                     l2681:	
  6147  0F70  0836               	movf	___flmul@aexp,w
  6148  0F71  1903               	btfsc	3,2
  6149  0F72  2F74               	goto	u4081
  6150  0F73  2F75               	goto	u4080
  6151  0F74                     u4081:	
  6152  0F74  2FA6               	goto	l2691
  6153  0F75                     u4080:	
  6154  0F75                     l2683:	
  6155  0F75  3001               	movlw	1
  6156  0F76  07B8               	addwf	___flmul@prod,f
  6157  0F77  3000               	movlw	0
  6158  0F78  1803               	skipnc
  6159  0F79  3001               	movlw	1
  6160  0F7A  07B9               	addwf	___flmul@prod+1,f
  6161  0F7B  3000               	movlw	0
  6162  0F7C  1803               	skipnc
  6163  0F7D  3001               	movlw	1
  6164  0F7E  07BA               	addwf	___flmul@prod+2,f
  6165  0F7F  3000               	movlw	0
  6166  0F80  1803               	skipnc
  6167  0F81  3001               	movlw	1
  6168  0F82  07BB               	addwf	___flmul@prod+3,f
  6169  0F83                     l2685:	
  6170  0F83  1C3B               	btfss	___flmul@prod+3,0
  6171  0F84  2F86               	goto	u4091
  6172  0F85  2F87               	goto	u4090
  6173  0F86                     u4091:	
  6174  0F86  2FA6               	goto	l2691
  6175  0F87                     u4090:	
  6176  0F87                     l2687:	
  6177  0F87  0838               	movf	___flmul@prod,w
  6178  0F88  00AC               	movwf	??___flmul
  6179  0F89  0839               	movf	___flmul@prod+1,w
  6180  0F8A  00AD               	movwf	??___flmul+1
  6181  0F8B  083A               	movf	___flmul@prod+2,w
  6182  0F8C  00AE               	movwf	??___flmul+2
  6183  0F8D  083B               	movf	___flmul@prod+3,w
  6184  0F8E  00AF               	movwf	??___flmul+3
  6185  0F8F  3001               	movlw	1
  6186  0F90  00B0               	movwf	??___flmul+4
  6187  0F91                     u4105:	
  6188  0F91  0D2F               	rlf	??___flmul+3,w
  6189  0F92  0CAF               	rrf	??___flmul+3,f
  6190  0F93  0CAE               	rrf	??___flmul+2,f
  6191  0F94  0CAD               	rrf	??___flmul+1,f
  6192  0F95  0CAC               	rrf	??___flmul,f
  6193  0F96                     u4100:	
  6194  0F96  0BB0               	decfsz	??___flmul+4,f
  6195  0F97  2F91               	goto	u4105
  6196  0F98  082F               	movf	??___flmul+3,w
  6197  0F99  00BB               	movwf	___flmul@prod+3
  6198  0F9A  082E               	movf	??___flmul+2,w
  6199  0F9B  00BA               	movwf	___flmul@prod+2
  6200  0F9C  082D               	movf	??___flmul+1,w
  6201  0F9D  00B9               	movwf	___flmul@prod+1
  6202  0F9E  082C               	movf	??___flmul,w
  6203  0F9F  00B8               	movwf	___flmul@prod
  6204  0FA0                     l2689:	
  6205  0FA0  3001               	movlw	1
  6206  0FA1  07BC               	addwf	___flmul@temp,f
  6207  0FA2  1803               	skipnc
  6208  0FA3  0ABD               	incf	___flmul@temp+1,f
  6209  0FA4  3000               	movlw	0
  6210  0FA5  07BD               	addwf	___flmul@temp+1,f
  6211  0FA6                     l2691:	
  6212  0FA6  083D               	movf	___flmul@temp+1,w
  6213  0FA7  3A80               	xorlw	128
  6214  0FA8  00FF               	movwf	btemp+1
  6215  0FA9  3080               	movlw	128
  6216  0FAA  027F               	subwf	btemp+1,w
  6217  0FAB  1D03               	skipz
  6218  0FAC  2FAF               	goto	u4115
  6219  0FAD  30FF               	movlw	255
  6220  0FAE  023C               	subwf	___flmul@temp,w
  6221  0FAF                     u4115:	
  6222  0FAF  1C03               	skipc
  6223  0FB0  2FB2               	goto	u4111
  6224  0FB1  2FB3               	goto	u4110
  6225  0FB2                     u4111:	
  6226  0FB2  2FBE               	goto	l2695
  6227  0FB3                     u4110:	
  6228  0FB3                     l2693:	
  6229  0FB3  307F               	movlw	127
  6230  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6231  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6232  0FB6  00BB               	movwf	___flmul@prod+3
  6233  0FB7  3080               	movlw	128
  6234  0FB8  00BA               	movwf	___flmul@prod+2
  6235  0FB9  3000               	movlw	0
  6236  0FBA  00B9               	movwf	___flmul@prod+1
  6237  0FBB  3000               	movlw	0
  6238  0FBC  00B8               	movwf	___flmul@prod
  6239  0FBD  2FF3               	goto	l764
  6240  0FBE                     l2695:	
  6241  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6242  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6243  0FC0  083D               	movf	___flmul@temp+1,w
  6244  0FC1  3A80               	xorlw	128
  6245  0FC2  00FF               	movwf	btemp+1
  6246  0FC3  3080               	movlw	128
  6247  0FC4  027F               	subwf	btemp+1,w
  6248  0FC5  1D03               	skipz
  6249  0FC6  2FC9               	goto	u4125
  6250  0FC7  3001               	movlw	1
  6251  0FC8  023C               	subwf	___flmul@temp,w
  6252  0FC9                     u4125:	
  6253  0FC9  1803               	skipnc
  6254  0FCA  2FCC               	goto	u4121
  6255  0FCB  2FCD               	goto	u4120
  6256  0FCC                     u4121:	
  6257  0FCC  2FD9               	goto	l2701
  6258  0FCD                     u4120:	
  6259  0FCD                     l2697:	
  6260  0FCD  3000               	movlw	0
  6261  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6262  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6263  0FD0  00BB               	movwf	___flmul@prod+3
  6264  0FD1  3000               	movlw	0
  6265  0FD2  00BA               	movwf	___flmul@prod+2
  6266  0FD3  3000               	movlw	0
  6267  0FD4  00B9               	movwf	___flmul@prod+1
  6268  0FD5  3000               	movlw	0
  6269  0FD6  00B8               	movwf	___flmul@prod
  6270  0FD7                     l2699:	
  6271  0FD7  01B1               	clrf	___flmul@sign
  6272  0FD8  2FF3               	goto	l764
  6273  0FD9                     l2701:	
  6274  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6275  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6276  0FDB  083C               	movf	___flmul@temp,w
  6277  0FDC  00AC               	movwf	??___flmul
  6278  0FDD  082C               	movf	??___flmul,w
  6279  0FDE  00B7               	movwf	___flmul@bexp
  6280  0FDF  30FF               	movlw	255
  6281  0FE0  05B8               	andwf	___flmul@prod,f
  6282  0FE1  30FF               	movlw	255
  6283  0FE2  05B9               	andwf	___flmul@prod+1,f
  6284  0FE3  307F               	movlw	127
  6285  0FE4  05BA               	andwf	___flmul@prod+2,f
  6286  0FE5  3000               	movlw	0
  6287  0FE6  05BB               	andwf	___flmul@prod+3,f
  6288  0FE7                     l2703:	
  6289  0FE7  1C37               	btfss	___flmul@bexp,0
  6290  0FE8  2FEA               	goto	u4131
  6291  0FE9  2FEB               	goto	u4130
  6292  0FEA                     u4131:	
  6293  0FEA  2FEC               	goto	l2707
  6294  0FEB                     u4130:	
  6295  0FEB                     l2705:	
  6296  0FEB  17BA               	bsf	___flmul@prod+2,7
  6297  0FEC                     l2707:	
  6298  0FEC  0837               	movf	___flmul@bexp,w
  6299  0FED  00AC               	movwf	??___flmul
  6300  0FEE  1003               	clrc
  6301  0FEF  0C2C               	rrf	??___flmul,w
  6302  0FF0  00AD               	movwf	??___flmul+1
  6303  0FF1  082D               	movf	??___flmul+1,w
  6304  0FF2  00BB               	movwf	___flmul@prod+3
  6305  0FF3                     l764:	
  6306  0FF3  0831               	movf	___flmul@sign,w
  6307  0FF4  00AC               	movwf	??___flmul
  6308  0FF5  082C               	movf	??___flmul,w
  6309  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6310  0FF7                     l2709:	
  6311  0FF7  083B               	movf	___flmul@prod+3,w
  6312  0FF8  00A7               	movwf	?___flmul+3
  6313  0FF9  083A               	movf	___flmul@prod+2,w
  6314  0FFA  00A6               	movwf	?___flmul+2
  6315  0FFB  0839               	movf	___flmul@prod+1,w
  6316  0FFC  00A5               	movwf	?___flmul+1
  6317  0FFD  0838               	movf	___flmul@prod,w
  6318  0FFE  00A4               	movwf	?___flmul
  6319  0FFF                     l752:	
  6320  0FFF  0008               	return
  6321  1000                     __end_of___flmul:	
  6322                           
  6323                           	psect	text12
  6324  0803                     __ptext12:	
  6325 ;; *************** function __Umul8_16 *****************
  6326 ;; Defined at:
  6327 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  multiplier      1    wreg     unsigned char 
  6330 ;;  multiplicand    1    0[COMMON] unsigned char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  multiplier      1    8[COMMON] unsigned char 
  6333 ;;  word_mpld       2    6[COMMON] unsigned int 
  6334 ;;  product         2    4[COMMON] unsigned int 
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  2    0[COMMON] unsigned int 
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6344 ;;      Params:         2       0       0       0       0
  6345 ;;      Locals:         5       0       0       0       0
  6346 ;;      Temps:          2       0       0       0       0
  6347 ;;      Totals:         9       0       0       0       0
  6348 ;;Total ram usage:        9 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		___flmul
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           
  6358                           ;psect for function __Umul8_16
  6359  0803                     __Umul8_16:	
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6363                           ;__Umul8_16@multiplier stored from wreg
  6364  0803  00F8               	movwf	__Umul8_16@multiplier
  6365  0804                     l2235:	
  6366  0804  01F4               	clrf	__Umul8_16@product
  6367  0805  01F5               	clrf	__Umul8_16@product+1
  6368  0806                     l2237:	
  6369  0806  0870               	movf	__Umul8_16@multiplicand,w
  6370  0807  00F2               	movwf	??__Umul8_16
  6371  0808  01F3               	clrf	??__Umul8_16+1
  6372  0809  0872               	movf	??__Umul8_16,w
  6373  080A  00F6               	movwf	__Umul8_16@word_mpld
  6374  080B  0873               	movf	??__Umul8_16+1,w
  6375  080C  00F7               	movwf	__Umul8_16@word_mpld+1
  6376  080D                     l2239:	
  6377  080D  1C78               	btfss	__Umul8_16@multiplier,0
  6378  080E  2810               	goto	u2961
  6379  080F  2811               	goto	u2960
  6380  0810                     u2961:	
  6381  0810  2817               	goto	l813
  6382  0811                     u2960:	
  6383  0811                     l2241:	
  6384  0811  0876               	movf	__Umul8_16@word_mpld,w
  6385  0812  07F4               	addwf	__Umul8_16@product,f
  6386  0813  1803               	skipnc
  6387  0814  0AF5               	incf	__Umul8_16@product+1,f
  6388  0815  0877               	movf	__Umul8_16@word_mpld+1,w
  6389  0816  07F5               	addwf	__Umul8_16@product+1,f
  6390  0817                     l813:	
  6391  0817  3001               	movlw	1
  6392  0818                     u2975:	
  6393  0818  1003               	clrc
  6394  0819  0DF6               	rlf	__Umul8_16@word_mpld,f
  6395  081A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6396  081B  3EFF               	addlw	-1
  6397  081C  1D03               	skipz
  6398  081D  2818               	goto	u2975
  6399  081E  1003               	clrc
  6400  081F  0CF8               	rrf	__Umul8_16@multiplier,f
  6401  0820                     l2243:	
  6402  0820  0878               	movf	__Umul8_16@multiplier,w
  6403  0821  1D03               	btfss	3,2
  6404  0822  2824               	goto	u2981
  6405  0823  2825               	goto	u2980
  6406  0824                     u2981:	
  6407  0824  280D               	goto	l2239
  6408  0825                     u2980:	
  6409  0825                     l2245:	
  6410  0825  0875               	movf	__Umul8_16@product+1,w
  6411  0826  00F1               	movwf	?__Umul8_16+1
  6412  0827  0874               	movf	__Umul8_16@product,w
  6413  0828  00F0               	movwf	?__Umul8_16
  6414  0829                     l815:	
  6415  0829  0008               	return
  6416  082A                     __end_of__Umul8_16:	
  6417                           
  6418                           	psect	text13
  6419  1220                     __ptext13:	
  6420 ;; *************** function __tdiv_to_l_ *****************
  6421 ;; Defined at:
  6422 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  f1              4    0[COMMON] float 
  6425 ;;  f2              4    4[COMMON] float 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  quot            4    0[BANK0 ] unsigned long 
  6428 ;;  exp1            1    5[BANK0 ] unsigned char 
  6429 ;;  cntr            1    4[BANK0 ] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  4    0[COMMON] unsigned long 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6439 ;;      Params:         8       0       0       0       0
  6440 ;;      Locals:         0       6       0       0       0
  6441 ;;      Temps:          4       0       0       0       0
  6442 ;;      Totals:        12       6       0       0       0
  6443 ;;Total ram usage:       18 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_sprintf
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function __tdiv_to_l_
  6454  1220                     __tdiv_to_l_:	
  6455  1220                     l2789:	
  6456                           ;incstack = 0
  6457                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6458                           
  6459  1220  0870               	movf	__tdiv_to_l_@f1,w
  6460  1221  00F8               	movwf	??__tdiv_to_l_
  6461  1222  0871               	movf	__tdiv_to_l_@f1+1,w
  6462  1223  00F9               	movwf	??__tdiv_to_l_+1
  6463  1224  0872               	movf	__tdiv_to_l_@f1+2,w
  6464  1225  00FA               	movwf	??__tdiv_to_l_+2
  6465  1226  1003               	clrc
  6466  1227  0D79               	rlf	??__tdiv_to_l_+1,w
  6467  1228  0D7A               	rlf	??__tdiv_to_l_+2,w
  6468  1229  00FB               	movwf	??__tdiv_to_l_+3
  6469  122A  087B               	movf	??__tdiv_to_l_+3,w
  6470  122B  1283               	bcf	3,5	;RP0=0, select bank0
  6471  122C  1303               	bcf	3,6	;RP1=0, select bank0
  6472  122D  00A5               	movwf	__tdiv_to_l_@exp1
  6473  122E  0825               	movf	__tdiv_to_l_@exp1,w
  6474  122F  1D03               	btfss	3,2
  6475  1230  2A32               	goto	u4441
  6476  1231  2A33               	goto	u4440
  6477  1232                     u4441:	
  6478  1232  2A3C               	goto	l2795
  6479  1233                     u4440:	
  6480  1233                     l2791:	
  6481  1233  3000               	movlw	0
  6482  1234  00F3               	movwf	?__tdiv_to_l_+3
  6483  1235  3000               	movlw	0
  6484  1236  00F2               	movwf	?__tdiv_to_l_+2
  6485  1237  3000               	movlw	0
  6486  1238  00F1               	movwf	?__tdiv_to_l_+1
  6487  1239  3000               	movlw	0
  6488  123A  00F0               	movwf	?__tdiv_to_l_
  6489  123B  2ADC               	goto	l546
  6490  123C                     l2795:	
  6491  123C  0874               	movf	__tdiv_to_l_@f2,w
  6492  123D  00F8               	movwf	??__tdiv_to_l_
  6493  123E  0875               	movf	__tdiv_to_l_@f2+1,w
  6494  123F  00F9               	movwf	??__tdiv_to_l_+1
  6495  1240  0876               	movf	__tdiv_to_l_@f2+2,w
  6496  1241  00FA               	movwf	??__tdiv_to_l_+2
  6497  1242  1003               	clrc
  6498  1243  0D79               	rlf	??__tdiv_to_l_+1,w
  6499  1244  0D7A               	rlf	??__tdiv_to_l_+2,w
  6500  1245  00FB               	movwf	??__tdiv_to_l_+3
  6501  1246  087B               	movf	??__tdiv_to_l_+3,w
  6502  1247  00A4               	movwf	__tdiv_to_l_@cntr
  6503  1248  0824               	movf	__tdiv_to_l_@cntr,w
  6504  1249  1D03               	btfss	3,2
  6505  124A  2A4C               	goto	u4451
  6506  124B  2A4D               	goto	u4450
  6507  124C                     u4451:	
  6508  124C  2A4E               	goto	l547
  6509  124D                     u4450:	
  6510  124D  2A33               	goto	l2791
  6511  124E                     l547:	
  6512  124E  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6513  124F                     l2801:	
  6514  124F  30FF               	movlw	255
  6515  1250  05F0               	andwf	__tdiv_to_l_@f1,f
  6516  1251  30FF               	movlw	255
  6517  1252  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6518  1253  3000               	movlw	0
  6519  1254  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6520  1255                     l2803:	
  6521  1255  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6522  1256  30FF               	movlw	255
  6523  1257  05F4               	andwf	__tdiv_to_l_@f2,f
  6524  1258  30FF               	movlw	255
  6525  1259  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6526  125A  3000               	movlw	0
  6527  125B  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6528  125C  3000               	movlw	0
  6529  125D  00A3               	movwf	__tdiv_to_l_@quot+3
  6530  125E  3000               	movlw	0
  6531  125F  00A2               	movwf	__tdiv_to_l_@quot+2
  6532  1260  3000               	movlw	0
  6533  1261  00A1               	movwf	__tdiv_to_l_@quot+1
  6534  1262  3000               	movlw	0
  6535  1263  00A0               	movwf	__tdiv_to_l_@quot
  6536  1264                     l2805:	
  6537  1264  307F               	movlw	127
  6538  1265  02A5               	subwf	__tdiv_to_l_@exp1,f
  6539  1266                     l2807:	
  6540  1266  3098               	movlw	152
  6541  1267  0724               	addwf	__tdiv_to_l_@cntr,w
  6542  1268  00F8               	movwf	??__tdiv_to_l_
  6543  1269  0878               	movf	??__tdiv_to_l_,w
  6544  126A  02A5               	subwf	__tdiv_to_l_@exp1,f
  6545  126B  3018               	movlw	24
  6546  126C  00F8               	movwf	??__tdiv_to_l_
  6547  126D  0878               	movf	??__tdiv_to_l_,w
  6548  126E  00A4               	movwf	__tdiv_to_l_@cntr
  6549  126F                     l2809:	
  6550  126F  3001               	movlw	1
  6551  1270  00F8               	movwf	??__tdiv_to_l_
  6552  1271                     u4465:	
  6553  1271  1003               	clrc
  6554  1272  0DA0               	rlf	__tdiv_to_l_@quot,f
  6555  1273  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6556  1274  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6557  1275  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6558  1276  0BF8               	decfsz	??__tdiv_to_l_,f
  6559  1277  2A71               	goto	u4465
  6560  1278                     l2811:	
  6561  1278  0876               	movf	__tdiv_to_l_@f2+2,w
  6562  1279  0272               	subwf	__tdiv_to_l_@f1+2,w
  6563  127A  1D03               	skipz
  6564  127B  2A82               	goto	u4475
  6565  127C  0875               	movf	__tdiv_to_l_@f2+1,w
  6566  127D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6567  127E  1D03               	skipz
  6568  127F  2A82               	goto	u4475
  6569  1280  0874               	movf	__tdiv_to_l_@f2,w
  6570  1281  0270               	subwf	__tdiv_to_l_@f1,w
  6571  1282                     u4475:	
  6572  1282  1C03               	skipc
  6573  1283  2A85               	goto	u4471
  6574  1284  2A86               	goto	u4470
  6575  1285                     u4471:	
  6576  1285  2A91               	goto	l2817
  6577  1286                     u4470:	
  6578  1286                     l2813:	
  6579  1286  0874               	movf	__tdiv_to_l_@f2,w
  6580  1287  02F0               	subwf	__tdiv_to_l_@f1,f
  6581  1288  0875               	movf	__tdiv_to_l_@f2+1,w
  6582  1289  1C03               	skipc
  6583  128A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6584  128B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6585  128C  0876               	movf	__tdiv_to_l_@f2+2,w
  6586  128D  1C03               	skipc
  6587  128E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6588  128F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6589  1290                     l2815:	
  6590  1290  1420               	bsf	__tdiv_to_l_@quot,0
  6591  1291                     l2817:	
  6592  1291  3001               	movlw	1
  6593  1292                     u4485:	
  6594  1292  1003               	clrc
  6595  1293  0DF0               	rlf	__tdiv_to_l_@f1,f
  6596  1294  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6597  1295  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6598  1296  3EFF               	addlw	-1
  6599  1297  1D03               	skipz
  6600  1298  2A92               	goto	u4485
  6601  1299                     l2819:	
  6602  1299  3001               	movlw	1
  6603  129A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6604  129B  1D03               	btfss	3,2
  6605  129C  2A9E               	goto	u4491
  6606  129D  2A9F               	goto	u4490
  6607  129E                     u4491:	
  6608  129E  2A6F               	goto	l2809
  6609  129F                     u4490:	
  6610  129F                     l550:	
  6611  129F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6612  12A0  2AA2               	goto	u4501
  6613  12A1  2AA3               	goto	u4500
  6614  12A2                     u4501:	
  6615  12A2  2ABD               	goto	l2829
  6616  12A3                     u4500:	
  6617  12A3                     l2821:	
  6618  12A3  0825               	movf	__tdiv_to_l_@exp1,w
  6619  12A4  3A80               	xorlw	128
  6620  12A5  3E97               	addlw	151
  6621  12A6  1803               	skipnc
  6622  12A7  2AA9               	goto	u4511
  6623  12A8  2AAA               	goto	u4510
  6624  12A9                     u4511:	
  6625  12A9  2AAB               	goto	l2827
  6626  12AA                     u4510:	
  6627  12AA  2A33               	goto	l2791
  6628  12AB                     l2827:	
  6629  12AB  3001               	movlw	1
  6630  12AC                     u4525:	
  6631  12AC  1003               	clrc
  6632  12AD  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6633  12AE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6634  12AF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6635  12B0  0CA0               	rrf	__tdiv_to_l_@quot,f
  6636  12B1  3EFF               	addlw	-1
  6637  12B2  1D03               	skipz
  6638  12B3  2AAC               	goto	u4525
  6639  12B4  3001               	movlw	1
  6640  12B5  00F8               	movwf	??__tdiv_to_l_
  6641  12B6  0878               	movf	??__tdiv_to_l_,w
  6642  12B7  07A5               	addwf	__tdiv_to_l_@exp1,f
  6643  12B8  1D03               	btfss	3,2
  6644  12B9  2ABB               	goto	u4531
  6645  12BA  2ABC               	goto	u4530
  6646  12BB                     u4531:	
  6647  12BB  2AAB               	goto	l2827
  6648  12BC                     u4530:	
  6649  12BC  2AD4               	goto	l2837
  6650  12BD                     l2829:	
  6651  12BD  3018               	movlw	24
  6652  12BE  0225               	subwf	__tdiv_to_l_@exp1,w
  6653  12BF  1C03               	skipc
  6654  12C0  2AC2               	goto	u4541
  6655  12C1  2AC3               	goto	u4540
  6656  12C2                     u4541:	
  6657  12C2  2ACF               	goto	l557
  6658  12C3                     u4540:	
  6659  12C3  2A33               	goto	l2791
  6660  12C4                     l2835:	
  6661  12C4  3001               	movlw	1
  6662  12C5  00F8               	movwf	??__tdiv_to_l_
  6663  12C6                     u4555:	
  6664  12C6  1003               	clrc
  6665  12C7  0DA0               	rlf	__tdiv_to_l_@quot,f
  6666  12C8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6667  12C9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6668  12CA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6669  12CB  0BF8               	decfsz	??__tdiv_to_l_,f
  6670  12CC  2AC6               	goto	u4555
  6671  12CD  3001               	movlw	1
  6672  12CE  02A5               	subwf	__tdiv_to_l_@exp1,f
  6673  12CF                     l557:	
  6674  12CF  0825               	movf	__tdiv_to_l_@exp1,w
  6675  12D0  1D03               	btfss	3,2
  6676  12D1  2AD3               	goto	u4561
  6677  12D2  2AD4               	goto	u4560
  6678  12D3                     u4561:	
  6679  12D3  2AC4               	goto	l2835
  6680  12D4                     u4560:	
  6681  12D4                     l2837:	
  6682  12D4  0823               	movf	__tdiv_to_l_@quot+3,w
  6683  12D5  00F3               	movwf	?__tdiv_to_l_+3
  6684  12D6  0822               	movf	__tdiv_to_l_@quot+2,w
  6685  12D7  00F2               	movwf	?__tdiv_to_l_+2
  6686  12D8  0821               	movf	__tdiv_to_l_@quot+1,w
  6687  12D9  00F1               	movwf	?__tdiv_to_l_+1
  6688  12DA  0820               	movf	__tdiv_to_l_@quot,w
  6689  12DB  00F0               	movwf	?__tdiv_to_l_
  6690  12DC                     l546:	
  6691  12DC  0008               	return
  6692  12DD                     __end_of__tdiv_to_l_:	
  6693                           
  6694                           	psect	text14
  6695  12DD                     __ptext14:	
  6696 ;; *************** function __div_to_l_ *****************
  6697 ;; Defined at:
  6698 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  f1              4    0[COMMON] unsigned long 
  6701 ;;  f2              4    4[COMMON] unsigned long 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  quot            4    0[BANK0 ] unsigned long 
  6704 ;;  exp1            1    5[BANK0 ] unsigned char 
  6705 ;;  cntr            1    4[BANK0 ] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4    0[COMMON] unsigned long 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6715 ;;      Params:         8       0       0       0       0
  6716 ;;      Locals:         0       6       0       0       0
  6717 ;;      Temps:          1       0       0       0       0
  6718 ;;      Totals:         9       6       0       0       0
  6719 ;;Total ram usage:       15 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_sprintf
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           
  6729                           ;psect for function __div_to_l_
  6730  12DD                     __div_to_l_:	
  6731  12DD                     l2841:	
  6732                           ;incstack = 0
  6733                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6734                           
  6735  12DD  1003               	clrc
  6736  12DE  0D72               	rlf	__div_to_l_@f1+2,w
  6737  12DF  0D73               	rlf	__div_to_l_@f1+3,w
  6738  12E0  00F8               	movwf	??__div_to_l_
  6739  12E1  0878               	movf	??__div_to_l_,w
  6740  12E2  1283               	bcf	3,5	;RP0=0, select bank0
  6741  12E3  1303               	bcf	3,6	;RP1=0, select bank0
  6742  12E4  00A5               	movwf	__div_to_l_@exp1
  6743  12E5  0825               	movf	__div_to_l_@exp1,w
  6744  12E6  1D03               	btfss	3,2
  6745  12E7  2AE9               	goto	u4571
  6746  12E8  2AEA               	goto	u4570
  6747  12E9                     u4571:	
  6748  12E9  2AF3               	goto	l2847
  6749  12EA                     u4570:	
  6750  12EA                     l2843:	
  6751  12EA  3000               	movlw	0
  6752  12EB  00F3               	movwf	?__div_to_l_+3
  6753  12EC  3000               	movlw	0
  6754  12ED  00F2               	movwf	?__div_to_l_+2
  6755  12EE  3000               	movlw	0
  6756  12EF  00F1               	movwf	?__div_to_l_+1
  6757  12F0  3000               	movlw	0
  6758  12F1  00F0               	movwf	?__div_to_l_
  6759  12F2  2B9A               	goto	l499
  6760  12F3                     l2847:	
  6761  12F3  1003               	clrc
  6762  12F4  0D76               	rlf	__div_to_l_@f2+2,w
  6763  12F5  0D77               	rlf	__div_to_l_@f2+3,w
  6764  12F6  00F8               	movwf	??__div_to_l_
  6765  12F7  0878               	movf	??__div_to_l_,w
  6766  12F8  00A4               	movwf	__div_to_l_@cntr
  6767  12F9  0824               	movf	__div_to_l_@cntr,w
  6768  12FA  1D03               	btfss	3,2
  6769  12FB  2AFD               	goto	u4581
  6770  12FC  2AFE               	goto	u4580
  6771  12FD                     u4581:	
  6772  12FD  2AFF               	goto	l500
  6773  12FE                     u4580:	
  6774  12FE  2AEA               	goto	l2843
  6775  12FF                     l500:	
  6776  12FF  17F2               	bsf	__div_to_l_@f1+2,7
  6777  1300                     l2853:	
  6778  1300  30FF               	movlw	255
  6779  1301  05F0               	andwf	__div_to_l_@f1,f
  6780  1302  30FF               	movlw	255
  6781  1303  05F1               	andwf	__div_to_l_@f1+1,f
  6782  1304  30FF               	movlw	255
  6783  1305  05F2               	andwf	__div_to_l_@f1+2,f
  6784  1306  3000               	movlw	0
  6785  1307  05F3               	andwf	__div_to_l_@f1+3,f
  6786  1308                     l2855:	
  6787  1308  17F6               	bsf	__div_to_l_@f2+2,7
  6788  1309  30FF               	movlw	255
  6789  130A  05F4               	andwf	__div_to_l_@f2,f
  6790  130B  30FF               	movlw	255
  6791  130C  05F5               	andwf	__div_to_l_@f2+1,f
  6792  130D  30FF               	movlw	255
  6793  130E  05F6               	andwf	__div_to_l_@f2+2,f
  6794  130F  3000               	movlw	0
  6795  1310  05F7               	andwf	__div_to_l_@f2+3,f
  6796  1311  3000               	movlw	0
  6797  1312  00A3               	movwf	__div_to_l_@quot+3
  6798  1313  3000               	movlw	0
  6799  1314  00A2               	movwf	__div_to_l_@quot+2
  6800  1315  3000               	movlw	0
  6801  1316  00A1               	movwf	__div_to_l_@quot+1
  6802  1317  3000               	movlw	0
  6803  1318  00A0               	movwf	__div_to_l_@quot
  6804  1319                     l2857:	
  6805  1319  307F               	movlw	127
  6806  131A  02A5               	subwf	__div_to_l_@exp1,f
  6807  131B                     l2859:	
  6808  131B  30A0               	movlw	160
  6809  131C  0724               	addwf	__div_to_l_@cntr,w
  6810  131D  00F8               	movwf	??__div_to_l_
  6811  131E  0878               	movf	??__div_to_l_,w
  6812  131F  02A5               	subwf	__div_to_l_@exp1,f
  6813  1320  3020               	movlw	32
  6814  1321  00F8               	movwf	??__div_to_l_
  6815  1322  0878               	movf	??__div_to_l_,w
  6816  1323  00A4               	movwf	__div_to_l_@cntr
  6817  1324                     l2861:	
  6818  1324  3001               	movlw	1
  6819  1325  00F8               	movwf	??__div_to_l_
  6820  1326                     u4595:	
  6821  1326  1003               	clrc
  6822  1327  0DA0               	rlf	__div_to_l_@quot,f
  6823  1328  0DA1               	rlf	__div_to_l_@quot+1,f
  6824  1329  0DA2               	rlf	__div_to_l_@quot+2,f
  6825  132A  0DA3               	rlf	__div_to_l_@quot+3,f
  6826  132B  0BF8               	decfsz	??__div_to_l_,f
  6827  132C  2B26               	goto	u4595
  6828  132D                     l2863:	
  6829  132D  0877               	movf	__div_to_l_@f2+3,w
  6830  132E  0273               	subwf	__div_to_l_@f1+3,w
  6831  132F  1D03               	skipz
  6832  1330  2B3B               	goto	u4605
  6833  1331  0876               	movf	__div_to_l_@f2+2,w
  6834  1332  0272               	subwf	__div_to_l_@f1+2,w
  6835  1333  1D03               	skipz
  6836  1334  2B3B               	goto	u4605
  6837  1335  0875               	movf	__div_to_l_@f2+1,w
  6838  1336  0271               	subwf	__div_to_l_@f1+1,w
  6839  1337  1D03               	skipz
  6840  1338  2B3B               	goto	u4605
  6841  1339  0874               	movf	__div_to_l_@f2,w
  6842  133A  0270               	subwf	__div_to_l_@f1,w
  6843  133B                     u4605:	
  6844  133B  1C03               	skipc
  6845  133C  2B3E               	goto	u4601
  6846  133D  2B3F               	goto	u4600
  6847  133E                     u4601:	
  6848  133E  2B4E               	goto	l2869
  6849  133F                     u4600:	
  6850  133F                     l2865:	
  6851  133F  0874               	movf	__div_to_l_@f2,w
  6852  1340  02F0               	subwf	__div_to_l_@f1,f
  6853  1341  0875               	movf	__div_to_l_@f2+1,w
  6854  1342  1C03               	skipc
  6855  1343  0F75               	incfsz	__div_to_l_@f2+1,w
  6856  1344  02F1               	subwf	__div_to_l_@f1+1,f
  6857  1345  0876               	movf	__div_to_l_@f2+2,w
  6858  1346  1C03               	skipc
  6859  1347  0F76               	incfsz	__div_to_l_@f2+2,w
  6860  1348  02F2               	subwf	__div_to_l_@f1+2,f
  6861  1349  0877               	movf	__div_to_l_@f2+3,w
  6862  134A  1C03               	skipc
  6863  134B  0F77               	incfsz	__div_to_l_@f2+3,w
  6864  134C  02F3               	subwf	__div_to_l_@f1+3,f
  6865  134D                     l2867:	
  6866  134D  1420               	bsf	__div_to_l_@quot,0
  6867  134E                     l2869:	
  6868  134E  3001               	movlw	1
  6869  134F  00F8               	movwf	??__div_to_l_
  6870  1350                     u4615:	
  6871  1350  1003               	clrc
  6872  1351  0DF0               	rlf	__div_to_l_@f1,f
  6873  1352  0DF1               	rlf	__div_to_l_@f1+1,f
  6874  1353  0DF2               	rlf	__div_to_l_@f1+2,f
  6875  1354  0DF3               	rlf	__div_to_l_@f1+3,f
  6876  1355  0BF8               	decfsz	??__div_to_l_,f
  6877  1356  2B50               	goto	u4615
  6878  1357                     l2871:	
  6879  1357  3001               	movlw	1
  6880  1358  02A4               	subwf	__div_to_l_@cntr,f
  6881  1359  1D03               	btfss	3,2
  6882  135A  2B5C               	goto	u4621
  6883  135B  2B5D               	goto	u4620
  6884  135C                     u4621:	
  6885  135C  2B24               	goto	l2861
  6886  135D                     u4620:	
  6887  135D                     l503:	
  6888  135D  1FA5               	btfss	__div_to_l_@exp1,7
  6889  135E  2B60               	goto	u4631
  6890  135F  2B61               	goto	u4630
  6891  1360                     u4631:	
  6892  1360  2B7B               	goto	l2881
  6893  1361                     u4630:	
  6894  1361                     l2873:	
  6895  1361  0825               	movf	__div_to_l_@exp1,w
  6896  1362  3A80               	xorlw	128
  6897  1363  3E9F               	addlw	159
  6898  1364  1803               	skipnc
  6899  1365  2B67               	goto	u4641
  6900  1366  2B68               	goto	u4640
  6901  1367                     u4641:	
  6902  1367  2B69               	goto	l2879
  6903  1368                     u4640:	
  6904  1368  2AEA               	goto	l2843
  6905  1369                     l2879:	
  6906  1369  3001               	movlw	1
  6907  136A                     u4655:	
  6908  136A  1003               	clrc
  6909  136B  0CA3               	rrf	__div_to_l_@quot+3,f
  6910  136C  0CA2               	rrf	__div_to_l_@quot+2,f
  6911  136D  0CA1               	rrf	__div_to_l_@quot+1,f
  6912  136E  0CA0               	rrf	__div_to_l_@quot,f
  6913  136F  3EFF               	addlw	-1
  6914  1370  1D03               	skipz
  6915  1371  2B6A               	goto	u4655
  6916  1372  3001               	movlw	1
  6917  1373  00F8               	movwf	??__div_to_l_
  6918  1374  0878               	movf	??__div_to_l_,w
  6919  1375  07A5               	addwf	__div_to_l_@exp1,f
  6920  1376  1D03               	btfss	3,2
  6921  1377  2B79               	goto	u4661
  6922  1378  2B7A               	goto	u4660
  6923  1379                     u4661:	
  6924  1379  2B69               	goto	l2879
  6925  137A                     u4660:	
  6926  137A  2B92               	goto	l2889
  6927  137B                     l2881:	
  6928  137B  3020               	movlw	32
  6929  137C  0225               	subwf	__div_to_l_@exp1,w
  6930  137D  1C03               	skipc
  6931  137E  2B80               	goto	u4671
  6932  137F  2B81               	goto	u4670
  6933  1380                     u4671:	
  6934  1380  2B8D               	goto	l510
  6935  1381                     u4670:	
  6936  1381  2AEA               	goto	l2843
  6937  1382                     l2887:	
  6938  1382  3001               	movlw	1
  6939  1383  00F8               	movwf	??__div_to_l_
  6940  1384                     u4685:	
  6941  1384  1003               	clrc
  6942  1385  0DA0               	rlf	__div_to_l_@quot,f
  6943  1386  0DA1               	rlf	__div_to_l_@quot+1,f
  6944  1387  0DA2               	rlf	__div_to_l_@quot+2,f
  6945  1388  0DA3               	rlf	__div_to_l_@quot+3,f
  6946  1389  0BF8               	decfsz	??__div_to_l_,f
  6947  138A  2B84               	goto	u4685
  6948  138B  3001               	movlw	1
  6949  138C  02A5               	subwf	__div_to_l_@exp1,f
  6950  138D                     l510:	
  6951  138D  0825               	movf	__div_to_l_@exp1,w
  6952  138E  1D03               	btfss	3,2
  6953  138F  2B91               	goto	u4691
  6954  1390  2B92               	goto	u4690
  6955  1391                     u4691:	
  6956  1391  2B82               	goto	l2887
  6957  1392                     u4690:	
  6958  1392                     l2889:	
  6959  1392  0823               	movf	__div_to_l_@quot+3,w
  6960  1393  00F3               	movwf	?__div_to_l_+3
  6961  1394  0822               	movf	__div_to_l_@quot+2,w
  6962  1395  00F2               	movwf	?__div_to_l_+2
  6963  1396  0821               	movf	__div_to_l_@quot+1,w
  6964  1397  00F1               	movwf	?__div_to_l_+1
  6965  1398  0820               	movf	__div_to_l_@quot,w
  6966  1399  00F0               	movwf	?__div_to_l_
  6967  139A                     l499:	
  6968  139A  0008               	return
  6969  139B                     __end_of__div_to_l_:	
  6970                           
  6971                           	psect	text15
  6972  1166                     __ptext15:	
  6973 ;; *************** function ___xxtofl *****************
  6974 ;; Defined at:
  6975 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  sign            1    wreg     unsigned char 
  6978 ;;  val             4    0[COMMON] long 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  sign            1    8[COMMON] unsigned char 
  6981 ;;  arg             4   10[COMMON] unsigned long 
  6982 ;;  exp             1    9[COMMON] unsigned char 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  4    0[COMMON] unsigned char 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6992 ;;      Params:         4       0       0       0       0
  6993 ;;      Locals:         6       0       0       0       0
  6994 ;;      Temps:          4       0       0       0       0
  6995 ;;      Totals:        14       0       0       0       0
  6996 ;;Total ram usage:       14 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_Read_ADC
  7002 ;;		_sprintf
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           
  7007                           ;psect for function ___xxtofl
  7008  1166                     ___xxtofl:	
  7009                           
  7010                           ;incstack = 0
  7011                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7012                           ;___xxtofl@sign stored from wreg
  7013  1166  00F8               	movwf	___xxtofl@sign
  7014  1167                     l3033:	
  7015  1167  0878               	movf	___xxtofl@sign,w
  7016  1168  1903               	btfsc	3,2
  7017  1169  296B               	goto	u5081
  7018  116A  296C               	goto	u5080
  7019  116B                     u5081:	
  7020  116B  2980               	goto	l3039
  7021  116C                     u5080:	
  7022  116C                     l3035:	
  7023  116C  1FF3               	btfss	___xxtofl@val+3,7
  7024  116D  296F               	goto	u5091
  7025  116E  2970               	goto	u5090
  7026  116F                     u5091:	
  7027  116F  2980               	goto	l3039
  7028  1170                     u5090:	
  7029  1170                     l3037:	
  7030  1170  0970               	comf	___xxtofl@val,w
  7031  1171  00FA               	movwf	___xxtofl@arg
  7032  1172  0971               	comf	___xxtofl@val+1,w
  7033  1173  00FB               	movwf	___xxtofl@arg+1
  7034  1174  0972               	comf	___xxtofl@val+2,w
  7035  1175  00FC               	movwf	___xxtofl@arg+2
  7036  1176  0973               	comf	___xxtofl@val+3,w
  7037  1177  00FD               	movwf	___xxtofl@arg+3
  7038  1178  0AFA               	incf	___xxtofl@arg,f
  7039  1179  1903               	skipnz
  7040  117A  0AFB               	incf	___xxtofl@arg+1,f
  7041  117B  1903               	skipnz
  7042  117C  0AFC               	incf	___xxtofl@arg+2,f
  7043  117D  1903               	skipnz
  7044  117E  0AFD               	incf	___xxtofl@arg+3,f
  7045  117F  2988               	goto	l790
  7046  1180                     l3039:	
  7047  1180  0873               	movf	___xxtofl@val+3,w
  7048  1181  00FD               	movwf	___xxtofl@arg+3
  7049  1182  0872               	movf	___xxtofl@val+2,w
  7050  1183  00FC               	movwf	___xxtofl@arg+2
  7051  1184  0871               	movf	___xxtofl@val+1,w
  7052  1185  00FB               	movwf	___xxtofl@arg+1
  7053  1186  0870               	movf	___xxtofl@val,w
  7054  1187  00FA               	movwf	___xxtofl@arg
  7055  1188                     l790:	
  7056  1188  0873               	movf	___xxtofl@val+3,w
  7057  1189  0472               	iorwf	___xxtofl@val+2,w
  7058  118A  0471               	iorwf	___xxtofl@val+1,w
  7059  118B  0470               	iorwf	___xxtofl@val,w
  7060  118C  1D03               	skipz
  7061  118D  298F               	goto	u5101
  7062  118E  2990               	goto	u5100
  7063  118F                     u5101:	
  7064  118F  2999               	goto	l3045
  7065  1190                     u5100:	
  7066  1190                     l3041:	
  7067  1190  3000               	movlw	0
  7068  1191  00F3               	movwf	?___xxtofl+3
  7069  1192  3000               	movlw	0
  7070  1193  00F2               	movwf	?___xxtofl+2
  7071  1194  3000               	movlw	0
  7072  1195  00F1               	movwf	?___xxtofl+1
  7073  1196  3000               	movlw	0
  7074  1197  00F0               	movwf	?___xxtofl
  7075  1198  2A1F               	goto	l792
  7076  1199                     l3045:	
  7077  1199  3096               	movlw	150
  7078  119A  00F4               	movwf	??___xxtofl
  7079  119B  0874               	movf	??___xxtofl,w
  7080  119C  00F9               	movwf	___xxtofl@exp
  7081  119D  29AB               	goto	l3049
  7082  119E                     l3047:	
  7083  119E  3001               	movlw	1
  7084  119F  00F4               	movwf	??___xxtofl
  7085  11A0  0874               	movf	??___xxtofl,w
  7086  11A1  07F9               	addwf	___xxtofl@exp,f
  7087  11A2  3001               	movlw	1
  7088  11A3                     u5115:	
  7089  11A3  1003               	clrc
  7090  11A4  0CFD               	rrf	___xxtofl@arg+3,f
  7091  11A5  0CFC               	rrf	___xxtofl@arg+2,f
  7092  11A6  0CFB               	rrf	___xxtofl@arg+1,f
  7093  11A7  0CFA               	rrf	___xxtofl@arg,f
  7094  11A8  3EFF               	addlw	-1
  7095  11A9  1D03               	skipz
  7096  11AA  29A3               	goto	u5115
  7097  11AB                     l3049:	
  7098  11AB  30FE               	movlw	254
  7099  11AC  057D               	andwf	___xxtofl@arg+3,w
  7100  11AD  1D03               	btfss	3,2
  7101  11AE  29B0               	goto	u5121
  7102  11AF  29B1               	goto	u5120
  7103  11B0                     u5121:	
  7104  11B0  299E               	goto	l3047
  7105  11B1                     u5120:	
  7106  11B1  29CD               	goto	l796
  7107  11B2                     l3051:	
  7108  11B2  3001               	movlw	1
  7109  11B3  00F4               	movwf	??___xxtofl
  7110  11B4  0874               	movf	??___xxtofl,w
  7111  11B5  07F9               	addwf	___xxtofl@exp,f
  7112  11B6                     l3053:	
  7113  11B6  3001               	movlw	1
  7114  11B7  07FA               	addwf	___xxtofl@arg,f
  7115  11B8  3000               	movlw	0
  7116  11B9  1803               	skipnc
  7117  11BA  3001               	movlw	1
  7118  11BB  07FB               	addwf	___xxtofl@arg+1,f
  7119  11BC  3000               	movlw	0
  7120  11BD  1803               	skipnc
  7121  11BE  3001               	movlw	1
  7122  11BF  07FC               	addwf	___xxtofl@arg+2,f
  7123  11C0  3000               	movlw	0
  7124  11C1  1803               	skipnc
  7125  11C2  3001               	movlw	1
  7126  11C3  07FD               	addwf	___xxtofl@arg+3,f
  7127  11C4                     l3055:	
  7128  11C4  3001               	movlw	1
  7129  11C5                     u5135:	
  7130  11C5  1003               	clrc
  7131  11C6  0CFD               	rrf	___xxtofl@arg+3,f
  7132  11C7  0CFC               	rrf	___xxtofl@arg+2,f
  7133  11C8  0CFB               	rrf	___xxtofl@arg+1,f
  7134  11C9  0CFA               	rrf	___xxtofl@arg,f
  7135  11CA  3EFF               	addlw	-1
  7136  11CB  1D03               	skipz
  7137  11CC  29C5               	goto	u5135
  7138  11CD                     l796:	
  7139  11CD  30FF               	movlw	255
  7140  11CE  057D               	andwf	___xxtofl@arg+3,w
  7141  11CF  1D03               	btfss	3,2
  7142  11D0  29D2               	goto	u5141
  7143  11D1  29D3               	goto	u5140
  7144  11D2                     u5141:	
  7145  11D2  29B2               	goto	l3051
  7146  11D3                     u5140:	
  7147  11D3  29DF               	goto	l3059
  7148  11D4                     l3057:	
  7149  11D4  3001               	movlw	1
  7150  11D5  02F9               	subwf	___xxtofl@exp,f
  7151  11D6  3001               	movlw	1
  7152  11D7  00F4               	movwf	??___xxtofl
  7153  11D8                     u5155:	
  7154  11D8  1003               	clrc
  7155  11D9  0DFA               	rlf	___xxtofl@arg,f
  7156  11DA  0DFB               	rlf	___xxtofl@arg+1,f
  7157  11DB  0DFC               	rlf	___xxtofl@arg+2,f
  7158  11DC  0DFD               	rlf	___xxtofl@arg+3,f
  7159  11DD  0BF4               	decfsz	??___xxtofl,f
  7160  11DE  29D8               	goto	u5155
  7161  11DF                     l3059:	
  7162  11DF  1BFC               	btfsc	___xxtofl@arg+2,7
  7163  11E0  29E2               	goto	u5161
  7164  11E1  29E3               	goto	u5160
  7165  11E2                     u5161:	
  7166  11E2  29E9               	goto	l803
  7167  11E3                     u5160:	
  7168  11E3                     l3061:	
  7169  11E3  3002               	movlw	2
  7170  11E4  0279               	subwf	___xxtofl@exp,w
  7171  11E5  1803               	skipnc
  7172  11E6  29E8               	goto	u5171
  7173  11E7  29E9               	goto	u5170
  7174  11E8                     u5171:	
  7175  11E8  29D4               	goto	l3057
  7176  11E9                     u5170:	
  7177  11E9                     l803:	
  7178  11E9  1879               	btfsc	___xxtofl@exp,0
  7179  11EA  29EC               	goto	u5181
  7180  11EB  29ED               	goto	u5180
  7181  11EC                     u5181:	
  7182  11EC  29F5               	goto	l804
  7183  11ED                     u5180:	
  7184  11ED                     l3063:	
  7185  11ED  30FF               	movlw	255
  7186  11EE  05FA               	andwf	___xxtofl@arg,f
  7187  11EF  30FF               	movlw	255
  7188  11F0  05FB               	andwf	___xxtofl@arg+1,f
  7189  11F1  307F               	movlw	127
  7190  11F2  05FC               	andwf	___xxtofl@arg+2,f
  7191  11F3  30FF               	movlw	255
  7192  11F4  05FD               	andwf	___xxtofl@arg+3,f
  7193  11F5                     l804:	
  7194  11F5  1003               	clrc
  7195  11F6  0CF9               	rrf	___xxtofl@exp,f
  7196  11F7                     l3065:	
  7197  11F7  0879               	movf	___xxtofl@exp,w
  7198  11F8  00F4               	movwf	??___xxtofl
  7199  11F9  01F5               	clrf	??___xxtofl+1
  7200  11FA  01F6               	clrf	??___xxtofl+2
  7201  11FB  01F7               	clrf	??___xxtofl+3
  7202  11FC  3018               	movlw	24
  7203  11FD                     u5195:	
  7204  11FD  1003               	clrc
  7205  11FE  0DF4               	rlf	??___xxtofl,f
  7206  11FF  0DF5               	rlf	??___xxtofl+1,f
  7207  1200  0DF6               	rlf	??___xxtofl+2,f
  7208  1201  0DF7               	rlf	??___xxtofl+3,f
  7209  1202                     u5190:	
  7210  1202  3EFF               	addlw	-1
  7211  1203  1D03               	skipz
  7212  1204  29FD               	goto	u5195
  7213  1205  0874               	movf	??___xxtofl,w
  7214  1206  04FA               	iorwf	___xxtofl@arg,f
  7215  1207  0875               	movf	??___xxtofl+1,w
  7216  1208  04FB               	iorwf	___xxtofl@arg+1,f
  7217  1209  0876               	movf	??___xxtofl+2,w
  7218  120A  04FC               	iorwf	___xxtofl@arg+2,f
  7219  120B  0877               	movf	??___xxtofl+3,w
  7220  120C  04FD               	iorwf	___xxtofl@arg+3,f
  7221  120D                     l3067:	
  7222  120D  0878               	movf	___xxtofl@sign,w
  7223  120E  1903               	btfsc	3,2
  7224  120F  2A11               	goto	u5201
  7225  1210  2A12               	goto	u5200
  7226  1211                     u5201:	
  7227  1211  2A17               	goto	l3073
  7228  1212                     u5200:	
  7229  1212                     l3069:	
  7230  1212  1FF3               	btfss	___xxtofl@val+3,7
  7231  1213  2A15               	goto	u5211
  7232  1214  2A16               	goto	u5210
  7233  1215                     u5211:	
  7234  1215  2A17               	goto	l3073
  7235  1216                     u5210:	
  7236  1216                     l3071:	
  7237  1216  17FD               	bsf	___xxtofl@arg+3,7
  7238  1217                     l3073:	
  7239  1217  087D               	movf	___xxtofl@arg+3,w
  7240  1218  00F3               	movwf	?___xxtofl+3
  7241  1219  087C               	movf	___xxtofl@arg+2,w
  7242  121A  00F2               	movwf	?___xxtofl+2
  7243  121B  087B               	movf	___xxtofl@arg+1,w
  7244  121C  00F1               	movwf	?___xxtofl+1
  7245  121D  087A               	movf	___xxtofl@arg,w
  7246  121E  00F0               	movwf	?___xxtofl
  7247  121F                     l792:	
  7248  121F  0008               	return
  7249  1220                     __end_of___xxtofl:	
  7250                           
  7251                           	psect	text16
  7252  1BD4                     __ptext16:	
  7253 ;; *************** function ___wmul *****************
  7254 ;; Defined at:
  7255 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  multiplier      2    0[COMMON] unsigned int 
  7258 ;;  multiplicand    2    2[COMMON] unsigned int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  product         2    4[COMMON] unsigned int 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  2    0[COMMON] unsigned int 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7270 ;;      Params:         4       0       0       0       0
  7271 ;;      Locals:         2       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0
  7273 ;;      Totals:         6       0       0       0       0
  7274 ;;Total ram usage:        6 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_sprintf
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           
  7284                           ;psect for function ___wmul
  7285  1BD4                     ___wmul:	
  7286  1BD4                     l2893:	
  7287                           ;incstack = 0
  7288                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7289                           
  7290  1BD4  01F4               	clrf	___wmul@product
  7291  1BD5  01F5               	clrf	___wmul@product+1
  7292  1BD6                     l2895:	
  7293  1BD6  1C70               	btfss	___wmul@multiplier,0
  7294  1BD7  2BD9               	goto	u4701
  7295  1BD8  2BDA               	goto	u4700
  7296  1BD9                     u4701:	
  7297  1BD9  2BE0               	goto	l329
  7298  1BDA                     u4700:	
  7299  1BDA                     l2897:	
  7300  1BDA  0872               	movf	___wmul@multiplicand,w
  7301  1BDB  07F4               	addwf	___wmul@product,f
  7302  1BDC  1803               	skipnc
  7303  1BDD  0AF5               	incf	___wmul@product+1,f
  7304  1BDE  0873               	movf	___wmul@multiplicand+1,w
  7305  1BDF  07F5               	addwf	___wmul@product+1,f
  7306  1BE0                     l329:	
  7307  1BE0  3001               	movlw	1
  7308  1BE1                     u4715:	
  7309  1BE1  1003               	clrc
  7310  1BE2  0DF2               	rlf	___wmul@multiplicand,f
  7311  1BE3  0DF3               	rlf	___wmul@multiplicand+1,f
  7312  1BE4  3EFF               	addlw	-1
  7313  1BE5  1D03               	skipz
  7314  1BE6  2BE1               	goto	u4715
  7315  1BE7                     l2899:	
  7316  1BE7  3001               	movlw	1
  7317  1BE8                     u4725:	
  7318  1BE8  1003               	clrc
  7319  1BE9  0CF1               	rrf	___wmul@multiplier+1,f
  7320  1BEA  0CF0               	rrf	___wmul@multiplier,f
  7321  1BEB  3EFF               	addlw	-1
  7322  1BEC  1D03               	skipz
  7323  1BED  2BE8               	goto	u4725
  7324  1BEE                     l2901:	
  7325  1BEE  0870               	movf	___wmul@multiplier,w
  7326  1BEF  0471               	iorwf	___wmul@multiplier+1,w
  7327  1BF0  1D03               	btfss	3,2
  7328  1BF1  2BF3               	goto	u4731
  7329  1BF2  2BF4               	goto	u4730
  7330  1BF3                     u4731:	
  7331  1BF3  2BD6               	goto	l2895
  7332  1BF4                     u4730:	
  7333  1BF4                     l2903:	
  7334  1BF4  0875               	movf	___wmul@product+1,w
  7335  1BF5  00F1               	movwf	?___wmul+1
  7336  1BF6  0874               	movf	___wmul@product,w
  7337  1BF7  00F0               	movwf	?___wmul
  7338  1BF8                     l331:	
  7339  1BF8  0008               	return
  7340  1BF9                     __end_of___wmul:	
  7341                           
  7342                           	psect	text17
  7343  1D96                     __ptext17:	
  7344 ;; *************** function ___llmod *****************
  7345 ;; Defined at:
  7346 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  divisor         4    0[COMMON] unsigned long 
  7349 ;;  dividend        4    4[COMMON] unsigned long 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  counter         1    9[COMMON] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  4    0[COMMON] unsigned long 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7361 ;;      Params:         8       0       0       0       0
  7362 ;;      Locals:         1       0       0       0       0
  7363 ;;      Temps:          1       0       0       0       0
  7364 ;;      Totals:        10       0       0       0       0
  7365 ;;Total ram usage:       10 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; This function calls:
  7368 ;;		Nothing
  7369 ;; This function is called by:
  7370 ;;		_sprintf
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           
  7375                           ;psect for function ___llmod
  7376  1D96                     ___llmod:	
  7377  1D96                     l3007:	
  7378                           ;incstack = 0
  7379                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7380                           
  7381  1D96  0873               	movf	___llmod@divisor+3,w
  7382  1D97  0472               	iorwf	___llmod@divisor+2,w
  7383  1D98  0471               	iorwf	___llmod@divisor+1,w
  7384  1D99  0470               	iorwf	___llmod@divisor,w
  7385  1D9A  1903               	skipnz
  7386  1D9B  2D9D               	goto	u5021
  7387  1D9C  2D9E               	goto	u5020
  7388  1D9D                     u5021:	
  7389  1D9D  2DE1               	goto	l3023
  7390  1D9E                     u5020:	
  7391  1D9E                     l3009:	
  7392  1D9E  01F9               	clrf	___llmod@counter
  7393  1D9F  0AF9               	incf	___llmod@counter,f
  7394  1DA0  2DAE               	goto	l3013
  7395  1DA1                     l3011:	
  7396  1DA1  3001               	movlw	1
  7397  1DA2  00F8               	movwf	??___llmod
  7398  1DA3                     u5035:	
  7399  1DA3  1003               	clrc
  7400  1DA4  0DF0               	rlf	___llmod@divisor,f
  7401  1DA5  0DF1               	rlf	___llmod@divisor+1,f
  7402  1DA6  0DF2               	rlf	___llmod@divisor+2,f
  7403  1DA7  0DF3               	rlf	___llmod@divisor+3,f
  7404  1DA8  0BF8               	decfsz	??___llmod,f
  7405  1DA9  2DA3               	goto	u5035
  7406  1DAA  3001               	movlw	1
  7407  1DAB  00F8               	movwf	??___llmod
  7408  1DAC  0878               	movf	??___llmod,w
  7409  1DAD  07F9               	addwf	___llmod@counter,f
  7410  1DAE                     l3013:	
  7411  1DAE  1FF3               	btfss	___llmod@divisor+3,7
  7412  1DAF  2DB1               	goto	u5041
  7413  1DB0  2DB2               	goto	u5040
  7414  1DB1                     u5041:	
  7415  1DB1  2DA1               	goto	l3011
  7416  1DB2                     u5040:	
  7417  1DB2                     l3015:	
  7418  1DB2  0873               	movf	___llmod@divisor+3,w
  7419  1DB3  0277               	subwf	___llmod@dividend+3,w
  7420  1DB4  1D03               	skipz
  7421  1DB5  2DC0               	goto	u5055
  7422  1DB6  0872               	movf	___llmod@divisor+2,w
  7423  1DB7  0276               	subwf	___llmod@dividend+2,w
  7424  1DB8  1D03               	skipz
  7425  1DB9  2DC0               	goto	u5055
  7426  1DBA  0871               	movf	___llmod@divisor+1,w
  7427  1DBB  0275               	subwf	___llmod@dividend+1,w
  7428  1DBC  1D03               	skipz
  7429  1DBD  2DC0               	goto	u5055
  7430  1DBE  0870               	movf	___llmod@divisor,w
  7431  1DBF  0274               	subwf	___llmod@dividend,w
  7432  1DC0                     u5055:	
  7433  1DC0  1C03               	skipc
  7434  1DC1  2DC3               	goto	u5051
  7435  1DC2  2DC4               	goto	u5050
  7436  1DC3                     u5051:	
  7437  1DC3  2DD2               	goto	l3019
  7438  1DC4                     u5050:	
  7439  1DC4                     l3017:	
  7440  1DC4  0870               	movf	___llmod@divisor,w
  7441  1DC5  02F4               	subwf	___llmod@dividend,f
  7442  1DC6  0871               	movf	___llmod@divisor+1,w
  7443  1DC7  1C03               	skipc
  7444  1DC8  0F71               	incfsz	___llmod@divisor+1,w
  7445  1DC9  02F5               	subwf	___llmod@dividend+1,f
  7446  1DCA  0872               	movf	___llmod@divisor+2,w
  7447  1DCB  1C03               	skipc
  7448  1DCC  0F72               	incfsz	___llmod@divisor+2,w
  7449  1DCD  02F6               	subwf	___llmod@dividend+2,f
  7450  1DCE  0873               	movf	___llmod@divisor+3,w
  7451  1DCF  1C03               	skipc
  7452  1DD0  0F73               	incfsz	___llmod@divisor+3,w
  7453  1DD1  02F7               	subwf	___llmod@dividend+3,f
  7454  1DD2                     l3019:	
  7455  1DD2  3001               	movlw	1
  7456  1DD3                     u5065:	
  7457  1DD3  1003               	clrc
  7458  1DD4  0CF3               	rrf	___llmod@divisor+3,f
  7459  1DD5  0CF2               	rrf	___llmod@divisor+2,f
  7460  1DD6  0CF1               	rrf	___llmod@divisor+1,f
  7461  1DD7  0CF0               	rrf	___llmod@divisor,f
  7462  1DD8  3EFF               	addlw	-1
  7463  1DD9  1D03               	skipz
  7464  1DDA  2DD3               	goto	u5065
  7465  1DDB                     l3021:	
  7466  1DDB  3001               	movlw	1
  7467  1DDC  02F9               	subwf	___llmod@counter,f
  7468  1DDD  1D03               	btfss	3,2
  7469  1DDE  2DE0               	goto	u5071
  7470  1DDF  2DE1               	goto	u5070
  7471  1DE0                     u5071:	
  7472  1DE0  2DB2               	goto	l3015
  7473  1DE1                     u5070:	
  7474  1DE1                     l3023:	
  7475  1DE1  0877               	movf	___llmod@dividend+3,w
  7476  1DE2  00F3               	movwf	?___llmod+3
  7477  1DE3  0876               	movf	___llmod@dividend+2,w
  7478  1DE4  00F2               	movwf	?___llmod+2
  7479  1DE5  0875               	movf	___llmod@dividend+1,w
  7480  1DE6  00F1               	movwf	?___llmod+1
  7481  1DE7  0874               	movf	___llmod@dividend,w
  7482  1DE8  00F0               	movwf	?___llmod
  7483  1DE9                     l585:	
  7484  1DE9  0008               	return
  7485  1DEA                     __end_of___llmod:	
  7486                           
  7487                           	psect	text18
  7488  1E43                     __ptext18:	
  7489 ;; *************** function ___lldiv *****************
  7490 ;; Defined at:
  7491 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  divisor         4    0[COMMON] unsigned long 
  7494 ;;  dividend        4    4[COMMON] unsigned long 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  quotient        4    9[COMMON] unsigned long 
  7497 ;;  counter         1   13[COMMON] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  4    0[COMMON] unsigned long 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7507 ;;      Params:         8       0       0       0       0
  7508 ;;      Locals:         5       0       0       0       0
  7509 ;;      Temps:          1       0       0       0       0
  7510 ;;      Totals:        14       0       0       0       0
  7511 ;;Total ram usage:       14 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_sprintf
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           
  7521                           ;psect for function ___lldiv
  7522  1E43                     ___lldiv:	
  7523  1E43                     l2907:	
  7524                           ;incstack = 0
  7525                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7526                           
  7527  1E43  3000               	movlw	0
  7528  1E44  00FC               	movwf	___lldiv@quotient+3
  7529  1E45  3000               	movlw	0
  7530  1E46  00FB               	movwf	___lldiv@quotient+2
  7531  1E47  3000               	movlw	0
  7532  1E48  00FA               	movwf	___lldiv@quotient+1
  7533  1E49  3000               	movlw	0
  7534  1E4A  00F9               	movwf	___lldiv@quotient
  7535  1E4B  0873               	movf	___lldiv@divisor+3,w
  7536  1E4C  0472               	iorwf	___lldiv@divisor+2,w
  7537  1E4D  0471               	iorwf	___lldiv@divisor+1,w
  7538  1E4E  0470               	iorwf	___lldiv@divisor,w
  7539  1E4F  1903               	skipnz
  7540  1E50  2E52               	goto	u4741
  7541  1E51  2E53               	goto	u4740
  7542  1E52                     u4741:	
  7543  1E52  2EA0               	goto	l2927
  7544  1E53                     u4740:	
  7545  1E53                     l2909:	
  7546  1E53  01FD               	clrf	___lldiv@counter
  7547  1E54  0AFD               	incf	___lldiv@counter,f
  7548  1E55  2E63               	goto	l2913
  7549  1E56                     l2911:	
  7550  1E56  3001               	movlw	1
  7551  1E57  00F8               	movwf	??___lldiv
  7552  1E58                     u4755:	
  7553  1E58  1003               	clrc
  7554  1E59  0DF0               	rlf	___lldiv@divisor,f
  7555  1E5A  0DF1               	rlf	___lldiv@divisor+1,f
  7556  1E5B  0DF2               	rlf	___lldiv@divisor+2,f
  7557  1E5C  0DF3               	rlf	___lldiv@divisor+3,f
  7558  1E5D  0BF8               	decfsz	??___lldiv,f
  7559  1E5E  2E58               	goto	u4755
  7560  1E5F  3001               	movlw	1
  7561  1E60  00F8               	movwf	??___lldiv
  7562  1E61  0878               	movf	??___lldiv,w
  7563  1E62  07FD               	addwf	___lldiv@counter,f
  7564  1E63                     l2913:	
  7565  1E63  1FF3               	btfss	___lldiv@divisor+3,7
  7566  1E64  2E66               	goto	u4761
  7567  1E65  2E67               	goto	u4760
  7568  1E66                     u4761:	
  7569  1E66  2E56               	goto	l2911
  7570  1E67                     u4760:	
  7571  1E67                     l2915:	
  7572  1E67  3001               	movlw	1
  7573  1E68  00F8               	movwf	??___lldiv
  7574  1E69                     u4775:	
  7575  1E69  1003               	clrc
  7576  1E6A  0DF9               	rlf	___lldiv@quotient,f
  7577  1E6B  0DFA               	rlf	___lldiv@quotient+1,f
  7578  1E6C  0DFB               	rlf	___lldiv@quotient+2,f
  7579  1E6D  0DFC               	rlf	___lldiv@quotient+3,f
  7580  1E6E  0BF8               	decfsz	??___lldiv,f
  7581  1E6F  2E69               	goto	u4775
  7582  1E70                     l2917:	
  7583  1E70  0873               	movf	___lldiv@divisor+3,w
  7584  1E71  0277               	subwf	___lldiv@dividend+3,w
  7585  1E72  1D03               	skipz
  7586  1E73  2E7E               	goto	u4785
  7587  1E74  0872               	movf	___lldiv@divisor+2,w
  7588  1E75  0276               	subwf	___lldiv@dividend+2,w
  7589  1E76  1D03               	skipz
  7590  1E77  2E7E               	goto	u4785
  7591  1E78  0871               	movf	___lldiv@divisor+1,w
  7592  1E79  0275               	subwf	___lldiv@dividend+1,w
  7593  1E7A  1D03               	skipz
  7594  1E7B  2E7E               	goto	u4785
  7595  1E7C  0870               	movf	___lldiv@divisor,w
  7596  1E7D  0274               	subwf	___lldiv@dividend,w
  7597  1E7E                     u4785:	
  7598  1E7E  1C03               	skipc
  7599  1E7F  2E81               	goto	u4781
  7600  1E80  2E82               	goto	u4780
  7601  1E81                     u4781:	
  7602  1E81  2E91               	goto	l2923
  7603  1E82                     u4780:	
  7604  1E82                     l2919:	
  7605  1E82  0870               	movf	___lldiv@divisor,w
  7606  1E83  02F4               	subwf	___lldiv@dividend,f
  7607  1E84  0871               	movf	___lldiv@divisor+1,w
  7608  1E85  1C03               	skipc
  7609  1E86  0F71               	incfsz	___lldiv@divisor+1,w
  7610  1E87  02F5               	subwf	___lldiv@dividend+1,f
  7611  1E88  0872               	movf	___lldiv@divisor+2,w
  7612  1E89  1C03               	skipc
  7613  1E8A  0F72               	incfsz	___lldiv@divisor+2,w
  7614  1E8B  02F6               	subwf	___lldiv@dividend+2,f
  7615  1E8C  0873               	movf	___lldiv@divisor+3,w
  7616  1E8D  1C03               	skipc
  7617  1E8E  0F73               	incfsz	___lldiv@divisor+3,w
  7618  1E8F  02F7               	subwf	___lldiv@dividend+3,f
  7619  1E90                     l2921:	
  7620  1E90  1479               	bsf	___lldiv@quotient,0
  7621  1E91                     l2923:	
  7622  1E91  3001               	movlw	1
  7623  1E92                     u4795:	
  7624  1E92  1003               	clrc
  7625  1E93  0CF3               	rrf	___lldiv@divisor+3,f
  7626  1E94  0CF2               	rrf	___lldiv@divisor+2,f
  7627  1E95  0CF1               	rrf	___lldiv@divisor+1,f
  7628  1E96  0CF0               	rrf	___lldiv@divisor,f
  7629  1E97  3EFF               	addlw	-1
  7630  1E98  1D03               	skipz
  7631  1E99  2E92               	goto	u4795
  7632  1E9A                     l2925:	
  7633  1E9A  3001               	movlw	1
  7634  1E9B  02FD               	subwf	___lldiv@counter,f
  7635  1E9C  1D03               	btfss	3,2
  7636  1E9D  2E9F               	goto	u4801
  7637  1E9E  2EA0               	goto	u4800
  7638  1E9F                     u4801:	
  7639  1E9F  2E67               	goto	l2915
  7640  1EA0                     u4800:	
  7641  1EA0                     l2927:	
  7642  1EA0  087C               	movf	___lldiv@quotient+3,w
  7643  1EA1  00F3               	movwf	?___lldiv+3
  7644  1EA2  087B               	movf	___lldiv@quotient+2,w
  7645  1EA3  00F2               	movwf	?___lldiv+2
  7646  1EA4  087A               	movf	___lldiv@quotient+1,w
  7647  1EA5  00F1               	movwf	?___lldiv+1
  7648  1EA6  0879               	movf	___lldiv@quotient,w
  7649  1EA7  00F0               	movwf	?___lldiv
  7650  1EA8                     l365:	
  7651  1EA8  0008               	return
  7652  1EA9                     __end_of___lldiv:	
  7653                           
  7654                           	psect	text19
  7655  1F84                     __ptext19:	
  7656 ;; *************** function ___fltol *****************
  7657 ;; Defined at:
  7658 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  f1              4   49[BANK0 ] unsigned long 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  exp1            1   59[BANK0 ] unsigned char 
  7663 ;;  sign1           1   58[BANK0 ] unsigned char 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  4   49[BANK0 ] long 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7673 ;;      Params:         0       4       0       0       0
  7674 ;;      Locals:         0       2       0       0       0
  7675 ;;      Temps:          0       5       0       0       0
  7676 ;;      Totals:         0      11       0       0       0
  7677 ;;Total ram usage:       11 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_sprintf
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function ___fltol
  7688  1F84                     ___fltol:	
  7689  1F84                     l2971:	
  7690                           ;incstack = 0
  7691                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7692                           
  7693  1F84  1003               	clrc
  7694  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  7695  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  7696  1F87  0D53               	rlf	___fltol@f1+2,w
  7697  1F88  0D54               	rlf	___fltol@f1+3,w
  7698  1F89  00D5               	movwf	??___fltol
  7699  1F8A  0855               	movf	??___fltol,w
  7700  1F8B  00DB               	movwf	___fltol@exp1
  7701  1F8C  085B               	movf	___fltol@exp1,w
  7702  1F8D  1D03               	btfss	3,2
  7703  1F8E  2F90               	goto	u4921
  7704  1F8F  2F91               	goto	u4920
  7705  1F90                     u4921:	
  7706  1F90  2F9A               	goto	l2977
  7707  1F91                     u4920:	
  7708  1F91                     l2973:	
  7709  1F91  3000               	movlw	0
  7710  1F92  00D4               	movwf	?___fltol+3
  7711  1F93  3000               	movlw	0
  7712  1F94  00D3               	movwf	?___fltol+2
  7713  1F95  3000               	movlw	0
  7714  1F96  00D2               	movwf	?___fltol+1
  7715  1F97  3000               	movlw	0
  7716  1F98  00D1               	movwf	?___fltol
  7717  1F99  2FFF               	goto	l532
  7718  1F9A                     l2977:	
  7719  1F9A  0851               	movf	___fltol@f1,w
  7720  1F9B  00D5               	movwf	??___fltol
  7721  1F9C  0852               	movf	___fltol@f1+1,w
  7722  1F9D  00D6               	movwf	??___fltol+1
  7723  1F9E  0853               	movf	___fltol@f1+2,w
  7724  1F9F  00D7               	movwf	??___fltol+2
  7725  1FA0  0854               	movf	___fltol@f1+3,w
  7726  1FA1  00D8               	movwf	??___fltol+3
  7727  1FA2  301F               	movlw	31
  7728  1FA3                     u4935:	
  7729  1FA3  1003               	clrc
  7730  1FA4  0CD8               	rrf	??___fltol+3,f
  7731  1FA5  0CD7               	rrf	??___fltol+2,f
  7732  1FA6  0CD6               	rrf	??___fltol+1,f
  7733  1FA7  0CD5               	rrf	??___fltol,f
  7734  1FA8                     u4930:	
  7735  1FA8  3EFF               	addlw	-1
  7736  1FA9  1D03               	skipz
  7737  1FAA  2FA3               	goto	u4935
  7738  1FAB  0855               	movf	??___fltol,w
  7739  1FAC  00D9               	movwf	??___fltol+4
  7740  1FAD  0859               	movf	??___fltol+4,w
  7741  1FAE  00DA               	movwf	___fltol@sign1
  7742  1FAF                     l2979:	
  7743  1FAF  17D3               	bsf	___fltol@f1+2,7
  7744  1FB0                     l2981:	
  7745  1FB0  30FF               	movlw	255
  7746  1FB1  05D1               	andwf	___fltol@f1,f
  7747  1FB2  30FF               	movlw	255
  7748  1FB3  05D2               	andwf	___fltol@f1+1,f
  7749  1FB4  30FF               	movlw	255
  7750  1FB5  05D3               	andwf	___fltol@f1+2,f
  7751  1FB6  3000               	movlw	0
  7752  1FB7  05D4               	andwf	___fltol@f1+3,f
  7753  1FB8                     l2983:	
  7754  1FB8  3096               	movlw	150
  7755  1FB9  02DB               	subwf	___fltol@exp1,f
  7756  1FBA                     l2985:	
  7757  1FBA  1FDB               	btfss	___fltol@exp1,7
  7758  1FBB  2FBD               	goto	u4941
  7759  1FBC  2FBE               	goto	u4940
  7760  1FBD                     u4941:	
  7761  1FBD  2FD8               	goto	l2995
  7762  1FBE                     u4940:	
  7763  1FBE                     l2987:	
  7764  1FBE  085B               	movf	___fltol@exp1,w
  7765  1FBF  3A80               	xorlw	128
  7766  1FC0  3E97               	addlw	151
  7767  1FC1  1803               	skipnc
  7768  1FC2  2FC4               	goto	u4951
  7769  1FC3  2FC5               	goto	u4950
  7770  1FC4                     u4951:	
  7771  1FC4  2FC6               	goto	l2993
  7772  1FC5                     u4950:	
  7773  1FC5  2F91               	goto	l2973
  7774  1FC6                     l2993:	
  7775  1FC6  3001               	movlw	1
  7776  1FC7                     u4965:	
  7777  1FC7  1003               	clrc
  7778  1FC8  0CD4               	rrf	___fltol@f1+3,f
  7779  1FC9  0CD3               	rrf	___fltol@f1+2,f
  7780  1FCA  0CD2               	rrf	___fltol@f1+1,f
  7781  1FCB  0CD1               	rrf	___fltol@f1,f
  7782  1FCC  3EFF               	addlw	-1
  7783  1FCD  1D03               	skipz
  7784  1FCE  2FC7               	goto	u4965
  7785  1FCF  3001               	movlw	1
  7786  1FD0  00D5               	movwf	??___fltol
  7787  1FD1  0855               	movf	??___fltol,w
  7788  1FD2  07DB               	addwf	___fltol@exp1,f
  7789  1FD3  1D03               	btfss	3,2
  7790  1FD4  2FD6               	goto	u4971
  7791  1FD5  2FD7               	goto	u4970
  7792  1FD6                     u4971:	
  7793  1FD6  2FC6               	goto	l2993
  7794  1FD7                     u4970:	
  7795  1FD7  2FEF               	goto	l3003
  7796  1FD8                     l2995:	
  7797  1FD8  3020               	movlw	32
  7798  1FD9  025B               	subwf	___fltol@exp1,w
  7799  1FDA  1C03               	skipc
  7800  1FDB  2FDD               	goto	u4981
  7801  1FDC  2FDE               	goto	u4980
  7802  1FDD                     u4981:	
  7803  1FDD  2FEA               	goto	l539
  7804  1FDE                     u4980:	
  7805  1FDE  2F91               	goto	l2973
  7806  1FDF                     l3001:	
  7807  1FDF  3001               	movlw	1
  7808  1FE0  00D5               	movwf	??___fltol
  7809  1FE1                     u4995:	
  7810  1FE1  1003               	clrc
  7811  1FE2  0DD1               	rlf	___fltol@f1,f
  7812  1FE3  0DD2               	rlf	___fltol@f1+1,f
  7813  1FE4  0DD3               	rlf	___fltol@f1+2,f
  7814  1FE5  0DD4               	rlf	___fltol@f1+3,f
  7815  1FE6  0BD5               	decfsz	??___fltol,f
  7816  1FE7  2FE1               	goto	u4995
  7817  1FE8  3001               	movlw	1
  7818  1FE9  02DB               	subwf	___fltol@exp1,f
  7819  1FEA                     l539:	
  7820  1FEA  085B               	movf	___fltol@exp1,w
  7821  1FEB  1D03               	btfss	3,2
  7822  1FEC  2FEE               	goto	u5001
  7823  1FED  2FEF               	goto	u5000
  7824  1FEE                     u5001:	
  7825  1FEE  2FDF               	goto	l3001
  7826  1FEF                     u5000:	
  7827  1FEF                     l3003:	
  7828  1FEF  085A               	movf	___fltol@sign1,w
  7829  1FF0  1903               	btfsc	3,2
  7830  1FF1  2FF3               	goto	u5011
  7831  1FF2  2FF4               	goto	u5010
  7832  1FF3                     u5011:	
  7833  1FF3  2FFF               	goto	l542
  7834  1FF4                     u5010:	
  7835  1FF4                     l3005:	
  7836  1FF4  09D1               	comf	___fltol@f1,f
  7837  1FF5  09D2               	comf	___fltol@f1+1,f
  7838  1FF6  09D3               	comf	___fltol@f1+2,f
  7839  1FF7  09D4               	comf	___fltol@f1+3,f
  7840  1FF8  0AD1               	incf	___fltol@f1,f
  7841  1FF9  1903               	skipnz
  7842  1FFA  0AD2               	incf	___fltol@f1+1,f
  7843  1FFB  1903               	skipnz
  7844  1FFC  0AD3               	incf	___fltol@f1+2,f
  7845  1FFD  1903               	skipnz
  7846  1FFE  0AD4               	incf	___fltol@f1+3,f
  7847  1FFF                     l542:	
  7848  1FFF                     l532:	
  7849  1FFF  0008               	return
  7850  2000                     __end_of___fltol:	
  7851                           
  7852                           	psect	text20
  7853  1BB0                     __ptext20:	
  7854 ;; *************** function ___flsub *****************
  7855 ;; Defined at:
  7856 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  a               4   70[BANK0 ] long 
  7859 ;;  b               4   74[BANK0 ] long 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  4   70[BANK0 ] long 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7871 ;;      Params:         0       8       0       0       0
  7872 ;;      Locals:         0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0
  7874 ;;      Totals:         0       8       0       0       0
  7875 ;;Total ram usage:        8 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    1
  7878 ;; This function calls:
  7879 ;;		___fladd
  7880 ;; This function is called by:
  7881 ;;		_sprintf
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           
  7886                           ;psect for function ___flsub
  7887  1BB0                     ___flsub:	
  7888  1BB0                     l3027:	
  7889                           ;incstack = 0
  7890                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7891                           
  7892  1BB0  3080               	movlw	128
  7893  1BB1  1283               	bcf	3,5	;RP0=0, select bank0
  7894  1BB2  1303               	bcf	3,6	;RP1=0, select bank0
  7895  1BB3  06E9               	xorwf	___flsub@a+3,f
  7896  1BB4                     l3029:	
  7897  1BB4  086D               	movf	___flsub@b+3,w
  7898  1BB5  00D5               	movwf	___fladd@b+3
  7899  1BB6  086C               	movf	___flsub@b+2,w
  7900  1BB7  00D4               	movwf	___fladd@b+2
  7901  1BB8  086B               	movf	___flsub@b+1,w
  7902  1BB9  00D3               	movwf	___fladd@b+1
  7903  1BBA  086A               	movf	___flsub@b,w
  7904  1BBB  00D2               	movwf	___fladd@b
  7905  1BBC  0869               	movf	___flsub@a+3,w
  7906  1BBD  00D9               	movwf	___fladd@a+3
  7907  1BBE  0868               	movf	___flsub@a+2,w
  7908  1BBF  00D8               	movwf	___fladd@a+2
  7909  1BC0  0867               	movf	___flsub@a+1,w
  7910  1BC1  00D7               	movwf	___fladd@a+1
  7911  1BC2  0866               	movf	___flsub@a,w
  7912  1BC3  00D6               	movwf	___fladd@a
  7913  1BC4  160A  118A  2578  160A  158A  	fcall	___fladd
  7914  1BC9  1283               	bcf	3,5	;RP0=0, select bank0
  7915  1BCA  1303               	bcf	3,6	;RP1=0, select bank0
  7916  1BCB  0855               	movf	?___fladd+3,w
  7917  1BCC  00E9               	movwf	?___flsub+3
  7918  1BCD  0854               	movf	?___fladd+2,w
  7919  1BCE  00E8               	movwf	?___flsub+2
  7920  1BCF  0853               	movf	?___fladd+1,w
  7921  1BD0  00E7               	movwf	?___flsub+1
  7922  1BD1  0852               	movf	?___fladd,w
  7923  1BD2  00E6               	movwf	?___flsub
  7924  1BD3                     l702:	
  7925  1BD3  0008               	return
  7926  1BD4                     __end_of___flsub:	
  7927                           
  7928                           	psect	text21
  7929  1578                     __ptext21:	
  7930 ;; *************** function ___fladd *****************
  7931 ;; Defined at:
  7932 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  b               4   50[BANK0 ] long 
  7935 ;;  a               4   54[BANK0 ] long 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  grs             1   69[BANK0 ] unsigned char 
  7938 ;;  bexp            1   68[BANK0 ] unsigned char 
  7939 ;;  aexp            1   67[BANK0 ] unsigned char 
  7940 ;;  signs           1   66[BANK0 ] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  4   50[BANK0 ] unsigned char 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, btemp+1
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7950 ;;      Params:         0       8       0       0       0
  7951 ;;      Locals:         0       4       0       0       0
  7952 ;;      Temps:          0       8       0       0       0
  7953 ;;      Totals:         0      20       0       0       0
  7954 ;;Total ram usage:       20 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_sprintf
  7960 ;;		___flsub
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           
  7965                           ;psect for function ___fladd
  7966  1578                     ___fladd:	
  7967  1578                     l2379:	
  7968                           ;incstack = 0
  7969                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7970                           
  7971  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7972  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7973  157A  0855               	movf	___fladd@b+3,w
  7974  157B  3980               	andlw	128
  7975  157C  00DA               	movwf	??___fladd
  7976  157D  085A               	movf	??___fladd,w
  7977  157E  00E2               	movwf	___fladd@signs
  7978  157F                     l2381:	
  7979  157F  0855               	movf	___fladd@b+3,w
  7980  1580  00DA               	movwf	??___fladd
  7981  1581  075A               	addwf	??___fladd,w
  7982  1582  00DB               	movwf	??___fladd+1
  7983  1583  085B               	movf	??___fladd+1,w
  7984  1584  00E4               	movwf	___fladd@bexp
  7985  1585                     l2383:	
  7986  1585  1FD4               	btfss	___fladd@b+2,7
  7987  1586  2D88               	goto	u3311
  7988  1587  2D89               	goto	u3310
  7989  1588                     u3311:	
  7990  1588  2D8A               	goto	l2387
  7991  1589                     u3310:	
  7992  1589                     l2385:	
  7993  1589  1464               	bsf	___fladd@bexp,0
  7994  158A                     l2387:	
  7995  158A  0864               	movf	___fladd@bexp,w
  7996  158B  1903               	btfsc	3,2
  7997  158C  2D8E               	goto	u3321
  7998  158D  2D8F               	goto	u3320
  7999  158E                     u3321:	
  8000  158E  2D9F               	goto	l2397
  8001  158F                     u3320:	
  8002  158F                     l2389:	
  8003  158F  0A64               	incf	___fladd@bexp,w
  8004  1590  1D03               	btfss	3,2
  8005  1591  2D93               	goto	u3331
  8006  1592  2D94               	goto	u3330
  8007  1593                     u3331:	
  8008  1593  2D9C               	goto	l2393
  8009  1594                     u3330:	
  8010  1594                     l2391:	
  8011  1594  3000               	movlw	0
  8012  1595  00D5               	movwf	___fladd@b+3
  8013  1596  3000               	movlw	0
  8014  1597  00D4               	movwf	___fladd@b+2
  8015  1598  3000               	movlw	0
  8016  1599  00D3               	movwf	___fladd@b+1
  8017  159A  3000               	movlw	0
  8018  159B  00D2               	movwf	___fladd@b
  8019  159C                     l2393:	
  8020  159C  17D4               	bsf	___fladd@b+2,7
  8021  159D                     l2395:	
  8022  159D  01D5               	clrf	___fladd@b+3
  8023  159E  2DA7               	goto	l2399
  8024  159F                     l2397:	
  8025  159F  3000               	movlw	0
  8026  15A0  00D5               	movwf	___fladd@b+3
  8027  15A1  3000               	movlw	0
  8028  15A2  00D4               	movwf	___fladd@b+2
  8029  15A3  3000               	movlw	0
  8030  15A4  00D3               	movwf	___fladd@b+1
  8031  15A5  3000               	movlw	0
  8032  15A6  00D2               	movwf	___fladd@b
  8033  15A7                     l2399:	
  8034  15A7  0859               	movf	___fladd@a+3,w
  8035  15A8  3980               	andlw	128
  8036  15A9  00DA               	movwf	??___fladd
  8037  15AA  085A               	movf	??___fladd,w
  8038  15AB  00E3               	movwf	___fladd@aexp
  8039  15AC                     l2401:	
  8040  15AC  0863               	movf	___fladd@aexp,w
  8041  15AD  0662               	xorwf	___fladd@signs,w
  8042  15AE  1903               	skipnz
  8043  15AF  2DB1               	goto	u3341
  8044  15B0  2DB2               	goto	u3340
  8045  15B1                     u3341:	
  8046  15B1  2DB3               	goto	l2405
  8047  15B2                     u3340:	
  8048  15B2                     l2403:	
  8049  15B2  1762               	bsf	___fladd@signs,6
  8050  15B3                     l2405:	
  8051  15B3  0859               	movf	___fladd@a+3,w
  8052  15B4  00DA               	movwf	??___fladd
  8053  15B5  075A               	addwf	??___fladd,w
  8054  15B6  00DB               	movwf	??___fladd+1
  8055  15B7  085B               	movf	??___fladd+1,w
  8056  15B8  00E3               	movwf	___fladd@aexp
  8057  15B9                     l2407:	
  8058  15B9  1FD8               	btfss	___fladd@a+2,7
  8059  15BA  2DBC               	goto	u3351
  8060  15BB  2DBD               	goto	u3350
  8061  15BC                     u3351:	
  8062  15BC  2DBE               	goto	l2411
  8063  15BD                     u3350:	
  8064  15BD                     l2409:	
  8065  15BD  1463               	bsf	___fladd@aexp,0
  8066  15BE                     l2411:	
  8067  15BE  0863               	movf	___fladd@aexp,w
  8068  15BF  1903               	btfsc	3,2
  8069  15C0  2DC2               	goto	u3361
  8070  15C1  2DC3               	goto	u3360
  8071  15C2                     u3361:	
  8072  15C2  2DD3               	goto	l2421
  8073  15C3                     u3360:	
  8074  15C3                     l2413:	
  8075  15C3  0A63               	incf	___fladd@aexp,w
  8076  15C4  1D03               	btfss	3,2
  8077  15C5  2DC7               	goto	u3371
  8078  15C6  2DC8               	goto	u3370
  8079  15C7                     u3371:	
  8080  15C7  2DD0               	goto	l2417
  8081  15C8                     u3370:	
  8082  15C8                     l2415:	
  8083  15C8  3000               	movlw	0
  8084  15C9  00D9               	movwf	___fladd@a+3
  8085  15CA  3000               	movlw	0
  8086  15CB  00D8               	movwf	___fladd@a+2
  8087  15CC  3000               	movlw	0
  8088  15CD  00D7               	movwf	___fladd@a+1
  8089  15CE  3000               	movlw	0
  8090  15CF  00D6               	movwf	___fladd@a
  8091  15D0                     l2417:	
  8092  15D0  17D8               	bsf	___fladd@a+2,7
  8093  15D1                     l2419:	
  8094  15D1  01D9               	clrf	___fladd@a+3
  8095  15D2  2DDB               	goto	l656
  8096  15D3                     l2421:	
  8097  15D3  3000               	movlw	0
  8098  15D4  00D9               	movwf	___fladd@a+3
  8099  15D5  3000               	movlw	0
  8100  15D6  00D8               	movwf	___fladd@a+2
  8101  15D7  3000               	movlw	0
  8102  15D8  00D7               	movwf	___fladd@a+1
  8103  15D9  3000               	movlw	0
  8104  15DA  00D6               	movwf	___fladd@a
  8105  15DB                     l656:	
  8106  15DB  0864               	movf	___fladd@bexp,w
  8107  15DC  0263               	subwf	___fladd@aexp,w
  8108  15DD  1803               	skipnc
  8109  15DE  2DE0               	goto	u3381
  8110  15DF  2DE1               	goto	u3380
  8111  15E0                     u3381:	
  8112  15E0  2E25               	goto	l2457
  8113  15E1                     u3380:	
  8114  15E1                     l2423:	
  8115  15E1  1F62               	btfss	___fladd@signs,6
  8116  15E2  2DE4               	goto	u3391
  8117  15E3  2DE5               	goto	u3390
  8118  15E4                     u3391:	
  8119  15E4  2DE9               	goto	l2427
  8120  15E5                     u3390:	
  8121  15E5                     l2425:	
  8122  15E5  3080               	movlw	128
  8123  15E6  00DA               	movwf	??___fladd
  8124  15E7  085A               	movf	??___fladd,w
  8125  15E8  06E2               	xorwf	___fladd@signs,f
  8126  15E9                     l2427:	
  8127  15E9  0864               	movf	___fladd@bexp,w
  8128  15EA  00DA               	movwf	??___fladd
  8129  15EB  085A               	movf	??___fladd,w
  8130  15EC  00E5               	movwf	___fladd@grs
  8131  15ED                     l2429:	
  8132  15ED  0863               	movf	___fladd@aexp,w
  8133  15EE  00DA               	movwf	??___fladd
  8134  15EF  085A               	movf	??___fladd,w
  8135  15F0  00E4               	movwf	___fladd@bexp
  8136  15F1                     l2431:	
  8137  15F1  0865               	movf	___fladd@grs,w
  8138  15F2  00DA               	movwf	??___fladd
  8139  15F3  085A               	movf	??___fladd,w
  8140  15F4  00E3               	movwf	___fladd@aexp
  8141  15F5                     l2433:	
  8142  15F5  0852               	movf	___fladd@b,w
  8143  15F6  00DA               	movwf	??___fladd
  8144  15F7  085A               	movf	??___fladd,w
  8145  15F8  00E5               	movwf	___fladd@grs
  8146  15F9                     l2435:	
  8147  15F9  0856               	movf	___fladd@a,w
  8148  15FA  00DA               	movwf	??___fladd
  8149  15FB  085A               	movf	??___fladd,w
  8150  15FC  00D2               	movwf	___fladd@b
  8151  15FD                     l2437:	
  8152  15FD  0865               	movf	___fladd@grs,w
  8153  15FE  00DA               	movwf	??___fladd
  8154  15FF  085A               	movf	??___fladd,w
  8155  1600  00D6               	movwf	___fladd@a
  8156  1601                     l2439:	
  8157  1601  0853               	movf	___fladd@b+1,w
  8158  1602  00DA               	movwf	??___fladd
  8159  1603  085A               	movf	??___fladd,w
  8160  1604  00E5               	movwf	___fladd@grs
  8161  1605                     l2441:	
  8162  1605  0857               	movf	___fladd@a+1,w
  8163  1606  00DA               	movwf	??___fladd
  8164  1607  085A               	movf	??___fladd,w
  8165  1608  00D3               	movwf	___fladd@b+1
  8166  1609                     l2443:	
  8167  1609  0865               	movf	___fladd@grs,w
  8168  160A  00DA               	movwf	??___fladd
  8169  160B  085A               	movf	??___fladd,w
  8170  160C  00D7               	movwf	___fladd@a+1
  8171  160D                     l2445:	
  8172  160D  0854               	movf	___fladd@b+2,w
  8173  160E  00DA               	movwf	??___fladd
  8174  160F  085A               	movf	??___fladd,w
  8175  1610  00E5               	movwf	___fladd@grs
  8176  1611                     l2447:	
  8177  1611  0858               	movf	___fladd@a+2,w
  8178  1612  00DA               	movwf	??___fladd
  8179  1613  085A               	movf	??___fladd,w
  8180  1614  00D4               	movwf	___fladd@b+2
  8181  1615                     l2449:	
  8182  1615  0865               	movf	___fladd@grs,w
  8183  1616  00DA               	movwf	??___fladd
  8184  1617  085A               	movf	??___fladd,w
  8185  1618  00D8               	movwf	___fladd@a+2
  8186  1619                     l2451:	
  8187  1619  0855               	movf	___fladd@b+3,w
  8188  161A  00DA               	movwf	??___fladd
  8189  161B  085A               	movf	??___fladd,w
  8190  161C  00E5               	movwf	___fladd@grs
  8191  161D                     l2453:	
  8192  161D  0859               	movf	___fladd@a+3,w
  8193  161E  00DA               	movwf	??___fladd
  8194  161F  085A               	movf	??___fladd,w
  8195  1620  00D5               	movwf	___fladd@b+3
  8196  1621                     l2455:	
  8197  1621  0865               	movf	___fladd@grs,w
  8198  1622  00DA               	movwf	??___fladd
  8199  1623  085A               	movf	??___fladd,w
  8200  1624  00D9               	movwf	___fladd@a+3
  8201  1625                     l2457:	
  8202  1625  01E5               	clrf	___fladd@grs
  8203  1626                     l2459:	
  8204  1626  0863               	movf	___fladd@aexp,w
  8205  1627  00DA               	movwf	??___fladd
  8206  1628  01DB               	clrf	??___fladd+1
  8207  1629  085B               	movf	??___fladd+1,w
  8208  162A  00DD               	movwf	??___fladd+3
  8209  162B  0864               	movf	___fladd@bexp,w
  8210  162C  025A               	subwf	??___fladd,w
  8211  162D  00DC               	movwf	??___fladd+2
  8212  162E  1C03               	skipc
  8213  162F  03DD               	decf	??___fladd+3,f
  8214  1630  085D               	movf	??___fladd+3,w
  8215  1631  3A80               	xorlw	128
  8216  1632  00FF               	movwf	btemp+1
  8217  1633  3080               	movlw	128
  8218  1634  027F               	subwf	btemp+1,w
  8219  1635  1D03               	skipz
  8220  1636  2E39               	goto	u3405
  8221  1637  301A               	movlw	26
  8222  1638  025C               	subwf	??___fladd+2,w
  8223  1639                     u3405:	
  8224  1639  1C03               	skipc
  8225  163A  2E3C               	goto	u3401
  8226  163B  2E3D               	goto	u3400
  8227  163C                     u3401:	
  8228  163C  2E7A               	goto	l2475
  8229  163D                     u3400:	
  8230  163D                     l2461:	
  8231  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8232  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8233  163F  0855               	movf	___fladd@b+3,w
  8234  1640  0454               	iorwf	___fladd@b+2,w
  8235  1641  0453               	iorwf	___fladd@b+1,w
  8236  1642  0452               	iorwf	___fladd@b,w
  8237  1643  1D03               	skipz
  8238  1644  2E46               	goto	u3411
  8239  1645  2E48               	goto	u3410
  8240  1646                     u3411:	
  8241  1646  3001               	movlw	1
  8242  1647  2E49               	goto	u3420
  8243  1648                     u3410:	
  8244  1648  3000               	movlw	0
  8245  1649                     u3420:	
  8246  1649  00DA               	movwf	??___fladd
  8247  164A  085A               	movf	??___fladd,w
  8248  164B  00E5               	movwf	___fladd@grs
  8249  164C  3000               	movlw	0
  8250  164D  00D5               	movwf	___fladd@b+3
  8251  164E  3000               	movlw	0
  8252  164F  00D4               	movwf	___fladd@b+2
  8253  1650  3000               	movlw	0
  8254  1651  00D3               	movwf	___fladd@b+1
  8255  1652  3000               	movlw	0
  8256  1653  00D2               	movwf	___fladd@b
  8257  1654  0863               	movf	___fladd@aexp,w
  8258  1655  00DA               	movwf	??___fladd
  8259  1656  085A               	movf	??___fladd,w
  8260  1657  00E4               	movwf	___fladd@bexp
  8261  1658  2E82               	goto	l660
  8262  1659                     l662:	
  8263  1659  1C65               	btfss	___fladd@grs,0
  8264  165A  2E5C               	goto	u3431
  8265  165B  2E5D               	goto	u3430
  8266  165C                     u3431:	
  8267  165C  2E66               	goto	l2465
  8268  165D                     u3430:	
  8269  165D                     l2463:	
  8270  165D  0865               	movf	___fladd@grs,w
  8271  165E  00DA               	movwf	??___fladd
  8272  165F  1003               	clrc
  8273  1660  0C5A               	rrf	??___fladd,w
  8274  1661  3801               	iorlw	1
  8275  1662  00DB               	movwf	??___fladd+1
  8276  1663  085B               	movf	??___fladd+1,w
  8277  1664  00E5               	movwf	___fladd@grs
  8278  1665  2E68               	goto	l2467
  8279  1666                     l2465:	
  8280  1666  1003               	clrc
  8281  1667  0CE5               	rrf	___fladd@grs,f
  8282  1668                     l2467:	
  8283  1668  1C52               	btfss	___fladd@b,0
  8284  1669  2E6B               	goto	u3441
  8285  166A  2E6C               	goto	u3440
  8286  166B                     u3441:	
  8287  166B  2E6D               	goto	l2471
  8288  166C                     u3440:	
  8289  166C                     l2469:	
  8290  166C  17E5               	bsf	___fladd@grs,7
  8291  166D                     l2471:	
  8292  166D  3001               	movlw	1
  8293  166E  00DA               	movwf	??___fladd
  8294  166F                     u3455:	
  8295  166F  0D55               	rlf	___fladd@b+3,w
  8296  1670  0CD5               	rrf	___fladd@b+3,f
  8297  1671  0CD4               	rrf	___fladd@b+2,f
  8298  1672  0CD3               	rrf	___fladd@b+1,f
  8299  1673  0CD2               	rrf	___fladd@b,f
  8300  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8301  1675  2E6F               	goto	u3455
  8302  1676                     l2473:	
  8303  1676  3001               	movlw	1
  8304  1677  00DA               	movwf	??___fladd
  8305  1678  085A               	movf	??___fladd,w
  8306  1679  07E4               	addwf	___fladd@bexp,f
  8307  167A                     l2475:	
  8308  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8309  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8310  167C  0863               	movf	___fladd@aexp,w
  8311  167D  0264               	subwf	___fladd@bexp,w
  8312  167E  1C03               	skipc
  8313  167F  2E81               	goto	u3461
  8314  1680  2E82               	goto	u3460
  8315  1681                     u3461:	
  8316  1681  2E59               	goto	l662
  8317  1682                     u3460:	
  8318  1682                     l660:	
  8319  1682  1B62               	btfsc	___fladd@signs,6
  8320  1683  2E85               	goto	u3471
  8321  1684  2E86               	goto	u3470
  8322  1685                     u3471:	
  8323  1685  2ED1               	goto	l2501
  8324  1686                     u3470:	
  8325  1686                     l2477:	
  8326  1686  0864               	movf	___fladd@bexp,w
  8327  1687  1D03               	btfss	3,2
  8328  1688  2E8A               	goto	u3481
  8329  1689  2E8B               	goto	u3480
  8330  168A                     u3481:	
  8331  168A  2E94               	goto	l2483
  8332  168B                     u3480:	
  8333  168B                     l2479:	
  8334  168B  3000               	movlw	0
  8335  168C  00D5               	movwf	?___fladd+3
  8336  168D  3000               	movlw	0
  8337  168E  00D4               	movwf	?___fladd+2
  8338  168F  3000               	movlw	0
  8339  1690  00D3               	movwf	?___fladd+1
  8340  1691  3000               	movlw	0
  8341  1692  00D2               	movwf	?___fladd
  8342  1693  2FFF               	goto	l669
  8343  1694                     l2483:	
  8344  1694  0856               	movf	___fladd@a,w
  8345  1695  07D2               	addwf	___fladd@b,f
  8346  1696  0857               	movf	___fladd@a+1,w
  8347  1697  1103               	clrz
  8348  1698  1803               	skipnc
  8349  1699  3E01               	addlw	1
  8350  169A  1903               	skipnz
  8351  169B  2E9D               	goto	u3491
  8352  169C  07D3               	addwf	___fladd@b+1,f
  8353  169D                     u3491:	
  8354  169D  0858               	movf	___fladd@a+2,w
  8355  169E  1103               	clrz
  8356  169F  1803               	skipnc
  8357  16A0  3E01               	addlw	1
  8358  16A1  1903               	skipnz
  8359  16A2  2EA4               	goto	u3492
  8360  16A3  07D4               	addwf	___fladd@b+2,f
  8361  16A4                     u3492:	
  8362  16A4  0859               	movf	___fladd@a+3,w
  8363  16A5  1103               	clrz
  8364  16A6  1803               	skipnc
  8365  16A7  3E01               	addlw	1
  8366  16A8  1903               	skipnz
  8367  16A9  2EAB               	goto	u3493
  8368  16AA  07D5               	addwf	___fladd@b+3,f
  8369  16AB                     u3493:	
  8370  16AB                     l2485:	
  8371  16AB  1C55               	btfss	___fladd@b+3,0
  8372  16AC  2EAE               	goto	u3501
  8373  16AD  2EAF               	goto	u3500
  8374  16AE                     u3501:	
  8375  16AE  2F85               	goto	l2535
  8376  16AF                     u3500:	
  8377  16AF                     l2487:	
  8378  16AF  1C65               	btfss	___fladd@grs,0
  8379  16B0  2EB2               	goto	u3511
  8380  16B1  2EB3               	goto	u3510
  8381  16B2                     u3511:	
  8382  16B2  2EBC               	goto	l2491
  8383  16B3                     u3510:	
  8384  16B3                     l2489:	
  8385  16B3  0865               	movf	___fladd@grs,w
  8386  16B4  00DA               	movwf	??___fladd
  8387  16B5  1003               	clrc
  8388  16B6  0C5A               	rrf	??___fladd,w
  8389  16B7  3801               	iorlw	1
  8390  16B8  00DB               	movwf	??___fladd+1
  8391  16B9  085B               	movf	??___fladd+1,w
  8392  16BA  00E5               	movwf	___fladd@grs
  8393  16BB  2EBE               	goto	l2493
  8394  16BC                     l2491:	
  8395  16BC  1003               	clrc
  8396  16BD  0CE5               	rrf	___fladd@grs,f
  8397  16BE                     l2493:	
  8398  16BE  1C52               	btfss	___fladd@b,0
  8399  16BF  2EC1               	goto	u3521
  8400  16C0  2EC2               	goto	u3520
  8401  16C1                     u3521:	
  8402  16C1  2EC3               	goto	l2497
  8403  16C2                     u3520:	
  8404  16C2                     l2495:	
  8405  16C2  17E5               	bsf	___fladd@grs,7
  8406  16C3                     l2497:	
  8407  16C3  3001               	movlw	1
  8408  16C4  00DA               	movwf	??___fladd
  8409  16C5                     u3535:	
  8410  16C5  0D55               	rlf	___fladd@b+3,w
  8411  16C6  0CD5               	rrf	___fladd@b+3,f
  8412  16C7  0CD4               	rrf	___fladd@b+2,f
  8413  16C8  0CD3               	rrf	___fladd@b+1,f
  8414  16C9  0CD2               	rrf	___fladd@b,f
  8415  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8416  16CB  2EC5               	goto	u3535
  8417  16CC                     l2499:	
  8418  16CC  3001               	movlw	1
  8419  16CD  00DA               	movwf	??___fladd
  8420  16CE  085A               	movf	??___fladd,w
  8421  16CF  07E4               	addwf	___fladd@bexp,f
  8422  16D0  2F85               	goto	l2535
  8423  16D1                     l2501:	
  8424  16D1  0855               	movf	___fladd@b+3,w
  8425  16D2  3A80               	xorlw	128
  8426  16D3  00FF               	movwf	btemp+1
  8427  16D4  0859               	movf	___fladd@a+3,w
  8428  16D5  3A80               	xorlw	128
  8429  16D6  027F               	subwf	btemp+1,w
  8430  16D7  1D03               	skipz
  8431  16D8  2EE3               	goto	u3543
  8432  16D9  0858               	movf	___fladd@a+2,w
  8433  16DA  0254               	subwf	___fladd@b+2,w
  8434  16DB  1D03               	skipz
  8435  16DC  2EE3               	goto	u3543
  8436  16DD  0857               	movf	___fladd@a+1,w
  8437  16DE  0253               	subwf	___fladd@b+1,w
  8438  16DF  1D03               	skipz
  8439  16E0  2EE3               	goto	u3543
  8440  16E1  0856               	movf	___fladd@a,w
  8441  16E2  0252               	subwf	___fladd@b,w
  8442  16E3                     u3543:	
  8443  16E3  1803               	skipnc
  8444  16E4  2EE6               	goto	u3541
  8445  16E5  2EE7               	goto	u3540
  8446  16E6                     u3541:	
  8447  16E6  2F3F               	goto	l2511
  8448  16E7                     u3540:	
  8449  16E7                     l2503:	
  8450  16E7  30FF               	movlw	255
  8451  16E8  00DA               	movwf	??___fladd
  8452  16E9  30FF               	movlw	255
  8453  16EA  00DB               	movwf	??___fladd+1
  8454  16EB  30FF               	movlw	255
  8455  16EC  00DC               	movwf	??___fladd+2
  8456  16ED  30FF               	movlw	255
  8457  16EE  00DD               	movwf	??___fladd+3
  8458  16EF  0856               	movf	___fladd@a,w
  8459  16F0  00DE               	movwf	??___fladd+4
  8460  16F1  0857               	movf	___fladd@a+1,w
  8461  16F2  00DF               	movwf	??___fladd+5
  8462  16F3  0858               	movf	___fladd@a+2,w
  8463  16F4  00E0               	movwf	??___fladd+6
  8464  16F5  0859               	movf	___fladd@a+3,w
  8465  16F6  00E1               	movwf	??___fladd+7
  8466  16F7  0852               	movf	___fladd@b,w
  8467  16F8  02DE               	subwf	??___fladd+4,f
  8468  16F9  0853               	movf	___fladd@b+1,w
  8469  16FA  1C03               	skipc
  8470  16FB  0F53               	incfsz	___fladd@b+1,w
  8471  16FC  2EFE               	goto	u3551
  8472  16FD  2EFF               	goto	u3552
  8473  16FE                     u3551:	
  8474  16FE  02DF               	subwf	??___fladd+5,f
  8475  16FF                     u3552:	
  8476  16FF  0854               	movf	___fladd@b+2,w
  8477  1700  1C03               	skipc
  8478  1701  0F54               	incfsz	___fladd@b+2,w
  8479  1702  2F04               	goto	u3553
  8480  1703  2F05               	goto	u3554
  8481  1704                     u3553:	
  8482  1704  02E0               	subwf	??___fladd+6,f
  8483  1705                     u3554:	
  8484  1705  0855               	movf	___fladd@b+3,w
  8485  1706  1C03               	skipc
  8486  1707  0F55               	incfsz	___fladd@b+3,w
  8487  1708  2F0A               	goto	u3555
  8488  1709  2F0B               	goto	u3556
  8489  170A                     u3555:	
  8490  170A  02E1               	subwf	??___fladd+7,f
  8491  170B                     u3556:	
  8492  170B  085E               	movf	??___fladd+4,w
  8493  170C  07DA               	addwf	??___fladd,f
  8494  170D  085F               	movf	??___fladd+5,w
  8495  170E  1803               	skipnc
  8496  170F  0F5F               	incfsz	??___fladd+5,w
  8497  1710  2F12               	goto	u3560
  8498  1711  2F13               	goto	u3561
  8499  1712                     u3560:	
  8500  1712  07DB               	addwf	??___fladd+1,f
  8501  1713                     u3561:	
  8502  1713  0860               	movf	??___fladd+6,w
  8503  1714  1803               	skipnc
  8504  1715  0F60               	incfsz	??___fladd+6,w
  8505  1716  2F18               	goto	u3562
  8506  1717  2F19               	goto	u3563
  8507  1718                     u3562:	
  8508  1718  07DC               	addwf	??___fladd+2,f
  8509  1719                     u3563:	
  8510  1719  0861               	movf	??___fladd+7,w
  8511  171A  1803               	skipnc
  8512  171B  0A61               	incf	??___fladd+7,w
  8513  171C  07DD               	addwf	??___fladd+3,f
  8514  171D  085D               	movf	??___fladd+3,w
  8515  171E  00D5               	movwf	___fladd@b+3
  8516  171F  085C               	movf	??___fladd+2,w
  8517  1720  00D4               	movwf	___fladd@b+2
  8518  1721  085B               	movf	??___fladd+1,w
  8519  1722  00D3               	movwf	___fladd@b+1
  8520  1723  085A               	movf	??___fladd,w
  8521  1724  00D2               	movwf	___fladd@b
  8522  1725                     l2505:	
  8523  1725  3080               	movlw	128
  8524  1726  00DA               	movwf	??___fladd
  8525  1727  085A               	movf	??___fladd,w
  8526  1728  06E2               	xorwf	___fladd@signs,f
  8527  1729  09E5               	comf	___fladd@grs,f
  8528  172A  0AE5               	incf	___fladd@grs,f
  8529  172B                     l2507:	
  8530  172B  0865               	movf	___fladd@grs,w
  8531  172C  1D03               	btfss	3,2
  8532  172D  2F2F               	goto	u3571
  8533  172E  2F30               	goto	u3570
  8534  172F                     u3571:	
  8535  172F  2F4D               	goto	l677
  8536  1730                     u3570:	
  8537  1730                     l2509:	
  8538  1730  3001               	movlw	1
  8539  1731  07D2               	addwf	___fladd@b,f
  8540  1732  3000               	movlw	0
  8541  1733  1803               	skipnc
  8542  1734  3001               	movlw	1
  8543  1735  07D3               	addwf	___fladd@b+1,f
  8544  1736  3000               	movlw	0
  8545  1737  1803               	skipnc
  8546  1738  3001               	movlw	1
  8547  1739  07D4               	addwf	___fladd@b+2,f
  8548  173A  3000               	movlw	0
  8549  173B  1803               	skipnc
  8550  173C  3001               	movlw	1
  8551  173D  07D5               	addwf	___fladd@b+3,f
  8552  173E  2F4D               	goto	l677
  8553  173F                     l2511:	
  8554  173F  0856               	movf	___fladd@a,w
  8555  1740  02D2               	subwf	___fladd@b,f
  8556  1741  0857               	movf	___fladd@a+1,w
  8557  1742  1C03               	skipc
  8558  1743  0F57               	incfsz	___fladd@a+1,w
  8559  1744  02D3               	subwf	___fladd@b+1,f
  8560  1745  0858               	movf	___fladd@a+2,w
  8561  1746  1C03               	skipc
  8562  1747  0F58               	incfsz	___fladd@a+2,w
  8563  1748  02D4               	subwf	___fladd@b+2,f
  8564  1749  0859               	movf	___fladd@a+3,w
  8565  174A  1C03               	skipc
  8566  174B  0F59               	incfsz	___fladd@a+3,w
  8567  174C  02D5               	subwf	___fladd@b+3,f
  8568  174D                     l677:	
  8569  174D  0855               	movf	___fladd@b+3,w
  8570  174E  0454               	iorwf	___fladd@b+2,w
  8571  174F  0453               	iorwf	___fladd@b+1,w
  8572  1750  0452               	iorwf	___fladd@b,w
  8573  1751  1D03               	skipz
  8574  1752  2F54               	goto	u3581
  8575  1753  2F55               	goto	u3580
  8576  1754                     u3581:	
  8577  1754  2F81               	goto	l2533
  8578  1755                     u3580:	
  8579  1755                     l2513:	
  8580  1755  0865               	movf	___fladd@grs,w
  8581  1756  1D03               	btfss	3,2
  8582  1757  2F59               	goto	u3591
  8583  1758  2F5A               	goto	u3590
  8584  1759                     u3591:	
  8585  1759  2F81               	goto	l2533
  8586  175A                     u3590:	
  8587  175A                     l2515:	
  8588  175A  3000               	movlw	0
  8589  175B  00D5               	movwf	?___fladd+3
  8590  175C  3000               	movlw	0
  8591  175D  00D4               	movwf	?___fladd+2
  8592  175E  3000               	movlw	0
  8593  175F  00D3               	movwf	?___fladd+1
  8594  1760  3000               	movlw	0
  8595  1761  00D2               	movwf	?___fladd
  8596  1762  2FFF               	goto	l669
  8597  1763                     l2519:	
  8598  1763  3001               	movlw	1
  8599  1764  00DA               	movwf	??___fladd
  8600  1765                     u3605:	
  8601  1765  1003               	clrc
  8602  1766  0DD2               	rlf	___fladd@b,f
  8603  1767  0DD3               	rlf	___fladd@b+1,f
  8604  1768  0DD4               	rlf	___fladd@b+2,f
  8605  1769  0DD5               	rlf	___fladd@b+3,f
  8606  176A  0BDA               	decfsz	??___fladd,f
  8607  176B  2F65               	goto	u3605
  8608  176C                     l2521:	
  8609  176C  1FE5               	btfss	___fladd@grs,7
  8610  176D  2F6F               	goto	u3611
  8611  176E  2F70               	goto	u3610
  8612  176F                     u3611:	
  8613  176F  2F71               	goto	l681
  8614  1770                     u3610:	
  8615  1770                     l2523:	
  8616  1770  1452               	bsf	___fladd@b,0
  8617  1771                     l681:	
  8618  1771  1C65               	btfss	___fladd@grs,0
  8619  1772  2F74               	goto	u3621
  8620  1773  2F75               	goto	u3620
  8621  1774                     u3621:	
  8622  1774  2F78               	goto	l2527
  8623  1775                     u3620:	
  8624  1775                     l2525:	
  8625  1775  1403               	setc
  8626  1776  0DE5               	rlf	___fladd@grs,f
  8627  1777  2F7A               	goto	l2529
  8628  1778                     l2527:	
  8629  1778  1003               	clrc
  8630  1779  0DE5               	rlf	___fladd@grs,f
  8631  177A                     l2529:	
  8632  177A  0864               	movf	___fladd@bexp,w
  8633  177B  1903               	btfsc	3,2
  8634  177C  2F7E               	goto	u3631
  8635  177D  2F7F               	goto	u3630
  8636  177E                     u3631:	
  8637  177E  2F81               	goto	l2533
  8638  177F                     u3630:	
  8639  177F                     l2531:	
  8640  177F  3001               	movlw	1
  8641  1780  02E4               	subwf	___fladd@bexp,f
  8642  1781                     l2533:	
  8643  1781  1FD4               	btfss	___fladd@b+2,7
  8644  1782  2F84               	goto	u3641
  8645  1783  2F85               	goto	u3640
  8646  1784                     u3641:	
  8647  1784  2F63               	goto	l2519
  8648  1785                     u3640:	
  8649  1785                     l2535:	
  8650  1785  01E3               	clrf	___fladd@aexp
  8651  1786                     l2537:	
  8652  1786  1FE5               	btfss	___fladd@grs,7
  8653  1787  2F89               	goto	u3651
  8654  1788  2F8A               	goto	u3650
  8655  1789                     u3651:	
  8656  1789  2F98               	goto	l2545
  8657  178A                     u3650:	
  8658  178A                     l2539:	
  8659  178A  0865               	movf	___fladd@grs,w
  8660  178B  397F               	andlw	127
  8661  178C  1903               	btfsc	3,2
  8662  178D  2F8F               	goto	u3661
  8663  178E  2F90               	goto	u3660
  8664  178F                     u3661:	
  8665  178F  2F93               	goto	l687
  8666  1790                     u3660:	
  8667  1790                     l2541:	
  8668  1790  01E3               	clrf	___fladd@aexp
  8669  1791  0AE3               	incf	___fladd@aexp,f
  8670  1792  2F98               	goto	l2545
  8671  1793                     l687:	
  8672  1793  1C52               	btfss	___fladd@b,0
  8673  1794  2F96               	goto	u3671
  8674  1795  2F97               	goto	u3670
  8675  1796                     u3671:	
  8676  1796  2F98               	goto	l2545
  8677  1797                     u3670:	
  8678  1797  2F90               	goto	l2541
  8679  1798                     l2545:	
  8680  1798  0863               	movf	___fladd@aexp,w
  8681  1799  1903               	btfsc	3,2
  8682  179A  2F9C               	goto	u3681
  8683  179B  2F9D               	goto	u3680
  8684  179C                     u3681:	
  8685  179C  2FD1               	goto	l690
  8686  179D                     u3680:	
  8687  179D                     l2547:	
  8688  179D  3001               	movlw	1
  8689  179E  07D2               	addwf	___fladd@b,f
  8690  179F  3000               	movlw	0
  8691  17A0  1803               	skipnc
  8692  17A1  3001               	movlw	1
  8693  17A2  07D3               	addwf	___fladd@b+1,f
  8694  17A3  3000               	movlw	0
  8695  17A4  1803               	skipnc
  8696  17A5  3001               	movlw	1
  8697  17A6  07D4               	addwf	___fladd@b+2,f
  8698  17A7  3000               	movlw	0
  8699  17A8  1803               	skipnc
  8700  17A9  3001               	movlw	1
  8701  17AA  07D5               	addwf	___fladd@b+3,f
  8702  17AB                     l2549:	
  8703  17AB  1C55               	btfss	___fladd@b+3,0
  8704  17AC  2FAE               	goto	u3691
  8705  17AD  2FAF               	goto	u3690
  8706  17AE                     u3691:	
  8707  17AE  2FD1               	goto	l690
  8708  17AF                     u3690:	
  8709  17AF                     l2551:	
  8710  17AF  0852               	movf	___fladd@b,w
  8711  17B0  00DA               	movwf	??___fladd
  8712  17B1  0853               	movf	___fladd@b+1,w
  8713  17B2  00DB               	movwf	??___fladd+1
  8714  17B3  0854               	movf	___fladd@b+2,w
  8715  17B4  00DC               	movwf	??___fladd+2
  8716  17B5  0855               	movf	___fladd@b+3,w
  8717  17B6  00DD               	movwf	??___fladd+3
  8718  17B7  3001               	movlw	1
  8719  17B8  00DE               	movwf	??___fladd+4
  8720  17B9                     u3705:	
  8721  17B9  0D5D               	rlf	??___fladd+3,w
  8722  17BA  0CDD               	rrf	??___fladd+3,f
  8723  17BB  0CDC               	rrf	??___fladd+2,f
  8724  17BC  0CDB               	rrf	??___fladd+1,f
  8725  17BD  0CDA               	rrf	??___fladd,f
  8726  17BE                     u3700:	
  8727  17BE  0BDE               	decfsz	??___fladd+4,f
  8728  17BF  2FB9               	goto	u3705
  8729  17C0  085D               	movf	??___fladd+3,w
  8730  17C1  00D5               	movwf	___fladd@b+3
  8731  17C2  085C               	movf	??___fladd+2,w
  8732  17C3  00D4               	movwf	___fladd@b+2
  8733  17C4  085B               	movf	??___fladd+1,w
  8734  17C5  00D3               	movwf	___fladd@b+1
  8735  17C6  085A               	movf	??___fladd,w
  8736  17C7  00D2               	movwf	___fladd@b
  8737  17C8  0A64               	incf	___fladd@bexp,w
  8738  17C9  1903               	btfsc	3,2
  8739  17CA  2FCC               	goto	u3711
  8740  17CB  2FCD               	goto	u3710
  8741  17CC                     u3711:	
  8742  17CC  2FD1               	goto	l690
  8743  17CD                     u3710:	
  8744  17CD                     l2553:	
  8745  17CD  3001               	movlw	1
  8746  17CE  00DA               	movwf	??___fladd
  8747  17CF  085A               	movf	??___fladd,w
  8748  17D0  07E4               	addwf	___fladd@bexp,f
  8749  17D1                     l690:	
  8750  17D1  0A64               	incf	___fladd@bexp,w
  8751  17D2  1903               	btfsc	3,2
  8752  17D3  2FD5               	goto	u3721
  8753  17D4  2FD6               	goto	u3720
  8754  17D5                     u3721:	
  8755  17D5  2FDB               	goto	l2557
  8756  17D6                     u3720:	
  8757  17D6                     l2555:	
  8758  17D6  0864               	movf	___fladd@bexp,w
  8759  17D7  1D03               	btfss	3,2
  8760  17D8  2FDA               	goto	u3731
  8761  17D9  2FDB               	goto	u3730
  8762  17DA                     u3731:	
  8763  17DA  2FE9               	goto	l2563
  8764  17DB                     u3730:	
  8765  17DB                     l2557:	
  8766  17DB  3000               	movlw	0
  8767  17DC  00D5               	movwf	___fladd@b+3
  8768  17DD  3000               	movlw	0
  8769  17DE  00D4               	movwf	___fladd@b+2
  8770  17DF  3000               	movlw	0
  8771  17E0  00D3               	movwf	___fladd@b+1
  8772  17E1  3000               	movlw	0
  8773  17E2  00D2               	movwf	___fladd@b
  8774  17E3                     l2559:	
  8775  17E3  0864               	movf	___fladd@bexp,w
  8776  17E4  1D03               	btfss	3,2
  8777  17E5  2FE7               	goto	u3741
  8778  17E6  2FE8               	goto	u3740
  8779  17E7                     u3741:	
  8780  17E7  2FE9               	goto	l2563
  8781  17E8                     u3740:	
  8782  17E8                     l2561:	
  8783  17E8  01E2               	clrf	___fladd@signs
  8784  17E9                     l2563:	
  8785  17E9  1C64               	btfss	___fladd@bexp,0
  8786  17EA  2FEC               	goto	u3751
  8787  17EB  2FED               	goto	u3750
  8788  17EC                     u3751:	
  8789  17EC  2FEF               	goto	l2567
  8790  17ED                     u3750:	
  8791  17ED                     l2565:	
  8792  17ED  17D4               	bsf	___fladd@b+2,7
  8793  17EE  2FF3               	goto	l698
  8794  17EF                     l2567:	
  8795  17EF  307F               	movlw	127
  8796  17F0  00DA               	movwf	??___fladd
  8797  17F1  085A               	movf	??___fladd,w
  8798  17F2  05D4               	andwf	___fladd@b+2,f
  8799  17F3                     l698:	
  8800  17F3  0864               	movf	___fladd@bexp,w
  8801  17F4  00DA               	movwf	??___fladd
  8802  17F5  1003               	clrc
  8803  17F6  0C5A               	rrf	??___fladd,w
  8804  17F7  00DB               	movwf	??___fladd+1
  8805  17F8  085B               	movf	??___fladd+1,w
  8806  17F9  00D5               	movwf	___fladd@b+3
  8807  17FA                     l2569:	
  8808  17FA  1FE2               	btfss	___fladd@signs,7
  8809  17FB  2FFD               	goto	u3761
  8810  17FC  2FFE               	goto	u3760
  8811  17FD                     u3761:	
  8812  17FD  2FFF               	goto	l699
  8813  17FE                     u3760:	
  8814  17FE                     l2571:	
  8815  17FE  17D5               	bsf	___fladd@b+3,7
  8816  17FF                     l699:	
  8817  17FF                     l669:	
  8818  17FF  0008               	return
  8819  1800                     __end_of___fladd:	
  8820                           
  8821                           	psect	text22
  8822  1B0D                     __ptext22:	
  8823 ;; *************** function ___flneg *****************
  8824 ;; Defined at:
  8825 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;  f1              4    0[COMMON] unsigned char 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  4    0[COMMON] unsigned char 
  8832 ;; Registers used:
  8833 ;;		wreg
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8839 ;;      Params:         4       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0
  8842 ;;      Totals:         4       0       0       0       0
  8843 ;;Total ram usage:        4 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; This function calls:
  8846 ;;		Nothing
  8847 ;; This function is called by:
  8848 ;;		_sprintf
  8849 ;; This function uses a non-reentrant model
  8850 ;;
  8851                           
  8852                           
  8853                           ;psect for function ___flneg
  8854  1B0D                     ___flneg:	
  8855  1B0D                     l2963:	
  8856                           ;incstack = 0
  8857                           ; Regs used in ___flneg: [wreg]
  8858                           
  8859  1B0D  0873               	movf	___flneg@f1+3,w
  8860  1B0E  0472               	iorwf	___flneg@f1+2,w
  8861  1B0F  0471               	iorwf	___flneg@f1+1,w
  8862  1B10  0470               	iorwf	___flneg@f1,w
  8863  1B11  1903               	skipnz
  8864  1B12  2B14               	goto	u4911
  8865  1B13  2B15               	goto	u4910
  8866  1B14                     u4911:	
  8867  1B14  2B17               	goto	l2967
  8868  1B15                     u4910:	
  8869  1B15                     l2965:	
  8870  1B15  3080               	movlw	128
  8871  1B16  06F3               	xorwf	___flneg@f1+3,f
  8872  1B17                     l2967:	
  8873  1B17                     l528:	
  8874  1B17  0008               	return
  8875  1B18                     __end_of___flneg:	
  8876                           
  8877                           	psect	text23
  8878  10C4                     __ptext23:	
  8879 ;; *************** function ___flge *****************
  8880 ;; Defined at:
  8881 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  ff1             4    0[COMMON] unsigned char 
  8884 ;;  ff2             4    4[COMMON] unsigned char 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;		None               void
  8889 ;; Registers used:
  8890 ;;		wreg, status,2, status,0
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8896 ;;      Params:         8       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0
  8898 ;;      Temps:          4       0       0       0       0
  8899 ;;      Totals:        12       0       0       0       0
  8900 ;;Total ram usage:       12 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; This function calls:
  8903 ;;		Nothing
  8904 ;; This function is called by:
  8905 ;;		_sprintf
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function ___flge
  8911  10C4                     ___flge:	
  8912  10C4                     l2943:	
  8913                           ;incstack = 0
  8914                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8915                           
  8916  10C4  3000               	movlw	0
  8917  10C5  0570               	andwf	___flge@ff1,w
  8918  10C6  00F8               	movwf	??___flge
  8919  10C7  3000               	movlw	0
  8920  10C8  0571               	andwf	___flge@ff1+1,w
  8921  10C9  00F9               	movwf	??___flge+1
  8922  10CA  3080               	movlw	128
  8923  10CB  0572               	andwf	___flge@ff1+2,w
  8924  10CC  00FA               	movwf	??___flge+2
  8925  10CD  307F               	movlw	127
  8926  10CE  0573               	andwf	___flge@ff1+3,w
  8927  10CF  00FB               	movwf	??___flge+3
  8928  10D0  087B               	movf	??___flge+3,w
  8929  10D1  047A               	iorwf	??___flge+2,w
  8930  10D2  0479               	iorwf	??___flge+1,w
  8931  10D3  0478               	iorwf	??___flge,w
  8932  10D4  1D03               	skipz
  8933  10D5  28D7               	goto	u4841
  8934  10D6  28D8               	goto	u4840
  8935  10D7                     u4841:	
  8936  10D7  28E0               	goto	l520
  8937  10D8                     u4840:	
  8938  10D8                     l2945:	
  8939  10D8  3000               	movlw	0
  8940  10D9  00F3               	movwf	___flge@ff1+3
  8941  10DA  3000               	movlw	0
  8942  10DB  00F2               	movwf	___flge@ff1+2
  8943  10DC  3000               	movlw	0
  8944  10DD  00F1               	movwf	___flge@ff1+1
  8945  10DE  3000               	movlw	0
  8946  10DF  00F0               	movwf	___flge@ff1
  8947  10E0                     l520:	
  8948  10E0  3000               	movlw	0
  8949  10E1  0574               	andwf	___flge@ff2,w
  8950  10E2  00F8               	movwf	??___flge
  8951  10E3  3000               	movlw	0
  8952  10E4  0575               	andwf	___flge@ff2+1,w
  8953  10E5  00F9               	movwf	??___flge+1
  8954  10E6  3080               	movlw	128
  8955  10E7  0576               	andwf	___flge@ff2+2,w
  8956  10E8  00FA               	movwf	??___flge+2
  8957  10E9  307F               	movlw	127
  8958  10EA  0577               	andwf	___flge@ff2+3,w
  8959  10EB  00FB               	movwf	??___flge+3
  8960  10EC  087B               	movf	??___flge+3,w
  8961  10ED  047A               	iorwf	??___flge+2,w
  8962  10EE  0479               	iorwf	??___flge+1,w
  8963  10EF  0478               	iorwf	??___flge,w
  8964  10F0  1D03               	skipz
  8965  10F1  28F3               	goto	u4851
  8966  10F2  28F4               	goto	u4850
  8967  10F3                     u4851:	
  8968  10F3  28FC               	goto	l2949
  8969  10F4                     u4850:	
  8970  10F4                     l2947:	
  8971  10F4  3000               	movlw	0
  8972  10F5  00F7               	movwf	___flge@ff2+3
  8973  10F6  3000               	movlw	0
  8974  10F7  00F6               	movwf	___flge@ff2+2
  8975  10F8  3000               	movlw	0
  8976  10F9  00F5               	movwf	___flge@ff2+1
  8977  10FA  3000               	movlw	0
  8978  10FB  00F4               	movwf	___flge@ff2
  8979  10FC                     l2949:	
  8980  10FC  1FF3               	btfss	___flge@ff1+3,7
  8981  10FD  28FF               	goto	u4861
  8982  10FE  2900               	goto	u4860
  8983  10FF                     u4861:	
  8984  10FF  2924               	goto	l2953
  8985  1100                     u4860:	
  8986  1100                     l2951:	
  8987  1100  3000               	movlw	0
  8988  1101  00F8               	movwf	??___flge
  8989  1102  3000               	movlw	0
  8990  1103  00F9               	movwf	??___flge+1
  8991  1104  3000               	movlw	0
  8992  1105  00FA               	movwf	??___flge+2
  8993  1106  3080               	movlw	128
  8994  1107  00FB               	movwf	??___flge+3
  8995  1108  0870               	movf	___flge@ff1,w
  8996  1109  02F8               	subwf	??___flge,f
  8997  110A  0871               	movf	___flge@ff1+1,w
  8998  110B  1C03               	skipc
  8999  110C  0F71               	incfsz	___flge@ff1+1,w
  9000  110D  290F               	goto	u4871
  9001  110E  2910               	goto	u4872
  9002  110F                     u4871:	
  9003  110F  02F9               	subwf	??___flge+1,f
  9004  1110                     u4872:	
  9005  1110  0872               	movf	___flge@ff1+2,w
  9006  1111  1C03               	skipc
  9007  1112  0F72               	incfsz	___flge@ff1+2,w
  9008  1113  2915               	goto	u4873
  9009  1114  2916               	goto	u4874
  9010  1115                     u4873:	
  9011  1115  02FA               	subwf	??___flge+2,f
  9012  1116                     u4874:	
  9013  1116  0873               	movf	___flge@ff1+3,w
  9014  1117  1C03               	skipc
  9015  1118  0F73               	incfsz	___flge@ff1+3,w
  9016  1119  291B               	goto	u4875
  9017  111A  291C               	goto	u4876
  9018  111B                     u4875:	
  9019  111B  02FB               	subwf	??___flge+3,f
  9020  111C                     u4876:	
  9021  111C  087B               	movf	??___flge+3,w
  9022  111D  00F3               	movwf	___flge@ff1+3
  9023  111E  087A               	movf	??___flge+2,w
  9024  111F  00F2               	movwf	___flge@ff1+2
  9025  1120  0879               	movf	??___flge+1,w
  9026  1121  00F1               	movwf	___flge@ff1+1
  9027  1122  0878               	movf	??___flge,w
  9028  1123  00F0               	movwf	___flge@ff1
  9029  1124                     l2953:	
  9030  1124  1FF7               	btfss	___flge@ff2+3,7
  9031  1125  2927               	goto	u4881
  9032  1126  2928               	goto	u4880
  9033  1127                     u4881:	
  9034  1127  294C               	goto	l523
  9035  1128                     u4880:	
  9036  1128                     l2955:	
  9037  1128  3000               	movlw	0
  9038  1129  00F8               	movwf	??___flge
  9039  112A  3000               	movlw	0
  9040  112B  00F9               	movwf	??___flge+1
  9041  112C  3000               	movlw	0
  9042  112D  00FA               	movwf	??___flge+2
  9043  112E  3080               	movlw	128
  9044  112F  00FB               	movwf	??___flge+3
  9045  1130  0874               	movf	___flge@ff2,w
  9046  1131  02F8               	subwf	??___flge,f
  9047  1132  0875               	movf	___flge@ff2+1,w
  9048  1133  1C03               	skipc
  9049  1134  0F75               	incfsz	___flge@ff2+1,w
  9050  1135  2937               	goto	u4891
  9051  1136  2938               	goto	u4892
  9052  1137                     u4891:	
  9053  1137  02F9               	subwf	??___flge+1,f
  9054  1138                     u4892:	
  9055  1138  0876               	movf	___flge@ff2+2,w
  9056  1139  1C03               	skipc
  9057  113A  0F76               	incfsz	___flge@ff2+2,w
  9058  113B  293D               	goto	u4893
  9059  113C  293E               	goto	u4894
  9060  113D                     u4893:	
  9061  113D  02FA               	subwf	??___flge+2,f
  9062  113E                     u4894:	
  9063  113E  0877               	movf	___flge@ff2+3,w
  9064  113F  1C03               	skipc
  9065  1140  0F77               	incfsz	___flge@ff2+3,w
  9066  1141  2943               	goto	u4895
  9067  1142  2944               	goto	u4896
  9068  1143                     u4895:	
  9069  1143  02FB               	subwf	??___flge+3,f
  9070  1144                     u4896:	
  9071  1144  087B               	movf	??___flge+3,w
  9072  1145  00F7               	movwf	___flge@ff2+3
  9073  1146  087A               	movf	??___flge+2,w
  9074  1147  00F6               	movwf	___flge@ff2+2
  9075  1148  0879               	movf	??___flge+1,w
  9076  1149  00F5               	movwf	___flge@ff2+1
  9077  114A  0878               	movf	??___flge,w
  9078  114B  00F4               	movwf	___flge@ff2
  9079  114C                     l523:	
  9080  114C  3080               	movlw	128
  9081  114D  06F3               	xorwf	___flge@ff1+3,f
  9082  114E  3080               	movlw	128
  9083  114F  06F7               	xorwf	___flge@ff2+3,f
  9084  1150  0877               	movf	___flge@ff2+3,w
  9085  1151  0273               	subwf	___flge@ff1+3,w
  9086  1152  1D03               	skipz
  9087  1153  295E               	goto	u4905
  9088  1154  0876               	movf	___flge@ff2+2,w
  9089  1155  0272               	subwf	___flge@ff1+2,w
  9090  1156  1D03               	skipz
  9091  1157  295E               	goto	u4905
  9092  1158  0875               	movf	___flge@ff2+1,w
  9093  1159  0271               	subwf	___flge@ff1+1,w
  9094  115A  1D03               	skipz
  9095  115B  295E               	goto	u4905
  9096  115C  0874               	movf	___flge@ff2,w
  9097  115D  0270               	subwf	___flge@ff1,w
  9098  115E                     u4905:	
  9099  115E  1803               	skipnc
  9100  115F  2961               	goto	u4901
  9101  1160  2962               	goto	u4900
  9102  1161                     u4901:	
  9103  1161  2964               	goto	l2959
  9104  1162                     u4900:	
  9105  1162                     l2957:	
  9106  1162  1003               	clrc
  9107  1163  2965               	goto	l524
  9108  1164                     l2959:	
  9109  1164  1403               	setc
  9110  1165                     l524:	
  9111  1165  0008               	return
  9112  1166                     __end_of___flge:	
  9113                           
  9114                           	psect	text24
  9115  1CF6                     __ptext24:	
  9116 ;; *************** function ___fleq *****************
  9117 ;; Defined at:
  9118 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  ff1             4    0[COMMON] unsigned char 
  9121 ;;  ff2             4    4[COMMON] unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;		None               void
  9126 ;; Registers used:
  9127 ;;		wreg, status,2, status,0
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9133 ;;      Params:         8       0       0       0       0
  9134 ;;      Locals:         0       0       0       0       0
  9135 ;;      Temps:          4       0       0       0       0
  9136 ;;      Totals:        12       0       0       0       0
  9137 ;;Total ram usage:       12 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_sprintf
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           
  9147                           ;psect for function ___fleq
  9148  1CF6                     ___fleq:	
  9149  1CF6                     l2931:	
  9150                           ;incstack = 0
  9151                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9152                           
  9153  1CF6  3000               	movlw	0
  9154  1CF7  0570               	andwf	___fleq@ff1,w
  9155  1CF8  00F8               	movwf	??___fleq
  9156  1CF9  3000               	movlw	0
  9157  1CFA  0571               	andwf	___fleq@ff1+1,w
  9158  1CFB  00F9               	movwf	??___fleq+1
  9159  1CFC  3080               	movlw	128
  9160  1CFD  0572               	andwf	___fleq@ff1+2,w
  9161  1CFE  00FA               	movwf	??___fleq+2
  9162  1CFF  307F               	movlw	127
  9163  1D00  0573               	andwf	___fleq@ff1+3,w
  9164  1D01  00FB               	movwf	??___fleq+3
  9165  1D02  087B               	movf	??___fleq+3,w
  9166  1D03  047A               	iorwf	??___fleq+2,w
  9167  1D04  0479               	iorwf	??___fleq+1,w
  9168  1D05  0478               	iorwf	??___fleq,w
  9169  1D06  1D03               	skipz
  9170  1D07  2D09               	goto	u4811
  9171  1D08  2D0A               	goto	u4810
  9172  1D09                     u4811:	
  9173  1D09  2D12               	goto	l515
  9174  1D0A                     u4810:	
  9175  1D0A                     l2933:	
  9176  1D0A  3000               	movlw	0
  9177  1D0B  00F3               	movwf	___fleq@ff1+3
  9178  1D0C  3000               	movlw	0
  9179  1D0D  00F2               	movwf	___fleq@ff1+2
  9180  1D0E  3000               	movlw	0
  9181  1D0F  00F1               	movwf	___fleq@ff1+1
  9182  1D10  3000               	movlw	0
  9183  1D11  00F0               	movwf	___fleq@ff1
  9184  1D12                     l515:	
  9185  1D12  3000               	movlw	0
  9186  1D13  0574               	andwf	___fleq@ff2,w
  9187  1D14  00F8               	movwf	??___fleq
  9188  1D15  3000               	movlw	0
  9189  1D16  0575               	andwf	___fleq@ff2+1,w
  9190  1D17  00F9               	movwf	??___fleq+1
  9191  1D18  3080               	movlw	128
  9192  1D19  0576               	andwf	___fleq@ff2+2,w
  9193  1D1A  00FA               	movwf	??___fleq+2
  9194  1D1B  307F               	movlw	127
  9195  1D1C  0577               	andwf	___fleq@ff2+3,w
  9196  1D1D  00FB               	movwf	??___fleq+3
  9197  1D1E  087B               	movf	??___fleq+3,w
  9198  1D1F  047A               	iorwf	??___fleq+2,w
  9199  1D20  0479               	iorwf	??___fleq+1,w
  9200  1D21  0478               	iorwf	??___fleq,w
  9201  1D22  1D03               	skipz
  9202  1D23  2D25               	goto	u4821
  9203  1D24  2D26               	goto	u4820
  9204  1D25                     u4821:	
  9205  1D25  2D2E               	goto	l516
  9206  1D26                     u4820:	
  9207  1D26                     l2935:	
  9208  1D26  3000               	movlw	0
  9209  1D27  00F7               	movwf	___fleq@ff2+3
  9210  1D28  3000               	movlw	0
  9211  1D29  00F6               	movwf	___fleq@ff2+2
  9212  1D2A  3000               	movlw	0
  9213  1D2B  00F5               	movwf	___fleq@ff2+1
  9214  1D2C  3000               	movlw	0
  9215  1D2D  00F4               	movwf	___fleq@ff2
  9216  1D2E                     l516:	
  9217  1D2E  0877               	movf	___fleq@ff2+3,w
  9218  1D2F  0673               	xorwf	___fleq@ff1+3,w
  9219  1D30  1D03               	skipz
  9220  1D31  2D3C               	goto	u4835
  9221  1D32  0876               	movf	___fleq@ff2+2,w
  9222  1D33  0672               	xorwf	___fleq@ff1+2,w
  9223  1D34  1D03               	skipz
  9224  1D35  2D3C               	goto	u4835
  9225  1D36  0875               	movf	___fleq@ff2+1,w
  9226  1D37  0671               	xorwf	___fleq@ff1+1,w
  9227  1D38  1D03               	skipz
  9228  1D39  2D3C               	goto	u4835
  9229  1D3A  0874               	movf	___fleq@ff2,w
  9230  1D3B  0670               	xorwf	___fleq@ff1,w
  9231  1D3C                     u4835:	
  9232  1D3C  1903               	skipnz
  9233  1D3D  2D3F               	goto	u4831
  9234  1D3E  2D40               	goto	u4830
  9235  1D3F                     u4831:	
  9236  1D3F  2D42               	goto	l2939
  9237  1D40                     u4830:	
  9238  1D40                     l2937:	
  9239  1D40  1003               	clrc
  9240  1D41  2D43               	goto	l517
  9241  1D42                     l2939:	
  9242  1D42  1403               	setc
  9243  1D43                     l517:	
  9244  1D43  0008               	return
  9245  1D44                     __end_of___fleq:	
  9246                           
  9247                           	psect	text25
  9248  139B                     __ptext25:	
  9249 ;; *************** function ___fldiv *****************
  9250 ;; Defined at:
  9251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  a               4   30[BANK0 ] unsigned char 
  9254 ;;  b               4   34[BANK0 ] unsigned char 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;  grs             4   50[BANK0 ] unsigned long 
  9257 ;;  rem             4   43[BANK0 ] unsigned long 
  9258 ;;  new_exp         2   48[BANK0 ] int 
  9259 ;;  aexp            1   55[BANK0 ] unsigned char 
  9260 ;;  bexp            1   54[BANK0 ] unsigned char 
  9261 ;;  sign            1   47[BANK0 ] unsigned char 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  4   30[BANK0 ] unsigned char 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2, status,0, btemp+1
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9271 ;;      Params:         0       8       0       0       0
  9272 ;;      Locals:         0      13       0       0       0
  9273 ;;      Temps:          0       5       0       0       0
  9274 ;;      Totals:         0      26       0       0       0
  9275 ;;Total ram usage:       26 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_Read_ADC
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function ___fldiv
  9286  139B                     ___fldiv:	
  9287  139B                     l3277:	
  9288                           ;incstack = 0
  9289                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9290                           
  9291  139B  1283               	bcf	3,5	;RP0=0, select bank0
  9292  139C  1303               	bcf	3,6	;RP1=0, select bank0
  9293  139D  0845               	movf	___fldiv@b+3,w
  9294  139E  3980               	andlw	128
  9295  139F  00C6               	movwf	??___fldiv
  9296  13A0  0846               	movf	??___fldiv,w
  9297  13A1  00CF               	movwf	___fldiv@sign
  9298  13A2                     l3279:	
  9299  13A2  0845               	movf	___fldiv@b+3,w
  9300  13A3  00C6               	movwf	??___fldiv
  9301  13A4  0746               	addwf	??___fldiv,w
  9302  13A5  00C7               	movwf	??___fldiv+1
  9303  13A6  0847               	movf	??___fldiv+1,w
  9304  13A7  00D6               	movwf	___fldiv@bexp
  9305  13A8                     l3281:	
  9306  13A8  1FC4               	btfss	___fldiv@b+2,7
  9307  13A9  2BAB               	goto	u5511
  9308  13AA  2BAC               	goto	u5510
  9309  13AB                     u5511:	
  9310  13AB  2BAD               	goto	l3285
  9311  13AC                     u5510:	
  9312  13AC                     l3283:	
  9313  13AC  1456               	bsf	___fldiv@bexp,0
  9314  13AD                     l3285:	
  9315  13AD  0856               	movf	___fldiv@bexp,w
  9316  13AE  1903               	btfsc	3,2
  9317  13AF  2BB1               	goto	u5521
  9318  13B0  2BB2               	goto	u5520
  9319  13B1                     u5521:	
  9320  13B1  2BC2               	goto	l3295
  9321  13B2                     u5520:	
  9322  13B2                     l3287:	
  9323  13B2  0A56               	incf	___fldiv@bexp,w
  9324  13B3  1D03               	btfss	3,2
  9325  13B4  2BB6               	goto	u5531
  9326  13B5  2BB7               	goto	u5530
  9327  13B6                     u5531:	
  9328  13B6  2BBF               	goto	l3291
  9329  13B7                     u5530:	
  9330  13B7                     l3289:	
  9331  13B7  3000               	movlw	0
  9332  13B8  00C5               	movwf	___fldiv@b+3
  9333  13B9  3000               	movlw	0
  9334  13BA  00C4               	movwf	___fldiv@b+2
  9335  13BB  3000               	movlw	0
  9336  13BC  00C3               	movwf	___fldiv@b+1
  9337  13BD  3000               	movlw	0
  9338  13BE  00C2               	movwf	___fldiv@b
  9339  13BF                     l3291:	
  9340  13BF  17C4               	bsf	___fldiv@b+2,7
  9341  13C0                     l3293:	
  9342  13C0  01C5               	clrf	___fldiv@b+3
  9343  13C1  2BCA               	goto	l3297
  9344  13C2                     l3295:	
  9345  13C2  3000               	movlw	0
  9346  13C3  00C5               	movwf	___fldiv@b+3
  9347  13C4  3000               	movlw	0
  9348  13C5  00C4               	movwf	___fldiv@b+2
  9349  13C6  3000               	movlw	0
  9350  13C7  00C3               	movwf	___fldiv@b+1
  9351  13C8  3000               	movlw	0
  9352  13C9  00C2               	movwf	___fldiv@b
  9353  13CA                     l3297:	
  9354  13CA  0841               	movf	___fldiv@a+3,w
  9355  13CB  3980               	andlw	128
  9356  13CC  00C6               	movwf	??___fldiv
  9357  13CD  0846               	movf	??___fldiv,w
  9358  13CE  06CF               	xorwf	___fldiv@sign,f
  9359  13CF                     l3299:	
  9360  13CF  0841               	movf	___fldiv@a+3,w
  9361  13D0  00C6               	movwf	??___fldiv
  9362  13D1  0746               	addwf	??___fldiv,w
  9363  13D2  00C7               	movwf	??___fldiv+1
  9364  13D3  0847               	movf	??___fldiv+1,w
  9365  13D4  00D7               	movwf	___fldiv@aexp
  9366  13D5                     l3301:	
  9367  13D5  1FC0               	btfss	___fldiv@a+2,7
  9368  13D6  2BD8               	goto	u5541
  9369  13D7  2BD9               	goto	u5540
  9370  13D8                     u5541:	
  9371  13D8  2BDA               	goto	l3305
  9372  13D9                     u5540:	
  9373  13D9                     l3303:	
  9374  13D9  1457               	bsf	___fldiv@aexp,0
  9375  13DA                     l3305:	
  9376  13DA  0857               	movf	___fldiv@aexp,w
  9377  13DB  1903               	btfsc	3,2
  9378  13DC  2BDE               	goto	u5551
  9379  13DD  2BDF               	goto	u5550
  9380  13DE                     u5551:	
  9381  13DE  2BEF               	goto	l3315
  9382  13DF                     u5550:	
  9383  13DF                     l3307:	
  9384  13DF  0A57               	incf	___fldiv@aexp,w
  9385  13E0  1D03               	btfss	3,2
  9386  13E1  2BE3               	goto	u5561
  9387  13E2  2BE4               	goto	u5560
  9388  13E3                     u5561:	
  9389  13E3  2BEC               	goto	l3311
  9390  13E4                     u5560:	
  9391  13E4                     l3309:	
  9392  13E4  3000               	movlw	0
  9393  13E5  00C1               	movwf	___fldiv@a+3
  9394  13E6  3000               	movlw	0
  9395  13E7  00C0               	movwf	___fldiv@a+2
  9396  13E8  3000               	movlw	0
  9397  13E9  00BF               	movwf	___fldiv@a+1
  9398  13EA  3000               	movlw	0
  9399  13EB  00BE               	movwf	___fldiv@a
  9400  13EC                     l3311:	
  9401  13EC  17C0               	bsf	___fldiv@a+2,7
  9402  13ED                     l3313:	
  9403  13ED  01C1               	clrf	___fldiv@a+3
  9404  13EE  2BF7               	goto	l712
  9405  13EF                     l3315:	
  9406  13EF  3000               	movlw	0
  9407  13F0  00C1               	movwf	___fldiv@a+3
  9408  13F1  3000               	movlw	0
  9409  13F2  00C0               	movwf	___fldiv@a+2
  9410  13F3  3000               	movlw	0
  9411  13F4  00BF               	movwf	___fldiv@a+1
  9412  13F5  3000               	movlw	0
  9413  13F6  00BE               	movwf	___fldiv@a
  9414  13F7                     l712:	
  9415  13F7  0841               	movf	___fldiv@a+3,w
  9416  13F8  0440               	iorwf	___fldiv@a+2,w
  9417  13F9  043F               	iorwf	___fldiv@a+1,w
  9418  13FA  043E               	iorwf	___fldiv@a,w
  9419  13FB  1D03               	skipz
  9420  13FC  2BFE               	goto	u5571
  9421  13FD  2BFF               	goto	u5570
  9422  13FE                     u5571:	
  9423  13FE  2C18               	goto	l3325
  9424  13FF                     u5570:	
  9425  13FF                     l3317:	
  9426  13FF  3000               	movlw	0
  9427  1400  00C5               	movwf	___fldiv@b+3
  9428  1401  3000               	movlw	0
  9429  1402  00C4               	movwf	___fldiv@b+2
  9430  1403  3000               	movlw	0
  9431  1404  00C3               	movwf	___fldiv@b+1
  9432  1405  3000               	movlw	0
  9433  1406  00C2               	movwf	___fldiv@b
  9434  1407  3080               	movlw	128
  9435  1408  04C4               	iorwf	___fldiv@b+2,f
  9436  1409  307F               	movlw	127
  9437  140A  04C5               	iorwf	___fldiv@b+3,f
  9438  140B                     l3319:	
  9439  140B  084F               	movf	___fldiv@sign,w
  9440  140C  00C6               	movwf	??___fldiv
  9441  140D  0846               	movf	??___fldiv,w
  9442  140E  04C5               	iorwf	___fldiv@b+3,f
  9443  140F                     l3321:	
  9444  140F  0845               	movf	___fldiv@b+3,w
  9445  1410  00C1               	movwf	?___fldiv+3
  9446  1411  0844               	movf	___fldiv@b+2,w
  9447  1412  00C0               	movwf	?___fldiv+2
  9448  1413  0843               	movf	___fldiv@b+1,w
  9449  1414  00BF               	movwf	?___fldiv+1
  9450  1415  0842               	movf	___fldiv@b,w
  9451  1416  00BE               	movwf	?___fldiv
  9452  1417  2D77               	goto	l714
  9453  1418                     l3325:	
  9454  1418  0856               	movf	___fldiv@bexp,w
  9455  1419  1D03               	btfss	3,2
  9456  141A  2C1C               	goto	u5581
  9457  141B  2C1D               	goto	u5580
  9458  141C                     u5581:	
  9459  141C  2C26               	goto	l3331
  9460  141D                     u5580:	
  9461  141D                     l3327:	
  9462  141D  3000               	movlw	0
  9463  141E  00C1               	movwf	?___fldiv+3
  9464  141F  3000               	movlw	0
  9465  1420  00C0               	movwf	?___fldiv+2
  9466  1421  3000               	movlw	0
  9467  1422  00BF               	movwf	?___fldiv+1
  9468  1423  3000               	movlw	0
  9469  1424  00BE               	movwf	?___fldiv
  9470  1425  2D77               	goto	l714
  9471  1426                     l3331:	
  9472  1426  0856               	movf	___fldiv@bexp,w
  9473  1427  00C6               	movwf	??___fldiv
  9474  1428  01C7               	clrf	??___fldiv+1
  9475  1429  0847               	movf	??___fldiv+1,w
  9476  142A  00C9               	movwf	??___fldiv+3
  9477  142B  0857               	movf	___fldiv@aexp,w
  9478  142C  0246               	subwf	??___fldiv,w
  9479  142D  00C8               	movwf	??___fldiv+2
  9480  142E  1C03               	skipc
  9481  142F  03C9               	decf	??___fldiv+3,f
  9482  1430  0848               	movf	??___fldiv+2,w
  9483  1431  3E7F               	addlw	127
  9484  1432  00D0               	movwf	___fldiv@new_exp
  9485  1433  0849               	movf	??___fldiv+3,w
  9486  1434  1803               	skipnc
  9487  1435  3E01               	addlw	1
  9488  1436  3E00               	addlw	0
  9489  1437  00D1               	movwf	___fldiv@new_exp+1
  9490  1438                     l3333:	
  9491  1438  0845               	movf	___fldiv@b+3,w
  9492  1439  00CE               	movwf	___fldiv@rem+3
  9493  143A  0844               	movf	___fldiv@b+2,w
  9494  143B  00CD               	movwf	___fldiv@rem+2
  9495  143C  0843               	movf	___fldiv@b+1,w
  9496  143D  00CC               	movwf	___fldiv@rem+1
  9497  143E  0842               	movf	___fldiv@b,w
  9498  143F  00CB               	movwf	___fldiv@rem
  9499  1440                     l3335:	
  9500  1440  3000               	movlw	0
  9501  1441  00C5               	movwf	___fldiv@b+3
  9502  1442  3000               	movlw	0
  9503  1443  00C4               	movwf	___fldiv@b+2
  9504  1444  3000               	movlw	0
  9505  1445  00C3               	movwf	___fldiv@b+1
  9506  1446  3000               	movlw	0
  9507  1447  00C2               	movwf	___fldiv@b
  9508  1448                     l3337:	
  9509  1448  3000               	movlw	0
  9510  1449  00D5               	movwf	___fldiv@grs+3
  9511  144A  3000               	movlw	0
  9512  144B  00D4               	movwf	___fldiv@grs+2
  9513  144C  3000               	movlw	0
  9514  144D  00D3               	movwf	___fldiv@grs+1
  9515  144E  3000               	movlw	0
  9516  144F  00D2               	movwf	___fldiv@grs
  9517  1450                     l3339:	
  9518  1450  01D7               	clrf	___fldiv@aexp
  9519  1451  2C9C               	goto	l3359
  9520  1452                     l3341:	
  9521  1452  0857               	movf	___fldiv@aexp,w
  9522  1453  1903               	btfsc	3,2
  9523  1454  2C56               	goto	u5591
  9524  1455  2C57               	goto	u5590
  9525  1456                     u5591:	
  9526  1456  2C77               	goto	l3351
  9527  1457                     u5590:	
  9528  1457                     l3343:	
  9529  1457  3001               	movlw	1
  9530  1458  00C6               	movwf	??___fldiv
  9531  1459                     u5605:	
  9532  1459  1003               	clrc
  9533  145A  0DCB               	rlf	___fldiv@rem,f
  9534  145B  0DCC               	rlf	___fldiv@rem+1,f
  9535  145C  0DCD               	rlf	___fldiv@rem+2,f
  9536  145D  0DCE               	rlf	___fldiv@rem+3,f
  9537  145E  0BC6               	decfsz	??___fldiv,f
  9538  145F  2C59               	goto	u5605
  9539  1460  3001               	movlw	1
  9540  1461  00C6               	movwf	??___fldiv
  9541  1462                     u5615:	
  9542  1462  1003               	clrc
  9543  1463  0DC2               	rlf	___fldiv@b,f
  9544  1464  0DC3               	rlf	___fldiv@b+1,f
  9545  1465  0DC4               	rlf	___fldiv@b+2,f
  9546  1466  0DC5               	rlf	___fldiv@b+3,f
  9547  1467  0BC6               	decfsz	??___fldiv,f
  9548  1468  2C62               	goto	u5615
  9549  1469                     l3345:	
  9550  1469  1FD5               	btfss	___fldiv@grs+3,7
  9551  146A  2C6C               	goto	u5621
  9552  146B  2C6D               	goto	u5620
  9553  146C                     u5621:	
  9554  146C  2C6E               	goto	l3349
  9555  146D                     u5620:	
  9556  146D                     l3347:	
  9557  146D  1442               	bsf	___fldiv@b,0
  9558  146E                     l3349:	
  9559  146E  3001               	movlw	1
  9560  146F  00C6               	movwf	??___fldiv
  9561  1470                     u5635:	
  9562  1470  1003               	clrc
  9563  1471  0DD2               	rlf	___fldiv@grs,f
  9564  1472  0DD3               	rlf	___fldiv@grs+1,f
  9565  1473  0DD4               	rlf	___fldiv@grs+2,f
  9566  1474  0DD5               	rlf	___fldiv@grs+3,f
  9567  1475  0BC6               	decfsz	??___fldiv,f
  9568  1476  2C70               	goto	u5635
  9569  1477                     l3351:	
  9570  1477  0841               	movf	___fldiv@a+3,w
  9571  1478  024E               	subwf	___fldiv@rem+3,w
  9572  1479  1D03               	skipz
  9573  147A  2C85               	goto	u5645
  9574  147B  0840               	movf	___fldiv@a+2,w
  9575  147C  024D               	subwf	___fldiv@rem+2,w
  9576  147D  1D03               	skipz
  9577  147E  2C85               	goto	u5645
  9578  147F  083F               	movf	___fldiv@a+1,w
  9579  1480  024C               	subwf	___fldiv@rem+1,w
  9580  1481  1D03               	skipz
  9581  1482  2C85               	goto	u5645
  9582  1483  083E               	movf	___fldiv@a,w
  9583  1484  024B               	subwf	___fldiv@rem,w
  9584  1485                     u5645:	
  9585  1485  1C03               	skipc
  9586  1486  2C88               	goto	u5641
  9587  1487  2C89               	goto	u5640
  9588  1488                     u5641:	
  9589  1488  2C98               	goto	l3357
  9590  1489                     u5640:	
  9591  1489                     l3353:	
  9592  1489  1755               	bsf	___fldiv@grs+3,6
  9593  148A                     l3355:	
  9594  148A  083E               	movf	___fldiv@a,w
  9595  148B  02CB               	subwf	___fldiv@rem,f
  9596  148C  083F               	movf	___fldiv@a+1,w
  9597  148D  1C03               	skipc
  9598  148E  0F3F               	incfsz	___fldiv@a+1,w
  9599  148F  02CC               	subwf	___fldiv@rem+1,f
  9600  1490  0840               	movf	___fldiv@a+2,w
  9601  1491  1C03               	skipc
  9602  1492  0F40               	incfsz	___fldiv@a+2,w
  9603  1493  02CD               	subwf	___fldiv@rem+2,f
  9604  1494  0841               	movf	___fldiv@a+3,w
  9605  1495  1C03               	skipc
  9606  1496  0F41               	incfsz	___fldiv@a+3,w
  9607  1497  02CE               	subwf	___fldiv@rem+3,f
  9608  1498                     l3357:	
  9609  1498  3001               	movlw	1
  9610  1499  00C6               	movwf	??___fldiv
  9611  149A  0846               	movf	??___fldiv,w
  9612  149B  07D7               	addwf	___fldiv@aexp,f
  9613  149C                     l3359:	
  9614  149C  301A               	movlw	26
  9615  149D  0257               	subwf	___fldiv@aexp,w
  9616  149E  1C03               	skipc
  9617  149F  2CA1               	goto	u5651
  9618  14A0  2CA2               	goto	u5650
  9619  14A1                     u5651:	
  9620  14A1  2C52               	goto	l3341
  9621  14A2                     u5650:	
  9622  14A2                     l3361:	
  9623  14A2  084E               	movf	___fldiv@rem+3,w
  9624  14A3  044D               	iorwf	___fldiv@rem+2,w
  9625  14A4  044C               	iorwf	___fldiv@rem+1,w
  9626  14A5  044B               	iorwf	___fldiv@rem,w
  9627  14A6  1903               	skipnz
  9628  14A7  2CA9               	goto	u5661
  9629  14A8  2CAA               	goto	u5660
  9630  14A9                     u5661:	
  9631  14A9  2CC9               	goto	l3375
  9632  14AA                     u5660:	
  9633  14AA                     l3363:	
  9634  14AA  1452               	bsf	___fldiv@grs,0
  9635  14AB  2CC9               	goto	l3375
  9636  14AC                     l3365:	
  9637  14AC  3001               	movlw	1
  9638  14AD  00C6               	movwf	??___fldiv
  9639  14AE                     u5675:	
  9640  14AE  1003               	clrc
  9641  14AF  0DC2               	rlf	___fldiv@b,f
  9642  14B0  0DC3               	rlf	___fldiv@b+1,f
  9643  14B1  0DC4               	rlf	___fldiv@b+2,f
  9644  14B2  0DC5               	rlf	___fldiv@b+3,f
  9645  14B3  0BC6               	decfsz	??___fldiv,f
  9646  14B4  2CAE               	goto	u5675
  9647  14B5                     l3367:	
  9648  14B5  1FD5               	btfss	___fldiv@grs+3,7
  9649  14B6  2CB8               	goto	u5681
  9650  14B7  2CB9               	goto	u5680
  9651  14B8                     u5681:	
  9652  14B8  2CBA               	goto	l3371
  9653  14B9                     u5680:	
  9654  14B9                     l3369:	
  9655  14B9  1442               	bsf	___fldiv@b,0
  9656  14BA                     l3371:	
  9657  14BA  3001               	movlw	1
  9658  14BB  00C6               	movwf	??___fldiv
  9659  14BC                     u5695:	
  9660  14BC  1003               	clrc
  9661  14BD  0DD2               	rlf	___fldiv@grs,f
  9662  14BE  0DD3               	rlf	___fldiv@grs+1,f
  9663  14BF  0DD4               	rlf	___fldiv@grs+2,f
  9664  14C0  0DD5               	rlf	___fldiv@grs+3,f
  9665  14C1  0BC6               	decfsz	??___fldiv,f
  9666  14C2  2CBC               	goto	u5695
  9667  14C3                     l3373:	
  9668  14C3  30FF               	movlw	255
  9669  14C4  07D0               	addwf	___fldiv@new_exp,f
  9670  14C5  1803               	skipnc
  9671  14C6  0AD1               	incf	___fldiv@new_exp+1,f
  9672  14C7  30FF               	movlw	255
  9673  14C8  07D1               	addwf	___fldiv@new_exp+1,f
  9674  14C9                     l3375:	
  9675  14C9  1FC4               	btfss	___fldiv@b+2,7
  9676  14CA  2CCC               	goto	u5701
  9677  14CB  2CCD               	goto	u5700
  9678  14CC                     u5701:	
  9679  14CC  2CAC               	goto	l3365
  9680  14CD                     u5700:	
  9681  14CD                     l3377:	
  9682  14CD  01D7               	clrf	___fldiv@aexp
  9683  14CE                     l3379:	
  9684  14CE  1FD5               	btfss	___fldiv@grs+3,7
  9685  14CF  2CD1               	goto	u5711
  9686  14D0  2CD2               	goto	u5710
  9687  14D1                     u5711:	
  9688  14D1  2CEE               	goto	l3387
  9689  14D2                     u5710:	
  9690  14D2                     l3381:	
  9691  14D2  30FF               	movlw	255
  9692  14D3  0552               	andwf	___fldiv@grs,w
  9693  14D4  00C6               	movwf	??___fldiv
  9694  14D5  30FF               	movlw	255
  9695  14D6  0553               	andwf	___fldiv@grs+1,w
  9696  14D7  00C7               	movwf	??___fldiv+1
  9697  14D8  30FF               	movlw	255
  9698  14D9  0554               	andwf	___fldiv@grs+2,w
  9699  14DA  00C8               	movwf	??___fldiv+2
  9700  14DB  307F               	movlw	127
  9701  14DC  0555               	andwf	___fldiv@grs+3,w
  9702  14DD  00C9               	movwf	??___fldiv+3
  9703  14DE  0849               	movf	??___fldiv+3,w
  9704  14DF  0448               	iorwf	??___fldiv+2,w
  9705  14E0  0447               	iorwf	??___fldiv+1,w
  9706  14E1  0446               	iorwf	??___fldiv,w
  9707  14E2  1903               	skipnz
  9708  14E3  2CE5               	goto	u5721
  9709  14E4  2CE6               	goto	u5720
  9710  14E5                     u5721:	
  9711  14E5  2CE9               	goto	l728
  9712  14E6                     u5720:	
  9713  14E6                     l3383:	
  9714  14E6  01D7               	clrf	___fldiv@aexp
  9715  14E7  0AD7               	incf	___fldiv@aexp,f
  9716  14E8  2CEE               	goto	l3387
  9717  14E9                     l728:	
  9718  14E9  1C42               	btfss	___fldiv@b,0
  9719  14EA  2CEC               	goto	u5731
  9720  14EB  2CED               	goto	u5730
  9721  14EC                     u5731:	
  9722  14EC  2CEE               	goto	l3387
  9723  14ED                     u5730:	
  9724  14ED  2CE6               	goto	l3383
  9725  14EE                     l3387:	
  9726  14EE  0857               	movf	___fldiv@aexp,w
  9727  14EF  1903               	btfsc	3,2
  9728  14F0  2CF2               	goto	u5741
  9729  14F1  2CF3               	goto	u5740
  9730  14F2                     u5741:	
  9731  14F2  2D24               	goto	l3397
  9732  14F3                     u5740:	
  9733  14F3                     l3389:	
  9734  14F3  3001               	movlw	1
  9735  14F4  07C2               	addwf	___fldiv@b,f
  9736  14F5  3000               	movlw	0
  9737  14F6  1803               	skipnc
  9738  14F7  3001               	movlw	1
  9739  14F8  07C3               	addwf	___fldiv@b+1,f
  9740  14F9  3000               	movlw	0
  9741  14FA  1803               	skipnc
  9742  14FB  3001               	movlw	1
  9743  14FC  07C4               	addwf	___fldiv@b+2,f
  9744  14FD  3000               	movlw	0
  9745  14FE  1803               	skipnc
  9746  14FF  3001               	movlw	1
  9747  1500  07C5               	addwf	___fldiv@b+3,f
  9748  1501                     l3391:	
  9749  1501  1C45               	btfss	___fldiv@b+3,0
  9750  1502  2D04               	goto	u5751
  9751  1503  2D05               	goto	u5750
  9752  1504                     u5751:	
  9753  1504  2D24               	goto	l3397
  9754  1505                     u5750:	
  9755  1505                     l3393:	
  9756  1505  0842               	movf	___fldiv@b,w
  9757  1506  00C6               	movwf	??___fldiv
  9758  1507  0843               	movf	___fldiv@b+1,w
  9759  1508  00C7               	movwf	??___fldiv+1
  9760  1509  0844               	movf	___fldiv@b+2,w
  9761  150A  00C8               	movwf	??___fldiv+2
  9762  150B  0845               	movf	___fldiv@b+3,w
  9763  150C  00C9               	movwf	??___fldiv+3
  9764  150D  3001               	movlw	1
  9765  150E  00CA               	movwf	??___fldiv+4
  9766  150F                     u5765:	
  9767  150F  0D49               	rlf	??___fldiv+3,w
  9768  1510  0CC9               	rrf	??___fldiv+3,f
  9769  1511  0CC8               	rrf	??___fldiv+2,f
  9770  1512  0CC7               	rrf	??___fldiv+1,f
  9771  1513  0CC6               	rrf	??___fldiv,f
  9772  1514                     u5760:	
  9773  1514  0BCA               	decfsz	??___fldiv+4,f
  9774  1515  2D0F               	goto	u5765
  9775  1516  0849               	movf	??___fldiv+3,w
  9776  1517  00C5               	movwf	___fldiv@b+3
  9777  1518  0848               	movf	??___fldiv+2,w
  9778  1519  00C4               	movwf	___fldiv@b+2
  9779  151A  0847               	movf	??___fldiv+1,w
  9780  151B  00C3               	movwf	___fldiv@b+1
  9781  151C  0846               	movf	??___fldiv,w
  9782  151D  00C2               	movwf	___fldiv@b
  9783  151E                     l3395:	
  9784  151E  3001               	movlw	1
  9785  151F  07D0               	addwf	___fldiv@new_exp,f
  9786  1520  1803               	skipnc
  9787  1521  0AD1               	incf	___fldiv@new_exp+1,f
  9788  1522  3000               	movlw	0
  9789  1523  07D1               	addwf	___fldiv@new_exp+1,f
  9790  1524                     l3397:	
  9791  1524  0851               	movf	___fldiv@new_exp+1,w
  9792  1525  3A80               	xorlw	128
  9793  1526  00FF               	movwf	btemp+1
  9794  1527  3080               	movlw	128
  9795  1528  027F               	subwf	btemp+1,w
  9796  1529  1D03               	skipz
  9797  152A  2D2D               	goto	u5775
  9798  152B  30FF               	movlw	255
  9799  152C  0250               	subwf	___fldiv@new_exp,w
  9800  152D                     u5775:	
  9801  152D  1C03               	skipc
  9802  152E  2D30               	goto	u5771
  9803  152F  2D31               	goto	u5770
  9804  1530                     u5771:	
  9805  1530  2D3F               	goto	l3401
  9806  1531                     u5770:	
  9807  1531                     l3399:	
  9808  1531  30FF               	movlw	255
  9809  1532  1283               	bcf	3,5	;RP0=0, select bank0
  9810  1533  1303               	bcf	3,6	;RP1=0, select bank0
  9811  1534  00D0               	movwf	___fldiv@new_exp
  9812  1535  3000               	movlw	0
  9813  1536  00D1               	movwf	___fldiv@new_exp+1
  9814  1537  3000               	movlw	0
  9815  1538  00C5               	movwf	___fldiv@b+3
  9816  1539  3000               	movlw	0
  9817  153A  00C4               	movwf	___fldiv@b+2
  9818  153B  3000               	movlw	0
  9819  153C  00C3               	movwf	___fldiv@b+1
  9820  153D  3000               	movlw	0
  9821  153E  00C2               	movwf	___fldiv@b
  9822  153F                     l3401:	
  9823  153F  1283               	bcf	3,5	;RP0=0, select bank0
  9824  1540  1303               	bcf	3,6	;RP1=0, select bank0
  9825  1541  0851               	movf	___fldiv@new_exp+1,w
  9826  1542  3A80               	xorlw	128
  9827  1543  00FF               	movwf	btemp+1
  9828  1544  3080               	movlw	128
  9829  1545  027F               	subwf	btemp+1,w
  9830  1546  1D03               	skipz
  9831  1547  2D4A               	goto	u5785
  9832  1548  3001               	movlw	1
  9833  1549  0250               	subwf	___fldiv@new_exp,w
  9834  154A                     u5785:	
  9835  154A  1803               	skipnc
  9836  154B  2D4D               	goto	u5781
  9837  154C  2D4E               	goto	u5780
  9838  154D                     u5781:	
  9839  154D  2D5B               	goto	l734
  9840  154E                     u5780:	
  9841  154E                     l3403:	
  9842  154E  1283               	bcf	3,5	;RP0=0, select bank0
  9843  154F  1303               	bcf	3,6	;RP1=0, select bank0
  9844  1550  01D0               	clrf	___fldiv@new_exp
  9845  1551  01D1               	clrf	___fldiv@new_exp+1
  9846  1552                     l3405:	
  9847  1552  3000               	movlw	0
  9848  1553  00C5               	movwf	___fldiv@b+3
  9849  1554  3000               	movlw	0
  9850  1555  00C4               	movwf	___fldiv@b+2
  9851  1556  3000               	movlw	0
  9852  1557  00C3               	movwf	___fldiv@b+1
  9853  1558  3000               	movlw	0
  9854  1559  00C2               	movwf	___fldiv@b
  9855  155A                     l3407:	
  9856  155A  01CF               	clrf	___fldiv@sign
  9857  155B                     l734:	
  9858  155B  1283               	bcf	3,5	;RP0=0, select bank0
  9859  155C  1303               	bcf	3,6	;RP1=0, select bank0
  9860  155D  0850               	movf	___fldiv@new_exp,w
  9861  155E  00C6               	movwf	??___fldiv
  9862  155F  0846               	movf	??___fldiv,w
  9863  1560  00D6               	movwf	___fldiv@bexp
  9864  1561                     l3409:	
  9865  1561  1C56               	btfss	___fldiv@bexp,0
  9866  1562  2D64               	goto	u5791
  9867  1563  2D65               	goto	u5790
  9868  1564                     u5791:	
  9869  1564  2D67               	goto	l3413
  9870  1565                     u5790:	
  9871  1565                     l3411:	
  9872  1565  17C4               	bsf	___fldiv@b+2,7
  9873  1566  2D6B               	goto	l736
  9874  1567                     l3413:	
  9875  1567  307F               	movlw	127
  9876  1568  00C6               	movwf	??___fldiv
  9877  1569  0846               	movf	??___fldiv,w
  9878  156A  05C4               	andwf	___fldiv@b+2,f
  9879  156B                     l736:	
  9880  156B  0856               	movf	___fldiv@bexp,w
  9881  156C  00C6               	movwf	??___fldiv
  9882  156D  1003               	clrc
  9883  156E  0C46               	rrf	??___fldiv,w
  9884  156F  00C7               	movwf	??___fldiv+1
  9885  1570  0847               	movf	??___fldiv+1,w
  9886  1571  00C5               	movwf	___fldiv@b+3
  9887  1572  084F               	movf	___fldiv@sign,w
  9888  1573  00C6               	movwf	??___fldiv
  9889  1574  0846               	movf	??___fldiv,w
  9890  1575  04C5               	iorwf	___fldiv@b+3,f
  9891  1576  2C0F               	goto	l3321
  9892  1577                     l714:	
  9893  1577  0008               	return
  9894  1578                     __end_of___fldiv:	
  9895                           
  9896                           	psect	text26
  9897  1C33                     __ptext26:	
  9898 ;; *************** function _Lcd_Start *****************
  9899 ;; Defined at:
  9900 ;;		line 73 in file "LCD_driver.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0, pclath, cstack
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9914 ;;      Params:         0       0       0       0       0
  9915 ;;      Locals:         0       0       0       0       0
  9916 ;;      Temps:          0       0       0       0       0
  9917 ;;      Totals:         0       0       0       0       0
  9918 ;;Total ram usage:        0 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; Hardware stack levels required when called:    2
  9921 ;; This function calls:
  9922 ;;		_Lcd_Cmd
  9923 ;;		_Lcd_SetBit
  9924 ;; This function is called by:
  9925 ;;		_main
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           
  9930                           ;psect for function _Lcd_Start
  9931  1C33                     _Lcd_Start:	
  9932  1C33                     l3439:	
  9933                           ;incstack = 0
  9934                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  9935                           
  9936                           
  9937                           ;LCD_driver.c: 75:   Lcd_SetBit(0x00);
  9938  1C33  3000               	movlw	0
  9939  1C34  160A  158A  238E  160A  158A  	fcall	_Lcd_SetBit
  9940                           
  9941                           ;LCD_driver.c: 76:   Lcd_Cmd(0x03);
  9942  1C39  3003               	movlw	3
  9943  1C3A  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9944                           
  9945                           ;LCD_driver.c: 77:   Lcd_Cmd(0x03);
  9946  1C3F  3003               	movlw	3
  9947  1C40  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9948                           
  9949                           ;LCD_driver.c: 78:   Lcd_Cmd(0x02);
  9950  1C45  3002               	movlw	2
  9951  1C46  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9952                           
  9953                           ;LCD_driver.c: 79:   Lcd_Cmd(0x02);
  9954  1C4B  3002               	movlw	2
  9955  1C4C  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9956                           
  9957                           ;LCD_driver.c: 80:   Lcd_Cmd(0x08);
  9958  1C51  3008               	movlw	8
  9959  1C52  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9960                           
  9961                           ;LCD_driver.c: 81:   Lcd_Cmd(0x00);
  9962  1C57  3000               	movlw	0
  9963  1C58  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9964                           
  9965                           ;LCD_driver.c: 82:   Lcd_Cmd(0x0C);
  9966  1C5D  300C               	movlw	12
  9967  1C5E  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9968                           
  9969                           ;LCD_driver.c: 83:   Lcd_Cmd(0x00);
  9970  1C63  3000               	movlw	0
  9971  1C64  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9972                           
  9973                           ;LCD_driver.c: 84:   Lcd_Cmd(0x06);
  9974  1C69  3006               	movlw	6
  9975  1C6A  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
  9976  1C6F                     l147:	
  9977  1C6F  0008               	return
  9978  1C70                     __end_of_Lcd_Start:	
  9979                           
  9980                           	psect	text27
  9981  1D44                     __ptext27:	
  9982 ;; *************** function _Lcd_Set_Cursor *****************
  9983 ;; Defined at:
  9984 ;;		line 53 in file "LCD_driver.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  row             1    wreg     unsigned char 
  9987 ;;  column          1    2[COMMON] unsigned char 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  row             1    5[COMMON] unsigned char 
  9990 ;;  temp            1    8[COMMON] unsigned char 
  9991 ;;  y               1    7[COMMON] unsigned char 
  9992 ;;  z               1    6[COMMON] unsigned char 
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  1    wreg      void 
  9995 ;; Registers used:
  9996 ;;		wreg, status,2, status,0, pclath, cstack
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10002 ;;      Params:         1       0       0       0       0
 10003 ;;      Locals:         4       0       0       0       0
 10004 ;;      Temps:          2       0       0       0       0
 10005 ;;      Totals:         7       0       0       0       0
 10006 ;;Total ram usage:        7 bytes
 10007 ;; Hardware stack levels used:    1
 10008 ;; Hardware stack levels required when called:    2
 10009 ;; This function calls:
 10010 ;;		_Lcd_Cmd
 10011 ;; This function is called by:
 10012 ;;		_main
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           
 10017                           ;psect for function _Lcd_Set_Cursor
 10018  1D44                     _Lcd_Set_Cursor:	
 10019                           
 10020                           ;incstack = 0
 10021                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10022                           ;Lcd_Set_Cursor@row stored from wreg
 10023  1D44  00F5               	movwf	Lcd_Set_Cursor@row
 10024  1D45                     l3443:	
 10025                           
 10026                           ;LCD_driver.c: 54:     char temp,z,y;;LCD_driver.c: 55:     if(row == 1)
 10027  1D45  0375               	decf	Lcd_Set_Cursor@row,w
 10028  1D46  1D03               	btfss	3,2
 10029  1D47  2D49               	goto	u5801
 10030  1D48  2D4A               	goto	u5800
 10031  1D49                     u5801:	
 10032  1D49  2D6D               	goto	l3453
 10033  1D4A                     u5800:	
 10034  1D4A                     l3445:	
 10035                           
 10036                           ;LCD_driver.c: 56:     {;LCD_driver.c: 57:         temp = 0x80 + column - 1;
 10037  1D4A  0872               	movf	Lcd_Set_Cursor@column,w
 10038  1D4B  3E7F               	addlw	127
 10039  1D4C  00F3               	movwf	??_Lcd_Set_Cursor
 10040  1D4D  0873               	movf	??_Lcd_Set_Cursor,w
 10041  1D4E  00F8               	movwf	Lcd_Set_Cursor@temp
 10042                           
 10043                           ;LCD_driver.c: 58:         z = temp>>4;
 10044  1D4F  0878               	movf	Lcd_Set_Cursor@temp,w
 10045  1D50  00F3               	movwf	??_Lcd_Set_Cursor
 10046  1D51  3004               	movlw	4
 10047  1D52                     u5815:	
 10048  1D52  1003               	clrc
 10049  1D53  0CF3               	rrf	??_Lcd_Set_Cursor,f
 10050  1D54  3EFF               	addlw	-1
 10051  1D55  1D03               	skipz
 10052  1D56  2D52               	goto	u5815
 10053  1D57  0873               	movf	??_Lcd_Set_Cursor,w
 10054  1D58  00F4               	movwf	??_Lcd_Set_Cursor+1
 10055  1D59  0874               	movf	??_Lcd_Set_Cursor+1,w
 10056  1D5A  00F6               	movwf	Lcd_Set_Cursor@z
 10057  1D5B                     l3447:	
 10058                           
 10059                           ;LCD_driver.c: 59:         y = temp & 0x0F;
 10060  1D5B  0878               	movf	Lcd_Set_Cursor@temp,w
 10061  1D5C  390F               	andlw	15
 10062  1D5D  00F3               	movwf	??_Lcd_Set_Cursor
 10063  1D5E  0873               	movf	??_Lcd_Set_Cursor,w
 10064  1D5F  00F7               	movwf	Lcd_Set_Cursor@y
 10065  1D60                     l3449:	
 10066                           
 10067                           ;LCD_driver.c: 60:         Lcd_Cmd(z);
 10068  1D60  0876               	movf	Lcd_Set_Cursor@z,w
 10069  1D61  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
 10070  1D66                     l3451:	
 10071                           
 10072                           ;LCD_driver.c: 61:         Lcd_Cmd(y);
 10073  1D66  0877               	movf	Lcd_Set_Cursor@y,w
 10074  1D67  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
 10075                           
 10076                           ;LCD_driver.c: 62:     }
 10077  1D6C  2D95               	goto	l144
 10078  1D6D                     l3453:	
 10079  1D6D  3002               	movlw	2
 10080  1D6E  0675               	xorwf	Lcd_Set_Cursor@row,w
 10081  1D6F  1D03               	btfss	3,2
 10082  1D70  2D72               	goto	u5821
 10083  1D71  2D73               	goto	u5820
 10084  1D72                     u5821:	
 10085  1D72  2D95               	goto	l144
 10086  1D73                     u5820:	
 10087  1D73                     l3455:	
 10088                           
 10089                           ;LCD_driver.c: 64:     {;LCD_driver.c: 65:         temp = 0xC0 + column - 1;
 10090  1D73  0872               	movf	Lcd_Set_Cursor@column,w
 10091  1D74  3EBF               	addlw	191
 10092  1D75  00F3               	movwf	??_Lcd_Set_Cursor
 10093  1D76  0873               	movf	??_Lcd_Set_Cursor,w
 10094  1D77  00F8               	movwf	Lcd_Set_Cursor@temp
 10095                           
 10096                           ;LCD_driver.c: 66:         z = temp>>4;
 10097  1D78  0878               	movf	Lcd_Set_Cursor@temp,w
 10098  1D79  00F3               	movwf	??_Lcd_Set_Cursor
 10099  1D7A  3004               	movlw	4
 10100  1D7B                     u5835:	
 10101  1D7B  1003               	clrc
 10102  1D7C  0CF3               	rrf	??_Lcd_Set_Cursor,f
 10103  1D7D  3EFF               	addlw	-1
 10104  1D7E  1D03               	skipz
 10105  1D7F  2D7B               	goto	u5835
 10106  1D80  0873               	movf	??_Lcd_Set_Cursor,w
 10107  1D81  00F4               	movwf	??_Lcd_Set_Cursor+1
 10108  1D82  0874               	movf	??_Lcd_Set_Cursor+1,w
 10109  1D83  00F6               	movwf	Lcd_Set_Cursor@z
 10110  1D84                     l3457:	
 10111                           
 10112                           ;LCD_driver.c: 67:         y = temp & 0x0F;
 10113  1D84  0878               	movf	Lcd_Set_Cursor@temp,w
 10114  1D85  390F               	andlw	15
 10115  1D86  00F3               	movwf	??_Lcd_Set_Cursor
 10116  1D87  0873               	movf	??_Lcd_Set_Cursor,w
 10117  1D88  00F7               	movwf	Lcd_Set_Cursor@y
 10118  1D89                     l3459:	
 10119                           
 10120                           ;LCD_driver.c: 68:         Lcd_Cmd(z);
 10121  1D89  0876               	movf	Lcd_Set_Cursor@z,w
 10122  1D8A  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
 10123  1D8F                     l3461:	
 10124                           
 10125                           ;LCD_driver.c: 69:         Lcd_Cmd(y);
 10126  1D8F  0877               	movf	Lcd_Set_Cursor@y,w
 10127  1D90  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
 10128  1D95                     l144:	
 10129  1D95  0008               	return
 10130  1D96                     __end_of_Lcd_Set_Cursor:	
 10131                           
 10132                           	psect	text28
 10133  1C70                     __ptext28:	
 10134 ;; *************** function _Lcd_Print_String *****************
 10135 ;; Defined at:
 10136 ;;		line 100 in file "LCD_driver.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  a               2    5[COMMON] PTR unsigned char 
 10139 ;;		 -> char_data(9), STR_1(12), 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  i               2   10[COMMON] int 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      void 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10151 ;;      Params:         2       0       0       0       0
 10152 ;;      Locals:         2       0       0       0       0
 10153 ;;      Temps:          3       0       0       0       0
 10154 ;;      Totals:         7       0       0       0       0
 10155 ;;Total ram usage:        7 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    2
 10158 ;; This function calls:
 10159 ;;		_Lcd_Print_Char
 10160 ;; This function is called by:
 10161 ;;		_main
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           
 10166                           ;psect for function _Lcd_Print_String
 10167  1C70                     _Lcd_Print_String:	
 10168  1C70                     l3463:	
 10169                           ;incstack = 0
 10170                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10171                           
 10172                           
 10173                           ;LCD_driver.c: 101:     int i;;LCD_driver.c: 102:     for(i = 0; a[i] != '\0'; i++){
 10174  1C70  01FA               	clrf	Lcd_Print_String@i
 10175  1C71  01FB               	clrf	Lcd_Print_String@i+1
 10176  1C72  2C95               	goto	l3469
 10177  1C73                     l3465:	
 10178                           
 10179                           ;LCD_driver.c: 103:        Lcd_Print_Char(a[i]);
 10180  1C73  087A               	movf	Lcd_Print_String@i,w
 10181  1C74  0775               	addwf	Lcd_Print_String@a,w
 10182  1C75  00F8               	movwf	??_Lcd_Print_String+1
 10183  1C76  0876               	movf	Lcd_Print_String@a+1,w
 10184  1C77  00F7               	movwf	??_Lcd_Print_String
 10185  1C78  1803               	skipnc
 10186  1C79  0AF7               	incf	??_Lcd_Print_String,f
 10187  1C7A  1FFA               	btfss	Lcd_Print_String@i,7
 10188  1C7B  2C7D               	goto	u5840
 10189  1C7C  03F7               	decf	??_Lcd_Print_String,f
 10190  1C7D                     u5840:	
 10191  1C7D  0877               	movf	??_Lcd_Print_String,w
 10192  1C7E  00F9               	movwf	??_Lcd_Print_String+2
 10193  1C7F  0879               	movf	??_Lcd_Print_String+2,w
 10194  1C80  1283               	bcf	3,5	;RP0=0, select bank0
 10195  1C81  1303               	bcf	3,6	;RP1=0, select bank0
 10196  1C82  00FF               	movwf	btemp+1
 10197  1C83  0878               	movf	??_Lcd_Print_String+1,w
 10198  1C84  0084               	movwf	4
 10199  1C85  160A  118A  2000  160A  158A  	fcall	stringtab
 10200  1C8A  120A  118A  2003  160A  158A  	fcall	_Lcd_Print_Char
 10201  1C8F                     l3467:	
 10202                           
 10203                           ;LCD_driver.c: 104:     }
 10204  1C8F  3001               	movlw	1
 10205  1C90  07FA               	addwf	Lcd_Print_String@i,f
 10206  1C91  1803               	skipnc
 10207  1C92  0AFB               	incf	Lcd_Print_String@i+1,f
 10208  1C93  3000               	movlw	0
 10209  1C94  07FB               	addwf	Lcd_Print_String@i+1,f
 10210  1C95                     l3469:	
 10211  1C95  087A               	movf	Lcd_Print_String@i,w
 10212  1C96  0775               	addwf	Lcd_Print_String@a,w
 10213  1C97  00F8               	movwf	??_Lcd_Print_String+1
 10214  1C98  0876               	movf	Lcd_Print_String@a+1,w
 10215  1C99  00F7               	movwf	??_Lcd_Print_String
 10216  1C9A  1803               	skipnc
 10217  1C9B  0AF7               	incf	??_Lcd_Print_String,f
 10218  1C9C  1FFA               	btfss	Lcd_Print_String@i,7
 10219  1C9D  2C9F               	goto	u5850
 10220  1C9E  03F7               	decf	??_Lcd_Print_String,f
 10221  1C9F                     u5850:	
 10222  1C9F  0877               	movf	??_Lcd_Print_String,w
 10223  1CA0  00F9               	movwf	??_Lcd_Print_String+2
 10224  1CA1  0879               	movf	??_Lcd_Print_String+2,w
 10225  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
 10226  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
 10227  1CA4  00FF               	movwf	btemp+1
 10228  1CA5  0878               	movf	??_Lcd_Print_String+1,w
 10229  1CA6  0084               	movwf	4
 10230  1CA7  160A  118A  2000  160A  158A  	fcall	stringtab
 10231  1CAC  3A00               	xorlw	0
 10232  1CAD  1D03               	skipz
 10233  1CAE  2CB0               	goto	u5861
 10234  1CAF  2CB1               	goto	u5860
 10235  1CB0                     u5861:	
 10236  1CB0  2C73               	goto	l3465
 10237  1CB1                     u5860:	
 10238  1CB1                     l156:	
 10239  1CB1  0008               	return
 10240  1CB2                     __end_of_Lcd_Print_String:	
 10241                           
 10242                           	psect	text29
 10243  0003                     __ptext29:	
 10244 ;; *************** function _Lcd_Print_Char *****************
 10245 ;; Defined at:
 10246 ;;		line 87 in file "LCD_driver.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  data            1    wreg     unsigned char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  data            1    4[COMMON] unsigned char 
 10251 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
 10252 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  1    wreg      void 
 10255 ;; Registers used:
 10256 ;;		wreg, status,2, status,0, pclath, cstack
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10262 ;;      Params:         0       0       0       0       0
 10263 ;;      Locals:         3       0       0       0       0
 10264 ;;      Temps:          1       0       0       0       0
 10265 ;;      Totals:         4       0       0       0       0
 10266 ;;Total ram usage:        4 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:    1
 10269 ;; This function calls:
 10270 ;;		_Lcd_SetBit
 10271 ;; This function is called by:
 10272 ;;		_Lcd_Print_String
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           
 10277                           ;psect for function _Lcd_Print_Char
 10278  0003                     _Lcd_Print_Char:	
 10279                           
 10280                           ;incstack = 0
 10281                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
 10282                           ;Lcd_Print_Char@data stored from wreg
 10283  0003  00F4               	movwf	Lcd_Print_Char@data
 10284  0004                     l3261:	
 10285                           
 10286                           ;LCD_driver.c: 88:    char Lower_Nibble,Upper_Nibble;;LCD_driver.c: 89:    Lower_Nibble 
      +                          = data&0x0F;
 10287  0004  0874               	movf	Lcd_Print_Char@data,w
 10288  0005  390F               	andlw	15
 10289  0006  00F1               	movwf	??_Lcd_Print_Char
 10290  0007  0871               	movf	??_Lcd_Print_Char,w
 10291  0008  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
 10292                           
 10293                           ;LCD_driver.c: 90:    Upper_Nibble = data&0xF0;
 10294  0009  0874               	movf	Lcd_Print_Char@data,w
 10295  000A  39F0               	andlw	240
 10296  000B  00F1               	movwf	??_Lcd_Print_Char
 10297  000C  0871               	movf	??_Lcd_Print_Char,w
 10298  000D  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
 10299  000E                     l3263:	
 10300                           
 10301                           ;LCD_driver.c: 91:    PORTDbits.RD2 = 1;
 10302  000E  1283               	bcf	3,5	;RP0=0, select bank0
 10303  000F  1303               	bcf	3,6	;RP1=0, select bank0
 10304  0010  1508               	bsf	8,2	;volatile
 10305  0011                     l3265:	
 10306                           
 10307                           ;LCD_driver.c: 92:    Lcd_SetBit(Upper_Nibble>>4);
 10308  0011  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
 10309  0012  00F1               	movwf	??_Lcd_Print_Char
 10310  0013  3004               	movlw	4
 10311  0014                     u5505:	
 10312  0014  1003               	clrc
 10313  0015  0CF1               	rrf	??_Lcd_Print_Char,f
 10314  0016  3EFF               	addlw	-1
 10315  0017  1D03               	skipz
 10316  0018  2814               	goto	u5505
 10317  0019  0871               	movf	??_Lcd_Print_Char,w
 10318  001A  160A  158A  238E  120A  118A  	fcall	_Lcd_SetBit
 10319  001F                     l3267:	
 10320                           
 10321                           ;LCD_driver.c: 93:    PORTDbits.RD3 = 1;
 10322  001F  1283               	bcf	3,5	;RP0=0, select bank0
 10323  0020  1303               	bcf	3,6	;RP1=0, select bank0
 10324  0021  1588               	bsf	8,3	;volatile
 10325  0022                     l3269:	
 10326                           
 10327                           ;LCD_driver.c: 94:    PORTDbits.RD3 = 0;
 10328  0022  1188               	bcf	8,3	;volatile
 10329  0023                     l3271:	
 10330                           
 10331                           ;LCD_driver.c: 95:    Lcd_SetBit(Lower_Nibble);
 10332  0023  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
 10333  0024  160A  158A  238E  120A  118A  	fcall	_Lcd_SetBit
 10334  0029                     l3273:	
 10335                           
 10336                           ;LCD_driver.c: 96:    PORTDbits.RD3 = 1;
 10337  0029  1283               	bcf	3,5	;RP0=0, select bank0
 10338  002A  1303               	bcf	3,6	;RP1=0, select bank0
 10339  002B  1588               	bsf	8,3	;volatile
 10340  002C                     l3275:	
 10341                           
 10342                           ;LCD_driver.c: 97:    PORTDbits.RD3 = 0;
 10343  002C  1188               	bcf	8,3	;volatile
 10344  002D                     l150:	
 10345  002D  0008               	return
 10346  002E                     __end_of_Lcd_Print_Char:	
 10347                           
 10348                           	psect	text30
 10349  1B23                     __ptext30:	
 10350 ;; *************** function _Lcd_Clear *****************
 10351 ;; Defined at:
 10352 ;;		line 47 in file "LCD_driver.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, status,2, status,0, pclath, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10366 ;;      Params:         0       0       0       0       0
 10367 ;;      Locals:         0       0       0       0       0
 10368 ;;      Temps:          0       0       0       0       0
 10369 ;;      Totals:         0       0       0       0       0
 10370 ;;Total ram usage:        0 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    2
 10373 ;; This function calls:
 10374 ;;		_Lcd_Cmd
 10375 ;; This function is called by:
 10376 ;;		_main
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380                           
 10381                           ;psect for function _Lcd_Clear
 10382  1B23                     _Lcd_Clear:	
 10383  1B23                     l3441:	
 10384                           ;incstack = 0
 10385                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10386                           
 10387                           
 10388                           ;LCD_driver.c: 48:     Lcd_Cmd(0x00);
 10389  1B23  3000               	movlw	0
 10390  1B24  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
 10391                           
 10392                           ;LCD_driver.c: 49:     Lcd_Cmd(0x01);
 10393  1B29  3001               	movlw	1
 10394  1B2A  160A  158A  2357  160A  158A  	fcall	_Lcd_Cmd
 10395  1B2F                     l138:	
 10396  1B2F  0008               	return
 10397  1B30                     __end_of_Lcd_Clear:	
 10398                           
 10399                           	psect	text31
 10400  1B57                     __ptext31:	
 10401 ;; *************** function _Lcd_Cmd *****************
 10402 ;; Defined at:
 10403 ;;		line 39 in file "LCD_driver.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  a               1    wreg     unsigned char 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  a               1    1[COMMON] unsigned char 
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0, pclath, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10417 ;;      Params:         0       0       0       0       0
 10418 ;;      Locals:         1       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0
 10420 ;;      Totals:         1       0       0       0       0
 10421 ;;Total ram usage:        1 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    1
 10424 ;; This function calls:
 10425 ;;		_Lcd_SetBit
 10426 ;;		_Timer_Delay
 10427 ;; This function is called by:
 10428 ;;		_Lcd_Clear
 10429 ;;		_Lcd_Set_Cursor
 10430 ;;		_Lcd_Start
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function _Lcd_Cmd
 10436  1B57                     _Lcd_Cmd:	
 10437                           
 10438                           ;incstack = 0
 10439                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10440                           ;Lcd_Cmd@a stored from wreg
 10441  1B57  00F1               	movwf	Lcd_Cmd@a
 10442  1B58                     l3253:	
 10443                           
 10444                           ;LCD_driver.c: 40:     PORTDbits.RD2 = 0;
 10445  1B58  1283               	bcf	3,5	;RP0=0, select bank0
 10446  1B59  1303               	bcf	3,6	;RP1=0, select bank0
 10447  1B5A  1108               	bcf	8,2	;volatile
 10448  1B5B                     l3255:	
 10449                           
 10450                           ;LCD_driver.c: 41:     Lcd_SetBit(a);
 10451  1B5B  0871               	movf	Lcd_Cmd@a,w
 10452  1B5C  160A  158A  238E  160A  158A  	fcall	_Lcd_SetBit
 10453  1B61                     l3257:	
 10454                           
 10455                           ;LCD_driver.c: 42:     PORTDbits.RD3 = 1;
 10456  1B61  1283               	bcf	3,5	;RP0=0, select bank0
 10457  1B62  1303               	bcf	3,6	;RP1=0, select bank0
 10458  1B63  1588               	bsf	8,3	;volatile
 10459                           
 10460                           ;LCD_driver.c: 43:    Timer_Delay();
 10461  1B64  160A  118A  20B1  160A  158A  	fcall	_Timer_Delay
 10462  1B69                     l3259:	
 10463                           
 10464                           ;LCD_driver.c: 44:     PORTDbits.RD3 = 0;
 10465  1B69  1283               	bcf	3,5	;RP0=0, select bank0
 10466  1B6A  1303               	bcf	3,6	;RP1=0, select bank0
 10467  1B6B  1188               	bcf	8,3	;volatile
 10468  1B6C                     l135:	
 10469  1B6C  0008               	return
 10470  1B6D                     __end_of_Lcd_Cmd:	
 10471                           
 10472                           	psect	text32
 10473  10B1                     __ptext32:	
 10474 ;; *************** function _Timer_Delay *****************
 10475 ;; Defined at:
 10476 ;;		line 107 in file "LCD_driver.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;		None
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;		None
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, status,0
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10490 ;;      Params:         0       0       0       0       0
 10491 ;;      Locals:         0       0       0       0       0
 10492 ;;      Temps:          1       0       0       0       0
 10493 ;;      Totals:         1       0       0       0       0
 10494 ;;Total ram usage:        1 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; This function calls:
 10497 ;;		Nothing
 10498 ;; This function is called by:
 10499 ;;		_main
 10500 ;;		_Read_ADC
 10501 ;;		_Lcd_Cmd
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           
 10506                           ;psect for function _Timer_Delay
 10507  10B1                     _Timer_Delay:	
 10508  10B1                     l2713:	
 10509                           ;incstack = 0
 10510                           ; Regs used in _Timer_Delay: [wreg+status,2+status,0]
 10511                           
 10512                           
 10513                           ;LCD_driver.c: 110:     PIE1 &= (unsigned char)0x1;
 10514  10B1  3001               	movlw	1
 10515  10B2  00F0               	movwf	??_Timer_Delay
 10516  10B3  0870               	movf	??_Timer_Delay,w
 10517  10B4  1683               	bsf	3,5	;RP0=1, select bank1
 10518  10B5  1303               	bcf	3,6	;RP1=0, select bank1
 10519  10B6  058C               	andwf	12,f	;volatile
 10520  10B7                     l2715:	
 10521                           
 10522                           ;LCD_driver.c: 112:     TMR1L = (unsigned char)0x60;
 10523  10B7  3060               	movlw	96
 10524  10B8  1283               	bcf	3,5	;RP0=0, select bank0
 10525  10B9  1303               	bcf	3,6	;RP1=0, select bank0
 10526  10BA  008E               	movwf	14	;volatile
 10527  10BB                     l2717:	
 10528                           
 10529                           ;LCD_driver.c: 113:     TMR1H = (unsigned char)0xF0;
 10530  10BB  30F0               	movlw	240
 10531  10BC  008F               	movwf	15	;volatile
 10532  10BD                     l2719:	
 10533                           
 10534                           ;LCD_driver.c: 116:     T1CON |= (unsigned char)0x1;
 10535  10BD  1410               	bsf	16,0	;volatile
 10536  10BE                     l159:	
 10537                           ;LCD_driver.c: 117:     while(PIR1bits.TMR1IF == 0){};
 10538                           
 10539  10BE  1C0C               	btfss	12,0	;volatile
 10540  10BF  28C1               	goto	u4141
 10541  10C0  28C2               	goto	u4140
 10542  10C1                     u4141:	
 10543  10C1  28BE               	goto	l159
 10544  10C2                     u4140:	
 10545  10C2                     l161:	
 10546                           
 10547                           ;LCD_driver.c: 118:     PIR1bits.TMR1IF = 0;
 10548  10C2  100C               	bcf	12,0	;volatile
 10549  10C3                     l162:	
 10550  10C3  0008               	return
 10551  10C4                     __end_of_Timer_Delay:	
 10552                           
 10553                           	psect	text33
 10554  1B8E                     __ptext33:	
 10555 ;; *************** function _Lcd_SetBit *****************
 10556 ;; Defined at:
 10557 ;;		line 12 in file "LCD_driver.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  data_bit        1    wreg     unsigned char 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  data_bit        1    0[COMMON] unsigned char 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10571 ;;      Params:         0       0       0       0       0
 10572 ;;      Locals:         1       0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0
 10574 ;;      Totals:         1       0       0       0       0
 10575 ;;Total ram usage:        1 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		_Lcd_Cmd
 10581 ;;		_Lcd_Start
 10582 ;;		_Lcd_Print_Char
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           
 10587                           ;psect for function _Lcd_SetBit
 10588  1B8E                     _Lcd_SetBit:	
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _Lcd_SetBit: [wreg]
 10592                           ;Lcd_SetBit@data_bit stored from wreg
 10593  1B8E  00F0               	movwf	Lcd_SetBit@data_bit
 10594  1B8F                     l2721:	
 10595                           
 10596                           ;LCD_driver.c: 13:     if(data_bit & 1){
 10597  1B8F  1C70               	btfss	Lcd_SetBit@data_bit,0
 10598  1B90  2B92               	goto	u4151
 10599  1B91  2B93               	goto	u4150
 10600  1B92                     u4151:	
 10601  1B92  2B97               	goto	l124
 10602  1B93                     u4150:	
 10603  1B93                     l2723:	
 10604                           
 10605                           ;LCD_driver.c: 14:         PORTDbits.RD4 = 1;
 10606  1B93  1283               	bcf	3,5	;RP0=0, select bank0
 10607  1B94  1303               	bcf	3,6	;RP1=0, select bank0
 10608  1B95  1608               	bsf	8,4	;volatile
 10609                           
 10610                           ;LCD_driver.c: 15:     }
 10611  1B96  2B9A               	goto	l125
 10612  1B97                     l124:	
 10613                           ;LCD_driver.c: 16:     else{
 10614                           
 10615                           
 10616                           ;LCD_driver.c: 17:         PORTDbits.RD4 = 0;
 10617  1B97  1283               	bcf	3,5	;RP0=0, select bank0
 10618  1B98  1303               	bcf	3,6	;RP1=0, select bank0
 10619  1B99  1208               	bcf	8,4	;volatile
 10620  1B9A                     l125:	
 10621                           ;LCD_driver.c: 18:     }
 10622                           
 10623                           
 10624                           ;LCD_driver.c: 19:     if(data_bit & 2){
 10625  1B9A  1CF0               	btfss	Lcd_SetBit@data_bit,1
 10626  1B9B  2B9D               	goto	u4161
 10627  1B9C  2B9E               	goto	u4160
 10628  1B9D                     u4161:	
 10629  1B9D  2BA0               	goto	l126
 10630  1B9E                     u4160:	
 10631  1B9E                     l2725:	
 10632                           
 10633                           ;LCD_driver.c: 20:         PORTDbits.RD5 = 1;
 10634  1B9E  1688               	bsf	8,5	;volatile
 10635                           
 10636                           ;LCD_driver.c: 21:     }
 10637  1B9F  2BA1               	goto	l127
 10638  1BA0                     l126:	
 10639                           ;LCD_driver.c: 22:     else{
 10640                           
 10641                           
 10642                           ;LCD_driver.c: 23:         PORTDbits.RD5 = 0;
 10643  1BA0  1288               	bcf	8,5	;volatile
 10644  1BA1                     l127:	
 10645                           ;LCD_driver.c: 24:     }
 10646                           
 10647                           
 10648                           ;LCD_driver.c: 25:     if(data_bit & 4){
 10649  1BA1  1D70               	btfss	Lcd_SetBit@data_bit,2
 10650  1BA2  2BA4               	goto	u4171
 10651  1BA3  2BA5               	goto	u4170
 10652  1BA4                     u4171:	
 10653  1BA4  2BA7               	goto	l128
 10654  1BA5                     u4170:	
 10655  1BA5                     l2727:	
 10656                           
 10657                           ;LCD_driver.c: 26:         PORTDbits.RD6 = 1;
 10658  1BA5  1708               	bsf	8,6	;volatile
 10659                           
 10660                           ;LCD_driver.c: 27:     }
 10661  1BA6  2BA8               	goto	l129
 10662  1BA7                     l128:	
 10663                           ;LCD_driver.c: 28:     else{
 10664                           
 10665                           
 10666                           ;LCD_driver.c: 29:         PORTDbits.RD6 = 0;
 10667  1BA7  1308               	bcf	8,6	;volatile
 10668  1BA8                     l129:	
 10669                           ;LCD_driver.c: 30:     }
 10670                           
 10671                           
 10672                           ;LCD_driver.c: 31:     if(data_bit & 8){
 10673  1BA8  1DF0               	btfss	Lcd_SetBit@data_bit,3
 10674  1BA9  2BAB               	goto	u4181
 10675  1BAA  2BAC               	goto	u4180
 10676  1BAB                     u4181:	
 10677  1BAB  2BAE               	goto	l130
 10678  1BAC                     u4180:	
 10679  1BAC                     l2729:	
 10680                           
 10681                           ;LCD_driver.c: 32:         PORTDbits.RD7 = 1;
 10682  1BAC  1788               	bsf	8,7	;volatile
 10683                           
 10684                           ;LCD_driver.c: 33:     }
 10685  1BAD  2BAF               	goto	l132
 10686  1BAE                     l130:	
 10687                           ;LCD_driver.c: 34:     else{
 10688                           
 10689                           
 10690                           ;LCD_driver.c: 35:         PORTDbits.RD7 = 0;
 10691  1BAE  1388               	bcf	8,7	;volatile
 10692  1BAF                     l132:	
 10693  1BAF  0008               	return
 10694  1BB0                     __end_of_Lcd_SetBit:	
 10695                           
 10696                           	psect	text34
 10697  1B41                     __ptext34:	
 10698 ;; *************** function _Init_USART *****************
 10699 ;; Defined at:
 10700 ;;		line 95 in file "main.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;		None
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;		None
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		wreg
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10714 ;;      Params:         0       0       0       0       0
 10715 ;;      Locals:         0       0       0       0       0
 10716 ;;      Temps:          0       0       0       0       0
 10717 ;;      Totals:         0       0       0       0       0
 10718 ;;Total ram usage:        0 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; This function calls:
 10721 ;;		Nothing
 10722 ;; This function is called by:
 10723 ;;		_main
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           
 10728                           ;psect for function _Init_USART
 10729  1B41                     _Init_USART:	
 10730  1B41                     l3423:	
 10731                           ;incstack = 0
 10732                           ; Regs used in _Init_USART: [wreg]
 10733                           
 10734                           
 10735                           ;main.c: 97:     SPBRG = 0xC;
 10736  1B41  300C               	movlw	12
 10737  1B42  1683               	bsf	3,5	;RP0=1, select bank1
 10738  1B43  1303               	bcf	3,6	;RP1=0, select bank1
 10739  1B44  0099               	movwf	25	;volatile
 10740  1B45                     l3425:	
 10741                           
 10742                           ;main.c: 100:     TXSTAbits.BRGH = 0;
 10743  1B45  1118               	bcf	24,2	;volatile
 10744  1B46                     l3427:	
 10745                           
 10746                           ;main.c: 101:     TXSTAbits.SYNC = 0;
 10747  1B46  1218               	bcf	24,4	;volatile
 10748  1B47                     l3429:	
 10749                           
 10750                           ;main.c: 104:     BAUDCTLbits.BRG16 = 0;
 10751  1B47  1683               	bsf	3,5	;RP0=1, select bank3
 10752  1B48  1703               	bsf	3,6	;RP1=1, select bank3
 10753  1B49  1187               	bcf	7,3	;volatile
 10754  1B4A                     l3431:	
 10755                           
 10756                           ;main.c: 107:     RCSTAbits.SPEN = 1;
 10757  1B4A  1283               	bcf	3,5	;RP0=0, select bank0
 10758  1B4B  1303               	bcf	3,6	;RP1=0, select bank0
 10759  1B4C  1798               	bsf	24,7	;volatile
 10760  1B4D                     l3433:	
 10761                           
 10762                           ;main.c: 109:     TXSTAbits.TXEN = 1;
 10763  1B4D  1683               	bsf	3,5	;RP0=1, select bank1
 10764  1B4E  1303               	bcf	3,6	;RP1=0, select bank1
 10765  1B4F  1698               	bsf	24,5	;volatile
 10766  1B50                     l3435:	
 10767                           
 10768                           ;main.c: 110:     RCSTAbits.CREN = 1;
 10769  1B50  1283               	bcf	3,5	;RP0=0, select bank0
 10770  1B51  1303               	bcf	3,6	;RP1=0, select bank0
 10771  1B52  1618               	bsf	24,4	;volatile
 10772  1B53                     l3437:	
 10773                           
 10774                           ;main.c: 113:     PIE1bits.RCIE =1;
 10775  1B53  1683               	bsf	3,5	;RP0=1, select bank1
 10776  1B54  1303               	bcf	3,6	;RP1=0, select bank1
 10777  1B55  168C               	bsf	12,5	;volatile
 10778  1B56                     l84:	
 10779  1B56  0008               	return
 10780  1B57                     __end_of_Init_USART:	
 10781                           
 10782                           	psect	text35
 10783  1B00                     __ptext35:	
 10784 ;; *************** function _Init_Clock *****************
 10785 ;; Defined at:
 10786 ;;		line 89 in file "main.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;		None
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10800 ;;      Params:         0       0       0       0       0
 10801 ;;      Locals:         0       0       0       0       0
 10802 ;;      Temps:          0       0       0       0       0
 10803 ;;      Totals:         0       0       0       0       0
 10804 ;;Total ram usage:        0 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_main
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           
 10814                           ;psect for function _Init_Clock
 10815  1B00                     _Init_Clock:	
 10816  1B00                     l3419:	
 10817                           ;incstack = 0
 10818                           ; Regs used in _Init_Clock: [wreg]
 10819                           
 10820                           
 10821                           ;main.c: 92:     OSCCON = 0x71;
 10822  1B00  3071               	movlw	113
 10823  1B01  1683               	bsf	3,5	;RP0=1, select bank1
 10824  1B02  1303               	bcf	3,6	;RP1=0, select bank1
 10825  1B03  008F               	movwf	15	;volatile
 10826  1B04                     l81:	
 10827  1B04  0008               	return
 10828  1B05                     __end_of_Init_Clock:	
 10829                           
 10830                           	psect	text36
 10831  1B30                     __ptext36:	
 10832 ;; *************** function _Init_ADC *****************
 10833 ;; Defined at:
 10834 ;;		line 132 in file "main.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;		None
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;		None
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  1    wreg      void 
 10841 ;; Registers used:
 10842 ;;		wreg
 10843 ;; Tracked objects:
 10844 ;;		On entry : 0/0
 10845 ;;		On exit  : 0/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10848 ;;      Params:         0       0       0       0       0
 10849 ;;      Locals:         0       0       0       0       0
 10850 ;;      Temps:          0       0       0       0       0
 10851 ;;      Totals:         0       0       0       0       0
 10852 ;;Total ram usage:        0 bytes
 10853 ;; Hardware stack levels used:    1
 10854 ;; This function calls:
 10855 ;;		Nothing
 10856 ;; This function is called by:
 10857 ;;		_main
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           
 10862                           ;psect for function _Init_ADC
 10863  1B30                     _Init_ADC:	
 10864  1B30                     l3421:	
 10865                           ;incstack = 0
 10866                           ; Regs used in _Init_ADC: [wreg]
 10867                           
 10868                           
 10869                           ;main.c: 135:     TRISA = 0x2;
 10870  1B30  3002               	movlw	2
 10871  1B31  1683               	bsf	3,5	;RP0=1, select bank1
 10872  1B32  1303               	bcf	3,6	;RP1=0, select bank1
 10873  1B33  0085               	movwf	5	;volatile
 10874                           
 10875                           ;main.c: 138:     ANSEL = 0x2;
 10876  1B34  3002               	movlw	2
 10877  1B35  1683               	bsf	3,5	;RP0=1, select bank3
 10878  1B36  1703               	bsf	3,6	;RP1=1, select bank3
 10879  1B37  0088               	movwf	8	;volatile
 10880                           
 10881                           ;main.c: 141:     ADCON0 = 0x5;
 10882  1B38  3005               	movlw	5
 10883  1B39  1283               	bcf	3,5	;RP0=0, select bank0
 10884  1B3A  1303               	bcf	3,6	;RP1=0, select bank0
 10885  1B3B  009F               	movwf	31	;volatile
 10886                           
 10887                           ;main.c: 142:     ADCON1 = 0x80;
 10888  1B3C  3080               	movlw	128
 10889  1B3D  1683               	bsf	3,5	;RP0=1, select bank1
 10890  1B3E  1303               	bcf	3,6	;RP1=0, select bank1
 10891  1B3F  009F               	movwf	31	;volatile
 10892  1B40                     l99:	
 10893  1B40  0008               	return
 10894  1B41                     __end_of_Init_ADC:	
 10895  007E                     btemp	set	126	;btemp
 10896  007E                     wtemp0	set	126


Data Sizes:
    Strings     16
    Constant    144
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     39      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> char_data(BANK1[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> char_data(BANK1[9]), STR_1(CODE[12]), 

    Send_String_USART@str	PTR const unsigned char  size(1) Largest target is 9
		 -> char_data(BANK1[9]), 


Critical Paths under _main in COMMON

    _Send_String_USART->_Send_Char_USART
    _Read_ADC->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Lcd_Cmd->_Timer_Delay

Critical Paths under _main in BANK0

    _main->_Read_ADC
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_Read_ADC
    _Read_ADC->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   38986
                                             37 BANK1      2     2      0
                           _Init_ADC
                         _Init_Clock
                         _Init_USART
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                           _Read_ADC
                  _Send_String_USART
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (1) _Send_String_USART                                    4     4      0     145
                                              1 COMMON     4     4      0
                    _Send_Char_USART
 ---------------------------------------------------------------------------------
 (2) _Send_Char_USART                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             3     3      0   37535
                                             78 BANK0      1     1      0
                                             35 BANK1      2     2      0
                        _Timer_Delay
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   30893
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            0     0      0     198
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              2 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              1     1      0     110
                                              1 COMMON     1     1      0
                         _Lcd_SetBit
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (1) _Timer_Delay                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Clock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_ADC
   _Init_Clock
   _Init_USART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
     _Lcd_SetBit
   _Read_ADC
     _Timer_Delay
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _Send_String_USART
     _Send_Char_USART
   _Timer_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A1      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 13:12:28 2019

              ___fldiv@aexp 0057                ___fldiv@bexp 0056                           pc 0002  
              ___fldiv@sign 004F                          l81 1B04                          l90 1B22  
                        l84 1B56                          l87 1B19                          l96 1B8D  
                        l89 1B1F                          l99 1B40                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
                       l103 0848                         l104 084B                         l130 1BAE  
                       l107 093F                         l132 1BAF                         l124 1B97  
                       l125 1B9A                         l126 1BA0                         l150 002D  
                       l127 1BA1                         l135 1B6C                         l128 1BA7  
                       l144 1D95                         l129 1BA8                         l161 10C2  
                       l162 10C3                         l138 1B2F                         l147 1C6F  
                       l331 1BF8                         l315 0675                         l156 1CB1  
                       l500 12FF                         l308 0631                         l325 07F2  
                       l510 138D                         l262 0238                         l159 10BE  
                       l503 135D                         l520 10E0                         l329 1BE0  
                       l515 1D12                         l523 114C                         l283 0256  
                       l516 1D2E                         l524 1165                         l532 1FFF  
                       l517 1D43                         l365 1EA8                         l269 0C9E  
                       l702 1BD3                         l542 1FFF                         l550 129F  
                       l712 13F7                         l528 1B17                         l714 1577  
                       l546 12DC                         l482 1F11                         l539 1FEA  
                       l803 11E9                         l547 124E                         l635 1CF5  
                       l660 1682                         l804 11F5                         l557 12CF  
                       l813 0817                         l645 1C32                         l734 155B  
                       l662 1659                         l815 0829                         l495 1E42  
                       l736 156B                         l728 14E9                         l656 15DB  
                       l752 0FFF                         l681 1771                         l585 1DE9  
                       l690 17D1                         l499 139A                         l764 0FF3  
                       l677 174D                         l669 17FF                         l790 1188  
                       l758 0F6B                         l687 1793                         l792 121F  
                       l698 17F3                         l699 17FF                         l796 11CD  
                       fsr0 0004                         indf 0000                ___awmod@sign 0076  
              ___flmul@aexp 0036                ___flmul@bexp 0037                ___flmul@sign 0031  
              ___flmul@temp 003C                ___flmul@prod 0038                ___fltol@exp1 005B  
                      l3001 1FDF                        l3003 1FEF                        l3011 1DA1  
                      l3005 1FF4                        l3021 1DDB                        l3013 1DAE  
                      l2301 1DF6                        l3101 0290                        l3015 1DB2  
                      l3023 1DE1                        l3007 1D96                        l2311 1E0F  
                      l2303 1DFA                        l3111 02CE                        l3103 0294  
                      l2401 15AC                        l3017 1DC4                        l3009 1D9E  
                      l3041 1190                        l3033 1167                        l2241 0811  
                      l2321 1E2E                        l2313 1E13                        l2305 1DFF  
                      l3201 0659                        l3121 031E                        l3113 02E7  
                      l3105 02AD                        l2411 15BE                        l2403 15B2  
                      l3027 1BB0                        l3019 1DD2                        l3051 11B2  
                      l3035 116C                        l2243 0820                        l2235 0804  
                      l2331 1CB2                        l2251 1EAC                        l2315 1E17  
                      l2307 1E05                        l2323 1E34                        l3211 068A  
                      l3203 0668                        l3131 03AB                        l3123 0322  
                      l3115 02F2                        l3107 02C6                        l3301 13D5  
                      l2501 16D1                        l2413 15C3                        l2421 15D3  
                      l2405 15B3                        l3029 1BB4                        l3061 11E3  
                      l3053 11B6                        l3045 1199                        l3037 1170  
                      l2245 0825                        l2237 0806                        l2341 1CC8  
                      l2333 1CB4                        l2261 1EC0                        l2253 1EB0  
                      l2325 1E39                        l2317 1E21                        l2309 1E08  
                      l3221 0761                        l3213 068E                        l3205 066F  
                      l3141 041C                        l3133 03B4                        l3125 0328  
                      l3117 02F8                        l3109 02CA                        l3311 13EC  
                      l3303 13D9                        l2503 16E7                        l2511 173F  
                      l2431 15F1                        l2423 15E1                        l2415 15C8  
                      l2407 15B9                        l3071 1216                        l3063 11ED  
                      l3055 11C4                        l3047 119E                        l3039 1180  
                      l2239 080D                        l2351 1CEB                        l2343 1CCC  
                      l2335 1CBA                        l2271 1ED6                        l2263 1EC4  
                      l2255 1EB5                        l2327 1E3E                        l2319 1E27  
                      l3231 07BB                        l3223 076D                        l3215 06AC  
                      l3207 067E                        l3151 0495                        l3143 0429  
                      l3135 03CF                        l3127 0347                        l3119 030B  
                      l3401 153F                        l3321 140F                        l3313 13ED  
                      l3305 13DA                        l2521 176C                        l2513 1755  
                      l2505 1725                        l2441 1605                        l2433 15F5  
                      l2425 15E5                        l2417 15D0                        l2409 15BD  
                      l3073 1217                        l3065 11F7                        l3057 11D4  
                      l3049 11AB                        l2601 0CE2                        l2345 1CDD  
                      l2337 1CBD                        l2353 1CF1                        l2361 1C02  
                      l2281 1EF6                        l2273 1EDA                        l2265 1EC6  
                      l2257 1EB7                        l2249 1EA9                        l3233 07C1  
                      l3217 0707                        l3225 07A8                        l3209 0683  
                      l3161 04E3                        l3153 049E                        l3145 0444  
                      l3129 0392                        l3137 03D7                        l3241 07DC  
                      l3081 023C                        l3411 1565                        l3403 154E  
                      l3331 1426                        l3307 13DF                        l3315 13EF  
                      l2531 177F                        l2523 1770                        l2515 175A  
                      l2507 172B                        l2451 1619                        l2443 1609  
                      l2435 15F9                        l2427 15E9                        l2419 15D1  
                      l3067 120D                        l3059 11DF                        l2611 0CFE  
                      l2603 0CE7                        l2347 1CE3                        l2339 1CC4  
                      l2371 1C21                        l2363 1C09                        l2283 1EFD  
                      l2275 1EDE                        l2267 1ECC                        l2259 1EBB  
                      l3227 07B0                        l3219 0742                        l3155 04A6  
                      l3147 046B                        l3163 04EC                        l3139 03D7  
                      l3235 07C8                        l3243 07EE                        l3083 0241  
                      l3421 1B30                        l3253 1B58                        l3261 0004  
                      l3413 1567                        l3405 1552                        l3341 1452  
                      l3333 1438                        l3317 13FF                        l3325 1418  
                      l3309 13E4                        l2541 1790                        l2525 1775  
                      l2533 1781                        l2509 1730                        l2461 163D  
                      l2453 161D                        l2445 160D                        l2437 15FD  
                      l2429 15ED                        l2381 157F                        l3069 1212  
                      l2701 0FD9                        l2621 0D29                        l2613 0D03  
                      l2605 0CEF                        l2349 1CE4                        l2373 1C28  
                      l2365 1C0D                        l2357 1BF9                        l2277 1EEF  
                      l2269 1ECF                        l2285 1F03                        l2293 1DEA  
                      l3237 07D4                        l3229 07B7                        l3181 05B3  
                      l3165 0521                        l3157 04C4                        l3149 047A  
                      l3093 0258                        l3085 0247                        l3077 1B19  
                      l3501 1F12                        l3431 1B4A                        l3423 1B41  
                      l3255 1B5B                        l3271 0023                        l3263 000E  
                      l3407 155A                        l3343 1457                        l3351 1477  
                      l3335 1440                        l3327 141D                        l3319 140B  
                      l2551 17AF                        l2527 1778                        l2519 1763  
                      l2535 1785                        l2471 166D                        l2463 165D  
                      l2455 1621                        l2447 1611                        l2439 1601  
                      l2391 1594                        l2383 1585                        l2703 0FE7  
                      l2631 0DC6                        l2623 0D46                        l2607 0CF1  
                      l2367 1C11                        l2359 1BFF                        l2375 1C2E  
                      l2287 1F08                        l2279 1EF5                        l2295 1DEB  
                      l3191 0625                        l3183 05BF                        l3175 0572  
                      l3167 056E                        l3095 0272                        l3087 024E  
                      l3079 1B20                        l3511 1F25                        l3503 1F15  
                      l3433 1B4D                        l3425 1B45                        l2721 1B8F  
                      l2713 10B1                        l3257 1B61                        l3441 1B23  
                      l3273 0029                        l3265 0011                        l3409 1561  
                      l3361 14A2                        l3353 1489                        l3345 1469  
                      l3337 1448                        l3281 13A8                        l2561 17E8  
                      l2553 17CD                        l2545 1798                        l2537 1786  
                      l2529 177A                        l2473 1676                        l2465 1666  
                      l2449 1615                        l2457 1625                        l2393 159C  
                      l2385 1589                        l2801 124F                        l2705 0FEB  
                      l2641 0E29                        l2633 0DCF                        l2625 0D62  
                      l2617 0D0C                        l2609 0CF9                        l2369 1C1B  
                      l2289 1F0D                        l2297 1DEF                        l3193 0639  
                      l3185 05C6                        l3169 0570                        l3097 027E  
                      l3089 0253                        l3521 1F30                        l3513 1F26  
                      l3505 1F16                        l3419 1B00                        l3435 1B50  
                      l3427 1B46                        l2723 1B93                        l2715 10B7  
                      l3259 1B69                        l3275 002C                        l3267 001F  
                      l3451 1D66                        l3443 1D45                        l3371 14BA  
                      l3363 14AA                        l3355 148A                        l3347 146D  
                      l3339 1450                        l3291 13BF                        l3283 13AC  
                      l2571 17FE                        l2563 17E9                        l2555 17D6  
                      l2547 179D                        l2539 178A                        l2491 16BC  
                      l2483 1694                        l2467 1668                        l2475 167A  
                      l2459 1626                        l2395 159D                        l2387 158A  
                      l2379 1578                        l2811 1278                        l2803 1255  
                      l2707 0FEC                        l2651 0EC9                        l2643 0E42  
                      l2635 0DDF                        l2627 0D8E                        l2619 0D1C  
                      l2731 0031                        l2299 1DF4                        l3195 0642  
                      l3187 05CB                        l3179 05A9                        l3099 0282  
                      l3531 1F51                        l3523 1F35                        l3515 1F27  
                      l3507 1F1B                        l3437 1B53                        l3429 1B47  
                      l2725 1B9E                        l2717 10BB                        l3269 0022  
                      l3461 1D8F                        l3445 1D4A                        l3453 1D6D  
                      l3381 14D2                        l3373 14C3                        l3365 14AC  
                      l3357 1498                        l3349 146E                        l3293 13C0  
                      l3285 13AD                        l3277 139B                        l2565 17ED  
                      l2557 17DB                        l2549 17AB                        l2493 16BE  
                      l2485 16AB                        l2477 1686                        l2469 166C  
                      l2389 158F                        l2397 159F                        l2901 1BEE  
                      l2821 12A3                        l2813 1286                        l2805 1264  
                      l2709 0FF7                        l2661 0F37                        l2653 0EEF  
                      l2645 0E5F                        l2637 0DFC                        l2629 0DAA  
                      l2581 0CB1                        l2573 0C9F                        l2741 014A  
                      l2733 0037                        l3197 0646                        l3189 0606  
                      l3541 1F66                        l3533 1F59                        l3525 1F3D  
                      l3517 1F2A                        l3509 1F20                        l2727 1BA5  
                      l2719 10BD                        l3463 1C70                        l3455 1D73  
                      l3447 1D5B                        l3439 1C33                        l3391 1501  
                      l3383 14E6                        l3367 14B5                        l3375 14C9  
                      l3359 149C                        l3287 13B2                        l3295 13C2  
                      l3279 13A2                        l2567 17EF                        l2559 17E3  
                      l2495 16C2                        l2487 16AF                        l2479 168B  
                      l2399 15A7                        l2911 1E56                        l2903 1BF4  
                      l2815 1290                        l2807 1266                        l2671 0F4F  
                      l2663 0F3B                        l2655 0F17                        l2647 0E8C  
                      l2639 0E0C                        l2591 0CCD                        l2583 0CB6  
                      l2575 0CA6                        l2751 0947                        l3199 064C  
                      l3471 082A                        l3543 1F6B                        l3535 1F62  
                      l3527 1F46                        l3519 1F2B                        l2729 1BAC  
                      l3465 1C73                        l3457 1D84                        l3449 1D60  
                      l3393 1505                        l3377 14CD                        l3369 14B9  
                      l3297 13CA                        l3289 13B7                        l2569 17FA  
                      l2497 16C3                        l2489 16B3                        l2921 1E90  
                      l2913 1E63                        l2841 12DD                        l2817 1291  
                      l2809 126F                        l2681 0F70                        l2673 0F50  
                      l2665 0F3C                        l2657 0F20                        l2649 0E9C  
                      l2593 0CD2                        l2585 0CBB                        l2577 0CAC  
                      l2745 01F5                        l2761 0A38                        l2753 0949  
                      l3481 083B                        l3545 1F73                        l3529 1F4B  
                      l3467 1C8F                        l3459 1D89                        l3395 151E  
                      l3387 14EE                        l3379 14CE                        l3299 13CF  
                      l2931 1CF6                        l2499 16CC                        l2923 1E91  
                      l2915 1E67                        l2907 1E43                        l2843 12EA  
                      l2835 12C4                        l2827 12AB                        l2819 1299  
                      l2683 0F75                        l2691 0FA6                        l2675 0F54  
                      l2667 0F45                        l2659 0F2E                        l2595 0CD8  
                      l2587 0CC3                        l2579 0CB0                        l2739 0144  
                      l2763 0A3F                        l2755 0950                        l2771 0AF4  
                      l3491 0929                        l3483 084F                        l3469 1C95  
                      l3389 14F3                        l3397 1524                        l2933 1D0A  
                      l2925 1E9A                        l2917 1E70                        l2909 1E53  
                      l2861 1324                        l2853 1300                        l2837 12D4  
                      l2829 12BD                        l2693 0FB3                        l2685 0F83  
                      l2677 0F68                        l2669 0F4B                        l2597 0CDC  
                      l2589 0CC5                        l2781 0BEA                        l2773 0AFB  
                      l2749 0943                        l3485 0855                        l3477 082E  
                      l3493 1B6E                        l3399 1531                        l2935 1D26  
                      l2951 1100                        l2943 10C4                        l2919 1E82  
                      l2927 1EA0                        l2871 1357                        l2863 132D  
                      l2855 1308                        l2847 12F3                        l2791 1233  
                      l2695 0FBE                        l2687 0F87                        l2599 0CDD  
                      l2767 0AC7                        l3487 08AB                        l3479 0833  
                      l3495 1B71                        l2937 1D40                        l2953 1124  
                      l2945 10D8                        l2873 1361                        l2881 137B  
                      l2865 133F                        l2857 1319                        l2697 0FCD  
                      l2689 0FA0                        l2785 0C72                        l3577 026A  
                      l3489 08EA                        l3497 1B7C                        l2939 1D42  
                      l2955 1128                        l2947 10F4                        l2963 1B0D  
                      l2971 1F84                        l2867 134D                        l2859 131B  
                      l2795 123C                        l2699 0FD7                        l2779 0BE3  
                      l3499 1B82                        l2957 1162                        l2949 10FC  
                      l2965 1B15                        l2981 1FB0                        l2973 1F91  
                      l2893 1BD4                        l2869 134E                        l2789 1220  
                      l2959 1164                        l2967 1B17                        l2983 1FB8  
                      l2895 1BD6                        l2887 1382                        l2879 1369  
                      l2993 1FC6                        l2985 1FBA                        l2977 1F9A  
                      l2897 1BDA                        l2889 1392                        l2987 1FBE  
                      l2995 1FD8                        l2979 1FAF                        l2899 1BE7  
                      STR_1 10A0                        STR_2 10AC                        u3000 1EBB  
                      u3001 1EBA                        u3010 1ECC                        u3011 1ECB  
                      u3100 1DFA                        u3101 1DF9                        u3030 1EDE  
                      u3110 1E05                        u3031 1EDD                        u3111 1E04  
                      u3200 1CCC                        u3201 1CCB                        u3025 1ED0  
                      u3050 1EEF                        u3130 1E17                        u3051 1EEE  
                      u3131 1E16                        u4100 0F96                        u4020 0F3B  
                      u3220 1CDD                        u3300 1C2E                        u3140 1E21  
                      u4021 0F3A                        u4005 0F19                        u3221 1CDC  
                      u3301 1C2D                        u3045 1EDF                        u3141 1E20  
                      u3125 1E09                        u3310 1589                        u4110 0FB3  
                      u3070 1F03                        u3311 1588                        u4111 0FB2  
                      u4015 0F30                        u3215 1CCD                        u3071 1F02  
                      u3055 1EEB                        u3400 163D                        u3320 158F  
                      u5000 1FEF                        u4120 0FCD                        u4040 0F4F  
                      u3240 1CF1                        u3080 1F08                        u3160 1E34  
                      u3401 163C                        u3321 158E                        u5001 1FEE  
                      u4121 0FCC                        u4105 0F91                        u4041 0F4E  
                      u3241 1CF0                        u3225 1CD9                        u3081 1F07  
                      u3065 1EF7                        u3161 1E33                        u3145 1E1D  
                      u3410 1648                        u3330 1594                        u5010 1FF4  
                      u4130 0FEB                        u4050 0F54                        u3250 1BFF  
                      u3170 1E39                        u3090 1DEF                        u3411 1646  
                      u3331 1593                        u5011 1FF3                        u4131 0FEA  
                      u4115 0FAF                        u4051 0F53                        u4035 0F3E  
                      u3235 1CE5                        u3251 1BFE                        u3171 1E38  
                      u3155 1E28                        u3091 1DEE                        u4140 10C2  
                      u3500 16AF                        u3420 1649                        u3340 15B2  
                      u5020 1D9E                        u5100 1190                        u4060 0F68  
                      u3180 1CBA                        u4141 10C1                        u3501 16AE  
                      u3405 1639                        u3341 15B1                        u5021 1D9D  
                      u5101 118F                        u4125 0FC9                        u4061 0F67  
                      u3181 1CB9                        u4205 0054                        u4150 1B93  
                      u3510 16B3                        u3430 165D                        u3350 15BD  
                      u4070 0F6F                        u3270 1C11                        u4230 014A  
                      u4151 1B92                        u3511 16B2                        u3431 165C  
                      u3351 15BC                        u4071 0F6E                        u3271 1C10  
                      u4231 0149                        u4215 00AE                        _PIE1 008C  
                      u4160 1B9E                        u3520 16C2                        u3440 166C  
                      u3360 15C3                        u5040 1DB2                        u5200 1212  
                      u5120 11B1                        u4080 0F75                        u3280 1C1B  
                      u4400 0BEA                        u4320 0A3F                        u4161 1B9D  
                      u3521 16C1                        u3441 166B                        u3361 15C2  
                      u5041 1DB1                        u5201 1211                        u5121 11B0  
                      u4081 0F74                        u3281 1C1A                        u3265 1C03  
                      u4225 0103                        u4401 0BE9                        u4321 0A3E  
                      u4305 09AC                        u4170 1BA5                        u3610 1770  
                      u3370 15C8                        u5050 1DC4                        u5210 1216  
                      u4090 0F87                        u4171 1BA4                        u3611 176F  
                      u3371 15C7                        u5051 1DC3                        u5035 1DA3  
                      u5211 1215                        u5115 11A3                        u4091 0F86  
                      u3195 1CBE                        u4315 09F7                        u4180 1BAC  
                      u3700 17BE                        u3620 1775                        u3540 16E7  
                      u3460 1682                        u3380 15E1                        u5140 11D3  
                      u4500 12A3                        u5300 0429                        u5220 1B1F  
                      u4181 1BAB                        u3621 1774                        u3605 1765  
                      u3541 16E6                        u3461 1681                        u3381 15E0  
                      u5141 11D2                        u4501 12A2                        u3285 1C17  
                      u4245 0167                        u5301 0428                        u5221 1B1E  
                      u3710 17CD                        u3630 177F                        u3470 1686  
                      u3390 15E5                        u5070 1DE1                        u4510 12AA  
                      u4190 0037                        u4270 0947                        u5310 0444  
                      u5230 0247                        u3711 17CC                        u3631 177E  
                      u3551 16FE                        u3543 16E3                        u3535 16C5  
                      u3471 1685                        u3455 166F                        u3391 15E4  
                      u5071 1DE0                        u5055 1DC0                        u5135 11C5  
                      u4511 12A9                        u3295 1C22                        u4255 01B4  
                      u4191 0036                        u4415 0BFD                        u4335 0A52  
                      u4271 0946                        u5311 0443                        u5231 0246  
                      u3720 17D6                        u3640 1785                        u3560 1712  
                      u3552 16FF                        u3480 168B                        u5160 11E3  
                      u5080 116C                        u4600 133F                        u4440 1233  
                      u3800 0CDC                        u4360 0AFB                        u4280 0950  
                      u5400 0638                        u5320 046B                        u5240 027E  
                      u3721 17D5                        u3705 17B9                        u3641 1784  
                      u3561 1713                        u3553 1704                        u3481 168A  
                      u5065 1DD3                        u5161 11E2                        u5081 116B  
                      u4601 133E                        u4441 1232                        u3801 0CDB  
                      u4265 0200                        u4425 0C39                        u4361 0AFA  
                      u4345 0A8E                        u4281 094F                        u5401 0637  
                      u5321 046A                        u5305 0425                        u5241 027D  
                      u3730 17DB                        u3650 178A                        u3570 1730  
                      u3562 1718                        u3554 1705                        u5170 11E9  
                      u5090 1170                        u4530 12BC                        u4450 124D  
                      u3810 0CE2                        u5410 0659                        u5330 047A  
                      u5250 02AD                        u3731 17DA                        u3651 1789  
                      u3571 172F                        u3563 1719                        u3555 170A  
                      u3491 169D                        u5171 11E8                        u5155 11D8  
                      u5091 116F                        u4531 12BB                        u4451 124C  
                      u3811 0CE1                        u4435 0C75                        u4355 0ACA  
                      u5411 0658                        u5331 0479                        u5251 02AC  
                      u3740 17E8                        u3660 1790                        u3580 1755  
                      u3556 170B                        u3492 16A4                        u4700 1BDA  
                      u5180 11ED                        u4620 135D                        u4540 12C3  
                      u3820 0CE7                        u5420 0668                        u5340 0495  
                      u5260 02E7                        u3741 17E7                        u3661 178F  
                      u3581 1754                        u3493 16AB                        u4701 1BD9  
                      u5181 11EC                        u4621 135C                        u4605 133B  
                      u4541 12C2                        u4525 12AC                        u3901 0DEE  
                      u3821 0CE6                        u5421 0667                        u5341 0494  
                      u5261 02E6                        u5510 13AC                        u3750 17ED  
                      u3670 1797                        u3590 175A                        u5190 1202  
                      u4630 1361                        u4470 1286                        u3902 0DF5  
                      u3830 0CFE                        u5430 0683                        u5270 0322  
                      u5511 13AB                        u3751 17EC                        u3671 1796  
                      u3591 1759                        u4631 1360                        u4615 1350  
                      u4471 1285                        u3911 0E1B                        u3903 0DFC  
                      u3831 0CFD                        u4375 0B1B                        u4295 0970  
                      u5431 0682                        u5415 0655                        u5335 0476  
                      u5271 0321                        u5520 13B2                        u3760 17FE  
                      u3680 179D                        u4800 1EA0                        u4640 1368  
                      u4560 12D4                        u2960 0811                        u3912 0E22  
                      u3840 0D03                        u5360 05A8                        u5280 03AB  
                      u5505 0014                        u5521 13B1                        u3761 17FD  
                      u3681 179C                        u4801 1E9F                        u4641 1367  
                      u4561 12D3                        u4465 1271                        u2961 0810  
                      u3913 0E29                        u3841 0D02                        u4385 0B57  
                      u5425 0664                        u5361 05A7                        u5281 03AA  
__size_of_Send_String_USART 0021                        u5530 13B7                        u4810 1D0A  
                      u3690 17AF                        u4730 1BF4                        u4570 12EA  
                      u4490 129F                        u3770 0CB0                        u5370 05B3  
                      u5290 03CF                        u5531 13B6                        u4811 1D09  
                      u3691 17AE                        u4731 1BF3                        u4715 1BE1  
                      u5195 11FD                        u4571 12E9                        u4555 12C6  
                      u4491 129E                        u4475 1282                        u3931 0E51  
                      u3851 0D54                        u3771 0CAF                        u4395 0BA2  
                      u5371 05B2                        u5355 0575                        u5291 03CE  
                      u5700 14CD                        u5620 146D                        u5540 13D9  
                      u4820 1D26                        u4900 1162                        u4740 1E53  
                      u4660 137A                        u4580 12FE                        u2980 0825  
                      u3932 0E58                        u3852 0D5B                        u3780 0CB6  
                      u5460 07AF                        u5380 05BF                        u5701 14CC  
                      u5621 146C                        u5605 1459                        u5541 13D8  
                      u4821 1D25                        u4901 1161                        u4741 1E52  
                      u4725 1BE8                        u4661 1379                        u4581 12FD  
                      u4485 1292                        u2981 0824                        u3941 0E7E  
                      u3933 0E5F                        u3925 0E2B                        u3861 0D70  
                      u3853 0D62                        u3781 0CB5                        u5461 07AE  
                      u5445 070A                        u5381 05BE                        u5365 05A4  
                      u5710 14D2                        u5550 13DF                        u4830 1D40  
                      u4910 1B15                        u4670 1381                        u3942 0E85  
                      u3862 0D77                        u3790 0CBB                        u2990 1EB0  
                      u5470 07C7                        u5711 14D1                        u5615 1462  
                      u5551 13DE                        u4831 1D3F                        u4911 1B14  
                      u4671 1380                        u4655 136A                        u2975 0818  
                      u3951 0EAB                        u3943 0E8C                        u3871 0D9C  
                      u3863 0D7E                        u3791 0CBA                        u2991 1EAF  
                      u5471 07C6                        u5455 0770                        u5800 1D4A  
                      u5720 14E6                        u5640 1489                        u5560 13E4  
                      u4840 10D8                        u4920 1F91                        u4760 1E67  
                      u3960 0ED5                        u3952 0EB2                        u3872 0DA3  
                      u5480 07D4                        u5801 1D49                        u5721 14E5  
                      u5641 1488                        u5561 13E3                        u4905 115E  
                      u4841 10D7                        u4921 1F90                        u4761 1E66  
                      u3953 0EB9                        u3881 0DB8                        u3873 0DAA  
                      u5481 07D3                        u5730 14ED                        u5650 14A2  
                      u5570 13FF                        u4850 10F4                        u4930 1FA8  
                      u4690 1392                        u3882 0DBF                        u5490 07EE  
                      u5731 14EC                        u5651 14A1                        u5635 1470  
                      u5571 13FE                        u4835 1D3C                        u4851 10F3  
                      u4755 1E58                        u4691 1391                        u4595 1326  
                      u3971 0EE1                        u3883 0DC6                        u5491 07ED  
                      u5395 05CE                        u5820 1D73                        u5740 14F3  
                      u5660 14AA                        u5580 141D                        u4860 1100  
                      u4940 1FBE                        u4780 1E82                        u3980 0EFD  
                      u3972 0EE8                        u5900 1F80                        u5821 1D72  
                      u5741 14F2                        u5661 14A9                        u5645 1485  
                      u5581 141C                        u4861 10FF                        u4941 1FBD  
                      u4781 1E81                        u4685 1384                        u3973 0EEF  
                      u3965 0ED0                        u5901 1F7F                        u5750 1505  
                      u5590 1457                        u4950 1FC5                        u5815 1D52  
                      u5751 1504                        u5591 1456                        u4871 110F  
                      u4951 1FC4                        u4935 1FA3                        u4775 1E69  
                      u3991 0F09                        u3895 0DC8                        u5840 1C7D  
                      u5760 1514                        u5680 14B9                        u4880 1128  
                      u4872 1110                        u3992 0F10                        u5681 14B8  
                      u4881 1127                        u4873 1115                        u4785 1E7E  
                      u3993 0F17                        u3985 0EF8                        u5905 1F7C  
                      u5850 1C9F                        u5770 1531                        u4874 1116  
                      u4970 1FD7                        u5835 1D7B                        u5771 1530  
                      u5675 14AE                        u4891 1137                        u4875 111B  
                      u4971 1FD6                        u4795 1E92                        u5860 1CB1  
                      u5780 154E                        u4892 1138                        u4876 111C  
                      u4980 1FDE                        u5861 1CB0                        u5781 154D  
                      u5765 150F                        u4893 113D                        u4981 1FDD  
                      u4965 1FC7                        u5790 1565                        u4894 113E  
                      u5870 0848                        u5791 1564                        u5775 152D  
                      u5695 14BC                        u4895 1143                        u5871 0847  
                      u4896 1144                        u5880 084F                        u5785 154A  
                      u5881 084E                        u5890 1B8D                        u4995 1FE1  
                      u5875 0844                        u5891 1B8C                        _main 1F12  
                      btemp 007E          Send_String_USART@i 0072                        start 0000  
           ___fldiv@new_exp 0050          Lcd_Print_Char@data 0074                _sprintf$1079 00AA  
           __end_of_Lcd_Cmd 1B6D                  _Lcd_SetBit 1B8E               ___fltol@sign1 005A  
           __end_of___fladd 1800                       ?_main 0070             __end_of___fldiv 1578  
           __end_of___awdiv 1F12             __end_of___flneg 1B18               __CFG_WDTE$OFF 0000  
           __end_of___awmod 1E43             __end_of___flmul 1000             __end_of___flsub 1BD4  
           __end_of___fltol 2000                       _ANSEL 0188             __end_of___lldiv 1EA9  
           ___awdiv@divisor 0077                       _T1CON 0010             __end_of___llmod 1DEA  
           __end_of___lwdiv 1CF6             __end_of___lwmod 1C33    __size_of_Send_Char_USART 000B  
           ___awdiv@counter 0020                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099     __size_of_Lcd_Set_Cursor 0052  
                     _TRISA 0085                       _TRISD 0088                       _TXREG 0019  
           __end_of_dpowers 10A0                       _scale 0940                       main@i 00C5  
                     pclath 000A   __size_of_Lcd_Print_String 0042                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07F3     __size_of_Lcd_Print_Char 002B  
                _Init_USART 1B41                  _Init_Clock 1B00             __initialization 07F3  
              __end_of_main 1F84            __end_of_Init_ADC 1B41            __end_of_Read_ADC 0940  
                    ??_main 007E          __size_of_Lcd_Clear 000D        __size_of__tdiv_to_l_ 00BD  
        __size_of_Lcd_Start 003D                      _ADCON0 001F                      _ADCON1 009F  
          ___llmod@dividend 0074                      ?_scale 003E                      _ADRESH 001E  
                    _ADRESL 009E            ___awdiv@dividend 0079                      _OSCCON 008F  
                 ??_Lcd_Cmd 0071            __end_of___xxtofl 1220            __end_of__powers_ 1044  
                    ___flge 10C4                      ___fleq 1CF6                   ??___fladd 005A  
                    ___wmul 1BD4                   ??___fldiv 0046                   ??___awdiv 007B  
                 ??___flneg 0074                   ??___awmod 0074                   ??___flmul 002C  
                 ??___flsub 007E                   ??___fltol 0055                   ??___lldiv 0078  
                 ??___llmod 0078                   ??___lwdiv 007A                   ??___lwmod 0074  
               ?_Lcd_SetBit 0070    Send_Char_USART@character 0070                      _fround 002E  
          ___awdiv@quotient 0022               ??_Timer_Delay 0070             ___awmod@divisor 0070  
           ___awmod@counter 0075          __size_of__Umul8_16 0027        Send_String_USART@str 0074  
                 ??_sprintf 00A5           ??_Send_Char_USART 0070             Lcd_Set_Cursor@y 0077  
           Lcd_Set_Cursor@z 0076                  ___flge@ff1 0070                  ___flge@ff2 0074  
              ___xxtofl@arg 007A                ___xxtofl@exp 0079                ___xxtofl@val 0070  
                ___fleq@ff1 0070                  ___fleq@ff2 0074     __end_of__initialization 07FC  
                ___flneg@f1 0070           __end_of_Lcd_Clear 1B30                  ___fltol@f1 0051  
         __end_of_Lcd_Start 1C70                 ?_Init_USART 0070                 ?_Init_Clock 0070  
            __pcstackCOMMON 0070               __end_of_scale 0C9F              _Lcd_Set_Cursor 1D44  
                __div_to_l_ 12DD         __end_of_Timer_Delay 10C4          _scaled_temperature 00D1  
           __div_to_l_@exp1 0025             __div_to_l_@cntr 0024                     ??_scale 0042  
           __div_to_l_@quot 0020                  __pbssBANK1 00C7                   ?_Init_ADC 0070  
                 ?_Read_ADC 0070            _Lcd_Print_String 1C70         __size_of_Lcd_SetBit 0022  
             __div_to_l_@f1 0070               __div_to_l_@f2 0074              _Lcd_Print_Char 0003  
         __end_of__Umul8_16 082A                  __pmaintext 1F12                     ?___flge 0070  
                   ?___fleq 0070                     ?___wmul 0070                     ?_fround 003E  
        Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 1D96                   ?___xxtofl 0070  
       __size_of_Init_USART 0016         __size_of_Init_Clock 0005                  __stringtab 1000  
                ??_Init_ADC 0070                  ??_Read_ADC 006E                     _Lcd_Cmd 1B57  
    __end_of_Lcd_Print_Char 002E           __end_of__npowers_ 1078                  _scale$1078 004C  
           __size_of___flge 00A2             __size_of___fleq 004E                     ___fladd 1578  
                   ___fldiv 139B                     ___awdiv 1EA9                     ___flneg 1B0D  
                   ___awmod 1DEA                     ___flmul 0C9F                     ___flsub 1BB0  
                   ___fltol 1F84                     ___lldiv 1E43             __size_of___wmul 0025  
                   ___llmod 1D96                     ___lwdiv 1CB2                     ___lwmod 1BF9  
           __size_of_fround 020B             ?_Lcd_Set_Cursor 0072                 _Timer_Delay 10B1  
                   __ptext1 1B6D                     __ptext2 1B18                     __ptext3 082A  
                   __ptext4 0239                     __ptext5 0940                     __ptext6 1DEA  
                   __ptext7 1EA9                     __ptext8 002E                     __ptext9 1BF9  
               ?__div_to_l_ 0070                     _dpowers 1078                     _rc_data 00C7  
                ??___xxtofl 0074            ___awmod@dividend 0072                     _sprintf 0239  
                   clrloop0 1B06        end_of_initialization 07FC             ?_Lcd_Print_Char 0070  
           ___lldiv@divisor 0070             ___lldiv@counter 007D                   _RCSTAbits 0018  
            __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0074                ??_Lcd_SetBit 0070  
             ??__tdiv_to_l_ 0078             _Send_Char_USART 1B18                   _PORTDbits 0008  
               ___fladd@grs 0065               ___xxtofl@sign 0078                   _TRISCbits 0087  
               ___fldiv@grs 0052                 ___fldiv@rem 004B                 ___flmul@grs 0032  
                 Read_ADC@i 00C3          __end_of_Lcd_SetBit 1BB0                   _TXSTAbits 0098  
       __size_of__div_to_l_ 00BE                ??_Init_USART 0070                ??_Init_Clock 0070  
                 _Lcd_Clear 1B23                   _Lcd_Start 1C33              __end_of___flge 1166  
            __end_of___fleq 1D44              __end_of___wmul 1BF9                 _BAUDCTLbits 0187  
  __end_of_Lcd_Print_String 1CB2           _scaled_float_data 00D5              __end_of_fround 0239  
       start_initialization 07F3         __end_of__tdiv_to_l_ 12DD          __end_of_Init_USART 1B57  
        __end_of_Init_Clock 1B05             ___llmod@divisor 0070           Lcd_Print_String@a 0075  
         Lcd_Print_String@i 007A           __size_of_Init_ADC 0011             ___llmod@counter 0079  
         __size_of_Read_ADC 0116     __end_of_Send_Char_USART 1B23                  ?_Lcd_Clear 0070  
                  ??___flge 0078                    ??___fleq 0078                    ??___wmul 0074  
                ?_Lcd_Start 0070                   __Umul8_16 0803                    ??_fround 0042  
Lcd_Print_Char@Lower_Nibble 0072               sprintf@tmpval 00B9                   ___fladd@a 0056  
                 ___fladd@b 0052                  fround@prec 0051                   ___fldiv@a 003E  
                 ___fldiv@b 0042                   ___flmul@a 0028                   ___flmul@b 0024  
                 ___flsub@a 0066                   ___flsub@b 006A                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0           __size_of___xxtofl 00BA  
                  ?_Lcd_Cmd 0070                 sprintf@flag 00AF                 sprintf@eexp 00B7  
               sprintf@fval 00BE                 sprintf@prec 00B1                   _char_data 00DB  
          ___lwdiv@dividend 0078            ??_Lcd_Set_Cursor 0073                    ?___fladd 0052  
                  ?___fldiv 003E                    ?___awdiv 0077                    ?___flneg 0070  
                  ?___awmod 0070                    ?___flmul 0024                    ?___flsub 0066  
                  ?___fltol 0051                    ?___lldiv 0070                    ?___llmod 0070  
                 __npowers_ 1044                  ?__Umul8_16 0070                    ?___lwdiv 0076  
                  ?___lwmod 0070                ?_Timer_Delay 0070                   __pstrings 1000  
               __tdiv_to_l_ 1220                ??__div_to_l_ 0078            ??_Lcd_Print_Char 0071  
          ___lwdiv@quotient 007B                    ?_sprintf 00A0              __size_of_scale 035F  
            ___wmul@product 0074                   clear_ram0 1B05                    _PIE1bits 008C  
                  Lcd_Cmd@a 0071                    _PIR1bits 000C          __end_of__div_to_l_ 139B  
               ??_Lcd_Clear 0072            ?_Send_Char_USART 0070                 ??_Lcd_Start 0072  
               __stringbase 100F           ___wmul@multiplier 0070                    _Init_ADC 1B30  
                  _Read_ADC 082A        Lcd_Set_Cursor@column 0072            __size_of_Lcd_Cmd 0016  
               ??__Umul8_16 0072            __size_of___fladd 0288            __size_of___fldiv 01DD  
          __size_of___awdiv 0069            __size_of___flneg 000B            __size_of___awmod 0059  
          __size_of___flmul 0361            __size_of___flsub 0024            __size_of___fltol 007C  
          __size_of___lldiv 0066            __size_of___llmod 0054            __size_of___lwdiv 0044  
          __size_of___lwmod 003A                 _fround$1076 004D                 _fround$1077 0049  
        __end_of__stringtab 1010           ?_Lcd_Print_String 0075                  sprintf@val 00B3  
                  ___xxtofl 1166          ??_Lcd_Print_String 0077             ___lwdiv@divisor 0076  
           ___lwdiv@counter 007D                    __ptext10 1CB2                    __ptext11 0C9F  
                  __ptext20 1BB0                    __ptext12 0803                    __ptext21 1578  
                  __ptext13 1220                    __ptext30 1B23                    __ptext22 1B0D  
                  __ptext14 12DD                    __ptext31 1B57                    __ptext23 10C4  
                  __ptext15 1166                    __ptext32 10B1                    __ptext24 1CF6  
                  __ptext16 1BD4                    __ptext33 1B8E                    __ptext25 139B  
                  __ptext17 1D96                    __ptext34 1B41                    __ptext26 1C33  
                  __ptext18 1E43                    __ptext35 1B00                    __ptext27 1D44  
                  __ptext19 1F84                    __ptext36 1B30                    __ptext28 1C70  
                  __ptext29 0003                    __powers_ 1010            __size_of_sprintf 05BA  
             __size_of_main 0072                    _int_data 00D9           _Send_String_USART 1B6D  
        ?_Send_String_USART 0070  Lcd_Print_Char@Upper_Nibble 0073         ??_Send_String_USART 0071  
      __size_of_Timer_Delay 0013                  _INTCONbits 000B                    scale@scl 0050  
 __end_of_Send_String_USART 1B8E                   sprintf@ap 00AE            __tdiv_to_l_@exp1 0025  
          __tdiv_to_l_@cntr 0024                   sprintf@sp 00BD            __tdiv_to_l_@quot 0020  
          ___lwmod@dividend 0072            ___lldiv@dividend 0074                   stringcode 100A  
        Lcd_Set_Cursor@temp 0078                ?__tdiv_to_l_ 0070      __Umul8_16@multiplicand 0070  
                  sprintf@c 00C2                    sprintf@f 00A0            ___lldiv@quotient 0079  
           ___lwmod@divisor 0070             ___lwmod@counter 0075                    stringdir 100A  
                  stringtab 1000           Lcd_Set_Cursor@row 0075               ___fladd@signs 0062  
              ___fladd@aexp 0063                ___fladd@bexp 0064        __Umul8_16@multiplier 0078  
         __Umul8_16@product 0074  
