

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 11 15:47:04 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314                           
   315                           	psect	strings
   316  1000                     __pstrings:	
   317  1000                     stringtab:	
   318  1000                     __stringtab:	
   319                           
   320                           ;	String table - string pointers are 1 byte each
   321  1000  1BFF               	btfsc	btemp+1,7
   322  1001  280A               	ljmp	stringcode
   323  1002  1383               	bcf	3,7
   324  1003  187F               	btfsc	btemp+1,0
   325  1004  1783               	bsf	3,7
   326  1005  0800               	movf	0,w
   327  1006  0A84               	incf	4,f
   328  1007  1903               	skipnz
   329  1008  0AFF               	incf	btemp+1,f
   330  1009  0008               	return
   331  100A                     stringcode:	
   332  100A                     stringdir:	
   333  100A  3010               	movlw	high stringdir
   334  100B  008A               	movwf	10
   335  100C  0804               	movf	4,w
   336  100D  0A84               	incf	4,f
   337  100E  0782               	addwf	2,f
   338  100F                     __stringbase:	
   339  100F  3400               	retlw	0
   340  1010                     __end_of__stringtab:	
   341  1010                     __powers_:	
   342  1010  3400               	retlw	0
   343  1011  3400               	retlw	0
   344  1012  3480               	retlw	128
   345  1013  343F               	retlw	63
   346  1014  3400               	retlw	0
   347  1015  3400               	retlw	0
   348  1016  3420               	retlw	32
   349  1017  3441               	retlw	65
   350  1018  3400               	retlw	0
   351  1019  3400               	retlw	0
   352  101A  34C8               	retlw	200
   353  101B  3442               	retlw	66
   354  101C  3400               	retlw	0
   355  101D  3400               	retlw	0
   356  101E  347A               	retlw	122
   357  101F  3444               	retlw	68
   358  1020  3400               	retlw	0
   359  1021  3440               	retlw	64
   360  1022  341C               	retlw	28
   361  1023  3446               	retlw	70
   362  1024  3400               	retlw	0
   363  1025  3450               	retlw	80
   364  1026  34C3               	retlw	195
   365  1027  3447               	retlw	71
   366  1028  3400               	retlw	0
   367  1029  3424               	retlw	36
   368  102A  3474               	retlw	116
   369  102B  3449               	retlw	73
   370  102C  3480               	retlw	128
   371  102D  3496               	retlw	150
   372  102E  3418               	retlw	24
   373  102F  344B               	retlw	75
   374  1030  3420               	retlw	32
   375  1031  34BC               	retlw	188
   376  1032  34BE               	retlw	190
   377  1033  344C               	retlw	76
   378  1034  3428               	retlw	40
   379  1035  346B               	retlw	107
   380  1036  346E               	retlw	110
   381  1037  344E               	retlw	78
   382  1038  34F9               	retlw	249
   383  1039  3402               	retlw	2
   384  103A  3415               	retlw	21
   385  103B  3450               	retlw	80
   386  103C  34EC               	retlw	236
   387  103D  3478               	retlw	120
   388  103E  34AD               	retlw	173
   389  103F  3460               	retlw	96
   390  1040  34CA               	retlw	202
   391  1041  34F2               	retlw	242
   392  1042  3449               	retlw	73
   393  1043  3471               	retlw	113
   394  1044                     __end_of__powers_:	
   395  1044                     __npowers_:	
   396  1044  3400               	retlw	0
   397  1045  3400               	retlw	0
   398  1046  3480               	retlw	128
   399  1047  343F               	retlw	63
   400  1048  34CD               	retlw	205
   401  1049  34CC               	retlw	204
   402  104A  34CC               	retlw	204
   403  104B  343D               	retlw	61
   404  104C  340A               	retlw	10
   405  104D  34D7               	retlw	215
   406  104E  3423               	retlw	35
   407  104F  343C               	retlw	60
   408  1050  346F               	retlw	111
   409  1051  3412               	retlw	18
   410  1052  3483               	retlw	131
   411  1053  343A               	retlw	58
   412  1054  3417               	retlw	23
   413  1055  34B7               	retlw	183
   414  1056  34D1               	retlw	209
   415  1057  3438               	retlw	56
   416  1058  34AC               	retlw	172
   417  1059  34C5               	retlw	197
   418  105A  3427               	retlw	39
   419  105B  3437               	retlw	55
   420  105C  34BD               	retlw	189
   421  105D  3437               	retlw	55
   422  105E  3486               	retlw	134
   423  105F  3435               	retlw	53
   424  1060  3495               	retlw	149
   425  1061  34BF               	retlw	191
   426  1062  34D6               	retlw	214
   427  1063  3433               	retlw	51
   428  1064  3477               	retlw	119
   429  1065  34CC               	retlw	204
   430  1066  342B               	retlw	43
   431  1067  3432               	retlw	50
   432  1068  345F               	retlw	95
   433  1069  3470               	retlw	112
   434  106A  3489               	retlw	137
   435  106B  3430               	retlw	48
   436  106C  34FF               	retlw	255
   437  106D  34E6               	retlw	230
   438  106E  34DB               	retlw	219
   439  106F  342E               	retlw	46
   440  1070  3408               	retlw	8
   441  1071  34E5               	retlw	229
   442  1072  343C               	retlw	60
   443  1073  341E               	retlw	30
   444  1074  3460               	retlw	96
   445  1075  3442               	retlw	66
   446  1076  34A2               	retlw	162
   447  1077  340D               	retlw	13
   448  1078                     __end_of__npowers_:	
   449  1078                     _dpowers:	
   450  1078  3401               	retlw	1
   451  1079  3400               	retlw	0
   452  107A  3400               	retlw	0
   453  107B  3400               	retlw	0
   454  107C  340A               	retlw	10
   455  107D  3400               	retlw	0
   456  107E  3400               	retlw	0
   457  107F  3400               	retlw	0
   458  1080  3464               	retlw	100
   459  1081  3400               	retlw	0
   460  1082  3400               	retlw	0
   461  1083  3400               	retlw	0
   462  1084  34E8               	retlw	232
   463  1085  3403               	retlw	3
   464  1086  3400               	retlw	0
   465  1087  3400               	retlw	0
   466  1088  3410               	retlw	16
   467  1089  3427               	retlw	39
   468  108A  3400               	retlw	0
   469  108B  3400               	retlw	0
   470  108C  34A0               	retlw	160
   471  108D  3486               	retlw	134
   472  108E  3401               	retlw	1
   473  108F  3400               	retlw	0
   474  1090  3440               	retlw	64
   475  1091  3442               	retlw	66
   476  1092  340F               	retlw	15
   477  1093  3400               	retlw	0
   478  1094  3480               	retlw	128
   479  1095  3496               	retlw	150
   480  1096  3498               	retlw	152
   481  1097  3400               	retlw	0
   482  1098  3400               	retlw	0
   483  1099  34E1               	retlw	225
   484  109A  34F5               	retlw	245
   485  109B  3405               	retlw	5
   486  109C  3400               	retlw	0
   487  109D  34CA               	retlw	202
   488  109E  349A               	retlw	154
   489  109F  343B               	retlw	59
   490  10A0                     __end_of_dpowers:	
   491  000C                     _PIR1bits	set	12
   492  0010                     _T1CON	set	16
   493  000F                     _TMR1H	set	15
   494  000E                     _TMR1L	set	14
   495  0008                     _PORTDbits	set	8
   496  001E                     _ADRESH	set	30
   497  001F                     _ADCON0	set	31
   498  008C                     _PIE1	set	140
   499  009E                     _ADRESL	set	158
   500  009F                     _ADCON1	set	159
   501  0085                     _TRISA	set	133
   502  0088                     _TRISD	set	136
   503  0188                     _ANSEL	set	392
   504  10A0                     STR_2:	
   505  10A0  3456               	retlw	86	;'V'
   506  10A1  346F               	retlw	111	;'o'
   507  10A2  346C               	retlw	108	;'l'
   508  10A3  3474               	retlw	116	;'t'
   509  10A4  3461               	retlw	97	;'a'
   510  10A5  346A               	retlw	106	;'j'
   511  10A6  3465               	retlw	101	;'e'
   512  10A7  3420               	retlw	32	;' '
   513  10A8  346D               	retlw	109	;'m'
   514  10A9  3465               	retlw	101	;'e'
   515  10AA  3464               	retlw	100	;'d'
   516  10AB  3469               	retlw	105	;'i'
   517  10AC  3464               	retlw	100	;'d'
   518  10AD  346F               	retlw	111	;'o'
   519  10AE  3400               	retlw	0
   520  10AF                     STR_1:	
   521  10AF  3425               	retlw	37	;'%'
   522  10B0  3466               	retlw	102	;'f'
   523  10B1  3420               	retlw	32	;' '
   524  10B2  3476               	retlw	118	;'v'
   525  10B3  346F               	retlw	111	;'o'
   526  10B4  346C               	retlw	108	;'l'
   527  10B5  3474               	retlw	116	;'t'
   528  10B6  3473               	retlw	115	;'s'
   529  10B7  3400               	retlw	0
   530                           
   531                           ; #config settings
   532  0000                     
   533                           	psect	cinit
   534  07F3                     start_initialization:	
   535  07F3                     __initialization:	
   536                           
   537                           ; Clear objects allocated to BANK1
   538  07F3  1383               	bcf	3,7	;select IRP bank0
   539  07F4  30C7               	movlw	low __pbssBANK1
   540  07F5  0084               	movwf	4
   541  07F6  30DD               	movlw	low (__pbssBANK1+22)
   542  07F7  120A  158A  2002  120A  118A  	fcall	clear_ram0
   543  07FC                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  07FC                     __end_of__initialization:	
   547  07FC  0183               	clrf	3
   548  07FD  160A  158A  2C17   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK1
   551  00C7                     __pbssBANK1:	
   552  00C7                     _scaled_float_data:	
   553  00C7                     	ds	4
   554  00CB                     _int_data:	
   555  00CB                     	ds	2
   556  00CD                     _char_data:	
   557  00CD                     	ds	16
   558                           
   559                           	psect	clrtext
   560  0802                     clear_ram0:	
   561                           ;	Called with FSR containing the base address, and
   562                           ;	W with the last address+1
   563                           
   564  0802  0064               	clrwdt	;clear the watchdog before getting into this loop
   565  0803                     clrloop0:	
   566  0803  0180               	clrf	0	;clear RAM location pointed to by FSR
   567  0804  0A84               	incf	4,f	;increment pointer
   568  0805  0604               	xorwf	4,w	;XOR with final address
   569  0806  1903               	btfsc	3,2	;have we reached the end yet?
   570  0807  3400               	retlw	0	;all done for this memory range, return
   571  0808  0604               	xorwf	4,w	;XOR again to restore value
   572  0809  2803               	goto	clrloop0	;do the next byte
   573                           
   574                           	psect	cstackBANK1
   575  00A0                     __pcstackBANK1:	
   576  00A0                     ?_sprintf:	
   577  00A0                     sprintf@f:	
   578                           ; 2 bytes @ 0x0
   579                           
   580                           
   581                           ; 1 bytes @ 0x0
   582  00A0                     	ds	5
   583  00A5                     ??_sprintf:	
   584                           
   585                           ; 1 bytes @ 0x5
   586  00A5                     	ds	5
   587  00AA                     _sprintf$840:	
   588                           
   589                           ; 4 bytes @ 0xA
   590  00AA                     	ds	4
   591  00AE                     sprintf@ap:	
   592                           
   593                           ; 1 bytes @ 0xE
   594  00AE                     	ds	1
   595  00AF                     sprintf@flag:	
   596                           
   597                           ; 2 bytes @ 0xF
   598  00AF                     	ds	2
   599  00B1                     sprintf@prec:	
   600                           
   601                           ; 2 bytes @ 0x11
   602  00B1                     	ds	2
   603  00B3                     sprintf@val:	
   604                           
   605                           ; 4 bytes @ 0x13
   606  00B3                     	ds	4
   607  00B7                     sprintf@eexp:	
   608                           
   609                           ; 2 bytes @ 0x17
   610  00B7                     	ds	2
   611  00B9                     sprintf@tmpval:	
   612                           
   613                           ; 4 bytes @ 0x19
   614  00B9                     	ds	4
   615  00BD                     sprintf@sp:	
   616                           
   617                           ; 1 bytes @ 0x1D
   618  00BD                     	ds	1
   619  00BE                     sprintf@fval:	
   620                           
   621                           ; 4 bytes @ 0x1E
   622  00BE                     	ds	4
   623  00C2                     sprintf@c:	
   624                           
   625                           ; 1 bytes @ 0x22
   626  00C2                     	ds	1
   627  00C3                     ADC_Read@i:	
   628                           
   629                           ; 2 bytes @ 0x23
   630  00C3                     	ds	2
   631  00C5                     ADC_Read@i_79:	
   632                           
   633                           ; 2 bytes @ 0x25
   634  00C5                     	ds	2
   635                           
   636                           	psect	cstackCOMMON
   637  0070                     __pcstackCOMMON:	
   638  0070                     ?___fleq:	
   639  0070                     ?___flge:	
   640                           ; 1 bit 
   641                           
   642  0070                     ?_Lcd_Start:	
   643                           ; 1 bit 
   644                           
   645  0070                     ?_Lcd_Clear:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_ADC_Init:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ??_ADC_Init:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_ADC_Read:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_Timer_Delay:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ??_Timer_Delay:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_Lcd_SetBit:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_Lcd_SetBit:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_Lcd_Cmd:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Print_Char:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?__Umul8_16:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_main:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     ?___wmul:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     ?___awmod:	
   685                           ; 2 bytes @ 0x0
   686                           
   687  0070                     ?___lwmod:	
   688                           ; 2 bytes @ 0x0
   689                           
   690  0070                     ?__tdiv_to_l_:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0070                     ?__div_to_l_:	
   694                           ; 4 bytes @ 0x0
   695                           
   696  0070                     ?___lldiv:	
   697                           ; 4 bytes @ 0x0
   698                           
   699  0070                     ?___flneg:	
   700                           ; 4 bytes @ 0x0
   701                           
   702  0070                     ?___llmod:	
   703                           ; 4 bytes @ 0x0
   704                           
   705  0070                     ?___xxtofl:	
   706                           ; 4 bytes @ 0x0
   707                           
   708  0070                     Lcd_SetBit@data_bit:	
   709                           ; 4 bytes @ 0x0
   710                           
   711  0070                     __Umul8_16@multiplicand:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ___wmul@multiplier:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ___awmod@divisor:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0070                     ___lwmod@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723  0070                     ___lldiv@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  0070                     __div_to_l_@f1:	
   727                           ; 4 bytes @ 0x0
   728                           
   729  0070                     ___fleq@ff1:	
   730                           ; 4 bytes @ 0x0
   731                           
   732  0070                     ___flge@ff1:	
   733                           ; 4 bytes @ 0x0
   734                           
   735  0070                     ___flneg@f1:	
   736                           ; 4 bytes @ 0x0
   737                           
   738  0070                     __tdiv_to_l_@f1:	
   739                           ; 4 bytes @ 0x0
   740                           
   741  0070                     ___llmod@divisor:	
   742                           ; 4 bytes @ 0x0
   743                           
   744  0070                     ___xxtofl@val:	
   745                           ; 4 bytes @ 0x0
   746                           
   747                           
   748                           ; 4 bytes @ 0x0
   749  0070                     	ds	1
   750  0071                     ??_Lcd_Cmd:	
   751  0071                     ??_Lcd_Print_Char:	
   752                           ; 1 bytes @ 0x1
   753                           
   754  0071                     Lcd_Cmd@a:	
   755                           ; 1 bytes @ 0x1
   756                           
   757                           
   758                           ; 1 bytes @ 0x1
   759  0071                     	ds	1
   760  0072                     ??_Lcd_Start:	
   761  0072                     ??_Lcd_Clear:	
   762                           ; 1 bytes @ 0x2
   763                           
   764  0072                     ?_Lcd_Set_Cursor:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0072                     ??__Umul8_16:	
   768                           ; 1 bytes @ 0x2
   769                           
   770  0072                     Lcd_Set_Cursor@column:	
   771                           ; 1 bytes @ 0x2
   772                           
   773  0072                     Lcd_Print_Char@Lower_Nibble:	
   774                           ; 1 bytes @ 0x2
   775                           
   776  0072                     ___wmul@multiplicand:	
   777                           ; 1 bytes @ 0x2
   778                           
   779  0072                     ___awmod@dividend:	
   780                           ; 2 bytes @ 0x2
   781                           
   782  0072                     ___lwmod@dividend:	
   783                           ; 2 bytes @ 0x2
   784                           
   785                           
   786                           ; 2 bytes @ 0x2
   787  0072                     	ds	1
   788  0073                     ??_Lcd_Set_Cursor:	
   789  0073                     Lcd_Print_Char@Upper_Nibble:	
   790                           ; 1 bytes @ 0x3
   791                           
   792                           
   793                           ; 1 bytes @ 0x3
   794  0073                     	ds	1
   795  0074                     ??___wmul:	
   796  0074                     ??___awmod:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     ??___flneg:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ??___lwmod:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     ??___xxtofl:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     Lcd_Print_Char@data:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     ___wmul@product:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0074                     __Umul8_16@product:	
   815                           ; 2 bytes @ 0x4
   816                           
   817  0074                     ___lldiv@dividend:	
   818                           ; 2 bytes @ 0x4
   819                           
   820  0074                     __div_to_l_@f2:	
   821                           ; 4 bytes @ 0x4
   822                           
   823  0074                     ___fleq@ff2:	
   824                           ; 4 bytes @ 0x4
   825                           
   826  0074                     ___flge@ff2:	
   827                           ; 4 bytes @ 0x4
   828                           
   829  0074                     __tdiv_to_l_@f2:	
   830                           ; 4 bytes @ 0x4
   831                           
   832  0074                     ___llmod@dividend:	
   833                           ; 4 bytes @ 0x4
   834                           
   835                           
   836                           ; 4 bytes @ 0x4
   837  0074                     	ds	1
   838  0075                     ?_Lcd_Print_String:	
   839  0075                     Lcd_Set_Cursor@row:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0075                     ___awmod@counter:	
   843                           ; 1 bytes @ 0x5
   844                           
   845  0075                     ___lwmod@counter:	
   846                           ; 1 bytes @ 0x5
   847                           
   848  0075                     Lcd_Print_String@a:	
   849                           ; 1 bytes @ 0x5
   850                           
   851                           
   852                           ; 2 bytes @ 0x5
   853  0075                     	ds	1
   854  0076                     ?___lwdiv:	
   855  0076                     Lcd_Set_Cursor@z:	
   856                           ; 2 bytes @ 0x6
   857                           
   858  0076                     ___awmod@sign:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0076                     ___lwdiv@divisor:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0076                     __Umul8_16@word_mpld:	
   865                           ; 2 bytes @ 0x6
   866                           
   867                           
   868                           ; 2 bytes @ 0x6
   869  0076                     	ds	1
   870  0077                     ??_Lcd_Print_String:	
   871  0077                     ?___awdiv:	
   872                           ; 1 bytes @ 0x7
   873                           
   874  0077                     Lcd_Set_Cursor@y:	
   875                           ; 2 bytes @ 0x7
   876                           
   877  0077                     ___awdiv@divisor:	
   878                           ; 1 bytes @ 0x7
   879                           
   880                           
   881                           ; 2 bytes @ 0x7
   882  0077                     	ds	1
   883  0078                     ??__tdiv_to_l_:	
   884  0078                     ??__div_to_l_:	
   885                           ; 1 bytes @ 0x8
   886                           
   887  0078                     ??___lldiv:	
   888                           ; 1 bytes @ 0x8
   889                           
   890  0078                     ??___fleq:	
   891                           ; 1 bytes @ 0x8
   892                           
   893  0078                     ??___flge:	
   894                           ; 1 bytes @ 0x8
   895                           
   896  0078                     ??___llmod:	
   897                           ; 1 bytes @ 0x8
   898                           
   899  0078                     Lcd_Set_Cursor@temp:	
   900                           ; 1 bytes @ 0x8
   901                           
   902  0078                     ___xxtofl@sign:	
   903                           ; 1 bytes @ 0x8
   904                           
   905  0078                     __Umul8_16@multiplier:	
   906                           ; 1 bytes @ 0x8
   907                           
   908  0078                     ___lwdiv@dividend:	
   909                           ; 1 bytes @ 0x8
   910                           
   911                           
   912                           ; 2 bytes @ 0x8
   913  0078                     	ds	1
   914  0079                     ___llmod@counter:	
   915  0079                     ___xxtofl@exp:	
   916                           ; 1 bytes @ 0x9
   917                           
   918  0079                     ___awdiv@dividend:	
   919                           ; 1 bytes @ 0x9
   920                           
   921  0079                     ___lldiv@quotient:	
   922                           ; 2 bytes @ 0x9
   923                           
   924                           
   925                           ; 4 bytes @ 0x9
   926  0079                     	ds	1
   927  007A                     ??___lwdiv:	
   928  007A                     Lcd_Print_String@i:	
   929                           ; 1 bytes @ 0xA
   930                           
   931  007A                     ___xxtofl@arg:	
   932                           ; 2 bytes @ 0xA
   933                           
   934                           
   935                           ; 4 bytes @ 0xA
   936  007A                     	ds	1
   937  007B                     ??___awdiv:	
   938  007B                     ___lwdiv@quotient:	
   939                           ; 1 bytes @ 0xB
   940                           
   941                           
   942                           ; 2 bytes @ 0xB
   943  007B                     	ds	2
   944  007D                     ___lldiv@counter:	
   945  007D                     ___lwdiv@counter:	
   946                           ; 1 bytes @ 0xD
   947                           
   948                           
   949                           ; 1 bytes @ 0xD
   950  007D                     	ds	1
   951  007E                     ??_main:	
   952  007E                     ??___flsub:	
   953                           ; 1 bytes @ 0xE
   954                           
   955                           
   956                           	psect	cstackBANK0
   957  0020                     __pcstackBANK0:	
   958                           ; 1 bytes @ 0xE
   959                           
   960  0020                     ___awdiv@counter:	
   961  0020                     __div_to_l_@quot:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0020                     __tdiv_to_l_@quot:	
   965                           ; 4 bytes @ 0x0
   966                           
   967                           
   968                           ; 4 bytes @ 0x0
   969  0020                     	ds	1
   970  0021                     ___awdiv@sign:	
   971                           
   972                           ; 1 bytes @ 0x1
   973  0021                     	ds	1
   974  0022                     ___awdiv@quotient:	
   975                           
   976                           ; 2 bytes @ 0x2
   977  0022                     	ds	2
   978  0024                     ?___flmul:	
   979  0024                     __div_to_l_@cntr:	
   980                           ; 4 bytes @ 0x4
   981                           
   982  0024                     __tdiv_to_l_@cntr:	
   983                           ; 1 bytes @ 0x4
   984                           
   985  0024                     ___flmul@b:	
   986                           ; 1 bytes @ 0x4
   987                           
   988                           
   989                           ; 4 bytes @ 0x4
   990  0024                     	ds	1
   991  0025                     __div_to_l_@exp1:	
   992  0025                     __tdiv_to_l_@exp1:	
   993                           ; 1 bytes @ 0x5
   994                           
   995                           
   996                           ; 1 bytes @ 0x5
   997  0025                     	ds	3
   998  0028                     ___flmul@a:	
   999                           
  1000                           ; 4 bytes @ 0x8
  1001  0028                     	ds	4
  1002  002C                     ??___flmul:	
  1003                           
  1004                           ; 1 bytes @ 0xC
  1005  002C                     	ds	5
  1006  0031                     ___flmul@sign:	
  1007                           
  1008                           ; 1 bytes @ 0x11
  1009  0031                     	ds	1
  1010  0032                     ___flmul@grs:	
  1011                           
  1012                           ; 4 bytes @ 0x12
  1013  0032                     	ds	4
  1014  0036                     ___flmul@aexp:	
  1015                           
  1016                           ; 1 bytes @ 0x16
  1017  0036                     	ds	1
  1018  0037                     ___flmul@bexp:	
  1019                           
  1020                           ; 1 bytes @ 0x17
  1021  0037                     	ds	1
  1022  0038                     ___flmul@prod:	
  1023                           
  1024                           ; 4 bytes @ 0x18
  1025  0038                     	ds	4
  1026  003C                     ___flmul@temp:	
  1027                           
  1028                           ; 2 bytes @ 0x1C
  1029  003C                     	ds	2
  1030  003E                     ?_fround:	
  1031  003E                     ?_scale:	
  1032                           ; 4 bytes @ 0x1E
  1033                           
  1034  003E                     ?___fldiv:	
  1035                           ; 4 bytes @ 0x1E
  1036                           
  1037  003E                     ___fldiv@a:	
  1038                           ; 4 bytes @ 0x1E
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x1E
  1042  003E                     	ds	4
  1043  0042                     ??_fround:	
  1044  0042                     ??_scale:	
  1045                           ; 1 bytes @ 0x22
  1046                           
  1047  0042                     ___fldiv@b:	
  1048                           ; 1 bytes @ 0x22
  1049                           
  1050                           
  1051                           ; 4 bytes @ 0x22
  1052  0042                     	ds	4
  1053  0046                     ??___fldiv:	
  1054                           
  1055                           ; 1 bytes @ 0x26
  1056  0046                     	ds	3
  1057  0049                     _fround$838:	
  1058                           
  1059                           ; 4 bytes @ 0x29
  1060  0049                     	ds	2
  1061  004B                     ___fldiv@rem:	
  1062                           
  1063                           ; 4 bytes @ 0x2B
  1064  004B                     	ds	1
  1065  004C                     _scale$839:	
  1066                           
  1067                           ; 4 bytes @ 0x2C
  1068  004C                     	ds	1
  1069  004D                     _fround$837:	
  1070                           
  1071                           ; 4 bytes @ 0x2D
  1072  004D                     	ds	2
  1073  004F                     ___fldiv@sign:	
  1074                           
  1075                           ; 1 bytes @ 0x2F
  1076  004F                     	ds	1
  1077  0050                     scale@scl:	
  1078  0050                     ___fldiv@new_exp:	
  1079                           ; 1 bytes @ 0x30
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x30
  1083  0050                     	ds	1
  1084  0051                     ?___fltol:	
  1085  0051                     fround@prec:	
  1086                           ; 4 bytes @ 0x31
  1087                           
  1088  0051                     ___fltol@f1:	
  1089                           ; 1 bytes @ 0x31
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x31
  1093  0051                     	ds	1
  1094  0052                     ?___fladd:	
  1095  0052                     ___fladd@b:	
  1096                           ; 4 bytes @ 0x32
  1097                           
  1098  0052                     ___fldiv@grs:	
  1099                           ; 4 bytes @ 0x32
  1100                           
  1101                           
  1102                           ; 4 bytes @ 0x32
  1103  0052                     	ds	3
  1104  0055                     ??___fltol:	
  1105                           
  1106                           ; 1 bytes @ 0x35
  1107  0055                     	ds	1
  1108  0056                     ___fldiv@bexp:	
  1109  0056                     ___fladd@a:	
  1110                           ; 1 bytes @ 0x36
  1111                           
  1112                           
  1113                           ; 4 bytes @ 0x36
  1114  0056                     	ds	1
  1115  0057                     ___fldiv@aexp:	
  1116                           
  1117                           ; 1 bytes @ 0x37
  1118  0057                     	ds	3
  1119  005A                     ??___fladd:	
  1120  005A                     ___fltol@sign1:	
  1121                           ; 1 bytes @ 0x3A
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x3A
  1125  005A                     	ds	1
  1126  005B                     ___fltol@exp1:	
  1127                           
  1128                           ; 1 bytes @ 0x3B
  1129  005B                     	ds	7
  1130  0062                     ___fladd@signs:	
  1131                           
  1132                           ; 1 bytes @ 0x42
  1133  0062                     	ds	1
  1134  0063                     ___fladd@aexp:	
  1135                           
  1136                           ; 1 bytes @ 0x43
  1137  0063                     	ds	1
  1138  0064                     ___fladd@bexp:	
  1139                           
  1140                           ; 1 bytes @ 0x44
  1141  0064                     	ds	1
  1142  0065                     ___fladd@grs:	
  1143                           
  1144                           ; 1 bytes @ 0x45
  1145  0065                     	ds	1
  1146  0066                     ?___flsub:	
  1147  0066                     ___flsub@a:	
  1148                           ; 4 bytes @ 0x46
  1149                           
  1150                           
  1151                           ; 4 bytes @ 0x46
  1152  0066                     	ds	4
  1153  006A                     ___flsub@b:	
  1154                           
  1155                           ; 4 bytes @ 0x4A
  1156  006A                     	ds	4
  1157  006E                     ??_ADC_Read:	
  1158                           
  1159                           ; 1 bytes @ 0x4E
  1160  006E                     	ds	1
  1161                           
  1162                           	psect	maintext
  1163  1C17                     __pmaintext:	
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 46 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  2   40[None  ] int 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : B00/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels required when called:    5
  1189 ;; This function calls:
  1190 ;;		_ADC_Init
  1191 ;;		_ADC_Read
  1192 ;;		_Lcd_Clear
  1193 ;;		_Lcd_Start
  1194 ;; This function is called by:
  1195 ;;		Startup code after reset
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           
  1200                           ;psect for function _main
  1201  1C17                     _main:	
  1202  1C17                     l3401:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1205                           
  1206                           
  1207                           ;main.c: 48:     TRISD = 0x00;
  1208  1C17  1683               	bsf	3,5	;RP0=1, select bank1
  1209  1C18  1303               	bcf	3,6	;RP1=0, select bank1
  1210  1C19  0188               	clrf	8	;volatile
  1211  1C1A                     l3403:	
  1212                           
  1213                           ;main.c: 49:     Lcd_Start();
  1214  1C1A  160A  158A  24FE  160A  158A  	fcall	_Lcd_Start
  1215  1C1F                     l3405:	
  1216                           
  1217                           ;main.c: 50:     Lcd_Clear();
  1218  1C1F  160A  158A  23D0  160A  158A  	fcall	_Lcd_Clear
  1219  1C24                     l3407:	
  1220                           
  1221                           ;main.c: 51:     ADC_Init();
  1222  1C24  160A  158A  23DD  160A  158A  	fcall	_ADC_Init
  1223  1C29                     l3409:	
  1224                           
  1225                           ;main.c: 54:         ADC_Read();
  1226  1C29  120A  158A  2063  160A  158A  	fcall	_ADC_Read
  1227  1C2E  2C29               	goto	l3409
  1228  1C2F  120A  118A  2800   	ljmp	start
  1229  1C32                     __end_of_main:	
  1230                           
  1231                           	psect	text1
  1232  1CFE                     __ptext1:	
  1233 ;; *************** function _Lcd_Start *****************
  1234 ;; Defined at:
  1235 ;;		line 73 in file "LCD_driver.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    2
  1256 ;; This function calls:
  1257 ;;		_Lcd_Cmd
  1258 ;;		_Lcd_SetBit
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _Lcd_Start
  1266  1CFE                     _Lcd_Start:	
  1267  1CFE                     l3359:	
  1268                           ;incstack = 0
  1269                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1270                           
  1271                           
  1272                           ;LCD_driver.c: 75:   Lcd_SetBit(0x00);
  1273  1CFE  3000               	movlw	0
  1274  1CFF  160A  158A  2432  160A  158A  	fcall	_Lcd_SetBit
  1275                           
  1276                           ;LCD_driver.c: 76:   Lcd_Cmd(0x03);
  1277  1D04  3003               	movlw	3
  1278  1D05  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1279                           
  1280                           ;LCD_driver.c: 77:   Lcd_Cmd(0x03);
  1281  1D0A  3003               	movlw	3
  1282  1D0B  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1283                           
  1284                           ;LCD_driver.c: 78:   Lcd_Cmd(0x02);
  1285  1D10  3002               	movlw	2
  1286  1D11  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1287                           
  1288                           ;LCD_driver.c: 79:   Lcd_Cmd(0x02);
  1289  1D16  3002               	movlw	2
  1290  1D17  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1291                           
  1292                           ;LCD_driver.c: 80:   Lcd_Cmd(0x08);
  1293  1D1C  3008               	movlw	8
  1294  1D1D  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1295                           
  1296                           ;LCD_driver.c: 81:   Lcd_Cmd(0x00);
  1297  1D22  3000               	movlw	0
  1298  1D23  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1299                           
  1300                           ;LCD_driver.c: 82:   Lcd_Cmd(0x0C);
  1301  1D28  300C               	movlw	12
  1302  1D29  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1303                           
  1304                           ;LCD_driver.c: 83:   Lcd_Cmd(0x00);
  1305  1D2E  3000               	movlw	0
  1306  1D2F  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1307                           
  1308                           ;LCD_driver.c: 84:   Lcd_Cmd(0x06);
  1309  1D34  3006               	movlw	6
  1310  1D35  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  1311  1D3A                     l97:	
  1312  1D3A  0008               	return
  1313  1D3B                     __end_of_Lcd_Start:	
  1314                           
  1315                           	psect	text2
  1316  0863                     __ptext2:	
  1317 ;; *************** function _ADC_Read *****************
  1318 ;; Defined at:
  1319 ;;		line 71 in file "main.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  i               2   37[BANK1 ] int 
  1324 ;;  i               2   35[BANK1 ] int 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       4       0       0
  1336 ;;      Temps:          0       1       0       0       0
  1337 ;;      Totals:         0       1       4       0       0
  1338 ;;Total ram usage:        5 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    4
  1341 ;; This function calls:
  1342 ;;		_Lcd_Clear
  1343 ;;		_Lcd_Print_String
  1344 ;;		_Lcd_Set_Cursor
  1345 ;;		_Timer_Delay
  1346 ;;		___fldiv
  1347 ;;		___flmul
  1348 ;;		___xxtofl
  1349 ;;		_sprintf
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _ADC_Read
  1357  0863                     _ADC_Read:	
  1358  0863                     l3361:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _ADC_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1361                           
  1362                           
  1363                           ;main.c: 73:     for(int i=0 ; i <=2; i++){
  1364  0863  1683               	bsf	3,5	;RP0=1, select bank1
  1365  0864  1303               	bcf	3,6	;RP1=0, select bank1
  1366  0865  01C3               	clrf	ADC_Read@i^(0+128)
  1367  0866  01C4               	clrf	(ADC_Read@i+1)^(0+128)
  1368  0867                     l3367:	
  1369                           
  1370                           ;main.c: 74:         Timer_Delay();
  1371  0867  160A  158A  23EE  120A  158A  	fcall	_Timer_Delay
  1372  086C                     l3369:	
  1373                           
  1374                           ;main.c: 75:      }
  1375  086C  3001               	movlw	1
  1376  086D  1683               	bsf	3,5	;RP0=1, select bank1
  1377  086E  1303               	bcf	3,6	;RP1=0, select bank1
  1378  086F  07C3               	addwf	ADC_Read@i^(0+128),f
  1379  0870  1803               	skipnc
  1380  0871  0AC4               	incf	(ADC_Read@i+1)^(0+128),f
  1381  0872  3000               	movlw	0
  1382  0873  07C4               	addwf	(ADC_Read@i+1)^(0+128),f
  1383  0874                     l3371:	
  1384  0874  0844               	movf	(ADC_Read@i+1)^(0+128),w
  1385  0875  3A80               	xorlw	128
  1386  0876  00FF               	movwf	btemp+1
  1387  0877  3080               	movlw	128
  1388  0878  027F               	subwf	btemp+1,w
  1389  0879  1D03               	skipz
  1390  087A  287D               	goto	u5845
  1391  087B  3003               	movlw	3
  1392  087C  0243               	subwf	ADC_Read@i^(0+128),w
  1393  087D                     u5845:	
  1394  087D  1C03               	skipc
  1395  087E  2880               	goto	u5841
  1396  087F  2881               	goto	u5840
  1397  0880                     u5841:	
  1398  0880  2867               	goto	l3367
  1399  0881                     u5840:	
  1400  0881                     l51:	
  1401                           
  1402                           ;main.c: 77:     ADCON0 |= (unsigned char)0x2;
  1403  0881  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0882  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0883  149F               	bsf	31,1	;volatile
  1406  0884                     l52:	
  1407                           ;main.c: 79:     while((ADCON0 & (unsigned char)0x2) == 0x2){};
  1408                           
  1409  0884  189F               	btfsc	31,1	;volatile
  1410  0885  2887               	goto	u5851
  1411  0886  2888               	goto	u5850
  1412  0887                     u5851:	
  1413  0887  2884               	goto	l52
  1414  0888                     u5850:	
  1415  0888                     l3373:	
  1416                           
  1417                           ;main.c: 82:     int_data = (unsigned short)((unsigned short)ADRESH<<8) + (unsigned shor
      +                          t)ADRESL;
  1418  0888  081E               	movf	30,w	;volatile
  1419  0889  1683               	bsf	3,5	;RP0=1, select bank1
  1420  088A  1303               	bcf	3,6	;RP1=0, select bank1
  1421  088B  00CC               	movwf	(_int_data+1)^(0+128)
  1422  088C  081E               	movf	30,w	;volatile
  1423  088D  00CB               	movwf	_int_data^(0+128)
  1424  088E                     l3375:	
  1425                           
  1426                           ;main.c: 83:     scaled_float_data = (float)((float)((float)int_data*(float)5.000000)/(f
      +                          loat)(1023));
  1427  088E  3044               	movlw	68
  1428  088F  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0890  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0891  00C1               	movwf	___fldiv@a+3
  1431  0892  307F               	movlw	127
  1432  0893  00C0               	movwf	___fldiv@a+2
  1433  0894  30C0               	movlw	192
  1434  0895  00BF               	movwf	___fldiv@a+1
  1435  0896  3000               	movlw	0
  1436  0897  00BE               	movwf	___fldiv@a
  1437  0898  3040               	movlw	64
  1438  0899  00A7               	movwf	___flmul@b+3
  1439  089A  30A0               	movlw	160
  1440  089B  00A6               	movwf	___flmul@b+2
  1441  089C  3000               	movlw	0
  1442  089D  00A5               	movwf	___flmul@b+1
  1443  089E  3000               	movlw	0
  1444  089F  00A4               	movwf	___flmul@b
  1445  08A0  1683               	bsf	3,5	;RP0=1, select bank1
  1446  08A1  1303               	bcf	3,6	;RP1=0, select bank1
  1447  08A2  084B               	movf	_int_data^(0+128),w
  1448  08A3  00F0               	movwf	___xxtofl@val
  1449  08A4  084C               	movf	(_int_data+1)^(0+128),w
  1450  08A5  00F1               	movwf	___xxtofl@val+1
  1451  08A6  01F2               	clrf	___xxtofl@val+2
  1452  08A7  01F3               	clrf	___xxtofl@val+3
  1453  08A8  3000               	movlw	0
  1454  08A9  160A  118A  2166  120A  158A  	fcall	___xxtofl
  1455  08AE  0873               	movf	?___xxtofl+3,w
  1456  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  1457  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  1458  08B1  00AB               	movwf	___flmul@a+3
  1459  08B2  0872               	movf	?___xxtofl+2,w
  1460  08B3  00AA               	movwf	___flmul@a+2
  1461  08B4  0871               	movf	?___xxtofl+1,w
  1462  08B5  00A9               	movwf	___flmul@a+1
  1463  08B6  0870               	movf	?___xxtofl,w
  1464  08B7  00A8               	movwf	___flmul@a
  1465  08B8  120A  158A  249F  120A  158A  	fcall	___flmul
  1466  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  1467  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  1468  08BF  0827               	movf	?___flmul+3,w
  1469  08C0  00C5               	movwf	___fldiv@b+3
  1470  08C1  0826               	movf	?___flmul+2,w
  1471  08C2  00C4               	movwf	___fldiv@b+2
  1472  08C3  0825               	movf	?___flmul+1,w
  1473  08C4  00C3               	movwf	___fldiv@b+1
  1474  08C5  0824               	movf	?___flmul,w
  1475  08C6  00C2               	movwf	___fldiv@b
  1476  08C7  160A  118A  239B  120A  158A  	fcall	___fldiv
  1477  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  1478  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  1479  08CE  0841               	movf	?___fldiv+3,w
  1480  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  1481  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  1482  08D1  00CA               	movwf	(_scaled_float_data+3)^(0+128)
  1483  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  1484  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  1485  08D4  0840               	movf	?___fldiv+2,w
  1486  08D5  1683               	bsf	3,5	;RP0=1, select bank1
  1487  08D6  1303               	bcf	3,6	;RP1=0, select bank1
  1488  08D7  00C9               	movwf	(_scaled_float_data+2)^(0+128)
  1489  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  1490  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  1491  08DA  083F               	movf	?___fldiv+1,w
  1492  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  1493  08DC  1303               	bcf	3,6	;RP1=0, select bank1
  1494  08DD  00C8               	movwf	(_scaled_float_data+1)^(0+128)
  1495  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  1496  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  1497  08E0  083E               	movf	?___fldiv,w
  1498  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  1499  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  1500  08E3  00C7               	movwf	_scaled_float_data^(0+128)
  1501  08E4                     l3377:	
  1502                           
  1503                           ;main.c: 84:     (void)sprintf(char_data, "%f volts", scaled_float_data);
  1504  08E4  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1505  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  1506  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  1507  08E7  00EE               	movwf	??_ADC_Read
  1508  08E8  086E               	movf	??_ADC_Read,w
  1509  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  1510  08EA  1303               	bcf	3,6	;RP1=0, select bank1
  1511  08EB  00A0               	movwf	sprintf@f^(0+128)
  1512  08EC  084A               	movf	(_scaled_float_data+3)^(0+128),w
  1513  08ED  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1514  08EE  0849               	movf	(_scaled_float_data+2)^(0+128),w
  1515  08EF  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1516  08F0  0848               	movf	(_scaled_float_data+1)^(0+128),w
  1517  08F1  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1518  08F2  0847               	movf	_scaled_float_data^(0+128),w
  1519  08F3  00A1               	movwf	(?_sprintf^(0+128)+1)
  1520  08F4  30CD               	movlw	(low (_char_data| 0))& (0+255)
  1521  08F5  120A  118A  2239  120A  158A  	fcall	_sprintf
  1522  08FA                     l3379:	
  1523                           
  1524                           ;main.c: 86:     Lcd_Clear();
  1525  08FA  160A  158A  23D0  120A  158A  	fcall	_Lcd_Clear
  1526  08FF                     l3381:	
  1527                           
  1528                           ;main.c: 87:     Lcd_Set_Cursor((char)1,(char)1);
  1529  08FF  01F2               	clrf	Lcd_Set_Cursor@column
  1530  0900  0AF2               	incf	Lcd_Set_Cursor@column,f
  1531  0901  3001               	movlw	1
  1532  0902  160A  158A  260F  120A  158A  	fcall	_Lcd_Set_Cursor
  1533  0907                     l3383:	
  1534                           
  1535                           ;main.c: 88:     Lcd_Print_String((char *)"Voltaje medido");
  1536  0907  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1537  0908  00F5               	movwf	Lcd_Print_String@a
  1538  0909  3080               	movlw	128
  1539  090A  00F6               	movwf	Lcd_Print_String@a+1
  1540  090B  160A  158A  253B  120A  158A  	fcall	_Lcd_Print_String
  1541  0910                     l3385:	
  1542                           
  1543                           ;main.c: 89:     Lcd_Set_Cursor((char)2,(char)1);
  1544  0910  01F2               	clrf	Lcd_Set_Cursor@column
  1545  0911  0AF2               	incf	Lcd_Set_Cursor@column,f
  1546  0912  3002               	movlw	2
  1547  0913  160A  158A  260F  120A  158A  	fcall	_Lcd_Set_Cursor
  1548  0918                     l3387:	
  1549                           
  1550                           ;main.c: 90:     Lcd_Print_String(char_data);
  1551  0918  30CD               	movlw	(low (_char_data| 0))& (0+255)
  1552  0919  00F5               	movwf	Lcd_Print_String@a
  1553  091A  3000               	movlw	0
  1554  091B  00F6               	movwf	Lcd_Print_String@a+1
  1555  091C  160A  158A  253B  120A  158A  	fcall	_Lcd_Print_String
  1556  0921                     l3389:	
  1557                           
  1558                           ;main.c: 92:      for(int i=0 ; i <=100; i++){
  1559  0921  1683               	bsf	3,5	;RP0=1, select bank1
  1560  0922  1303               	bcf	3,6	;RP1=0, select bank1
  1561  0923  01C5               	clrf	ADC_Read@i_79^(0+128)
  1562  0924  01C6               	clrf	(ADC_Read@i_79+1)^(0+128)
  1563  0925                     l3395:	
  1564                           
  1565                           ;main.c: 93:         Timer_Delay();
  1566  0925  160A  158A  23EE  120A  158A  	fcall	_Timer_Delay
  1567  092A                     l3397:	
  1568                           
  1569                           ;main.c: 94:      }
  1570  092A  3001               	movlw	1
  1571  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1572  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1573  092D  07C5               	addwf	ADC_Read@i_79^(0+128),f
  1574  092E  1803               	skipnc
  1575  092F  0AC6               	incf	(ADC_Read@i_79+1)^(0+128),f
  1576  0930  3000               	movlw	0
  1577  0931  07C6               	addwf	(ADC_Read@i_79+1)^(0+128),f
  1578  0932                     l3399:	
  1579  0932  0846               	movf	(ADC_Read@i_79+1)^(0+128),w
  1580  0933  3A80               	xorlw	128
  1581  0934  00FF               	movwf	btemp+1
  1582  0935  3080               	movlw	128
  1583  0936  027F               	subwf	btemp+1,w
  1584  0937  1D03               	skipz
  1585  0938  293B               	goto	u5865
  1586  0939  3065               	movlw	101
  1587  093A  0245               	subwf	ADC_Read@i_79^(0+128),w
  1588  093B                     u5865:	
  1589  093B  1C03               	skipc
  1590  093C  293E               	goto	u5861
  1591  093D  293F               	goto	u5860
  1592  093E                     u5861:	
  1593  093E  2925               	goto	l3395
  1594  093F                     u5860:	
  1595  093F                     l57:	
  1596  093F  0008               	return
  1597  0940                     __end_of_ADC_Read:	
  1598                           
  1599                           	psect	text3
  1600  0239                     __ptext3:	
  1601 ;; *************** function _sprintf *****************
  1602 ;; Defined at:
  1603 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  sp              1    wreg     PTR unsigned char 
  1606 ;;		 -> char_data(16), 
  1607 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1608 ;;		 -> STR_1(9), 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1611 ;;		 -> char_data(16), 
  1612 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1613 ;;  tmpval          4   25[BANK1 ] struct .
  1614 ;;  val             4   19[BANK1 ] unsigned long 
  1615 ;;  eexp            2   23[BANK1 ] int 
  1616 ;;  prec            2   17[BANK1 ] int 
  1617 ;;  flag            2   15[BANK1 ] unsigned short 
  1618 ;;  cp              2    0        PTR const unsigned char 
  1619 ;;  len             2    0        unsigned int 
  1620 ;;  width           2    0        int 
  1621 ;;  c               1   34[BANK1 ] unsigned char 
  1622 ;;  ap              1   14[BANK1 ] PTR void [1]
  1623 ;;		 -> ?_sprintf(2), 
  1624 ;;  d               1    0        unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2    0[BANK1 ] int 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       5       0       0
  1635 ;;      Locals:         0       0      25       0       0
  1636 ;;      Temps:          0       0       5       0       0
  1637 ;;      Totals:         0       0      35       0       0
  1638 ;;Total ram usage:       35 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    3
  1641 ;; This function calls:
  1642 ;;		___awdiv
  1643 ;;		___fladd
  1644 ;;		___fleq
  1645 ;;		___flge
  1646 ;;		___flmul
  1647 ;;		___flneg
  1648 ;;		___flsub
  1649 ;;		___fltol
  1650 ;;		___lldiv
  1651 ;;		___llmod
  1652 ;;		___wmul
  1653 ;;		___xxtofl
  1654 ;;		__div_to_l_
  1655 ;;		__tdiv_to_l_
  1656 ;;		_fround
  1657 ;;		_scale
  1658 ;; This function is called by:
  1659 ;;		_ADC_Read
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _sprintf
  1665  0239                     _sprintf:	
  1666                           
  1667                           ;incstack = 0
  1668                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1669                           ;sprintf@sp stored from wreg
  1670  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1671  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1672  023B  00BD               	movwf	sprintf@sp^(0+128)
  1673  023C                     l3017:	
  1674                           
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1676  023C  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1677  023D  00A5               	movwf	??_sprintf^(0+128)
  1678  023E  0825               	movf	??_sprintf^(0+128),w
  1679  023F  00AE               	movwf	sprintf@ap^(0+128)
  1680                           
  1681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1682  0240  2FDC               	goto	l3177
  1683  0241                     l3019:	
  1684                           
  1685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1686  0241  3025               	movlw	37
  1687  0242  0642               	xorwf	sprintf@c^(0+128),w
  1688  0243  1903               	btfsc	3,2
  1689  0244  2A46               	goto	u5211
  1690  0245  2A47               	goto	u5210
  1691  0246                     u5211:	
  1692  0246  2A53               	goto	l3025
  1693  0247                     u5210:	
  1694  0247                     l3021:	
  1695                           
  1696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1697  0247  0842               	movf	sprintf@c^(0+128),w
  1698  0248  00A5               	movwf	??_sprintf^(0+128)
  1699  0249  083D               	movf	sprintf@sp^(0+128),w
  1700  024A  0084               	movwf	4
  1701  024B  0825               	movf	??_sprintf^(0+128),w
  1702  024C  1383               	bcf	3,7	;select IRP bank0
  1703  024D  0080               	movwf	0
  1704  024E                     l3023:	
  1705  024E  3001               	movlw	1
  1706  024F  00A5               	movwf	??_sprintf^(0+128)
  1707  0250  0825               	movf	??_sprintf^(0+128),w
  1708  0251  07BD               	addwf	sprintf@sp^(0+128),f
  1709                           
  1710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1711  0252  2FDC               	goto	l3177
  1712  0253                     l3025:	
  1713                           
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1715  0253  01AF               	clrf	sprintf@flag^(0+128)
  1716  0254  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1717                           
  1718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1719  0255  2A58               	goto	l3029
  1720  0256                     l233:	
  1721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1722                           
  1723                           
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1725  0256  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1726                           
  1727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1728  0257  2A72               	goto	l3031
  1729  0258                     l3029:	
  1730  0258  3001               	movlw	1
  1731  0259  07A0               	addwf	sprintf@f^(0+128),f
  1732  025A  30FF               	movlw	-1
  1733  025B  0720               	addwf	sprintf@f^(0+128),w
  1734  025C  0084               	movwf	4
  1735  025D  160A  118A  200A  120A  118A  	fcall	stringdir
  1736  0262  00C2               	movwf	sprintf@c^(0+128)
  1737  0263  00A5               	movwf	??_sprintf^(0+128)
  1738  0264  01A6               	clrf	(??_sprintf^(0+128)+1)
  1739                           
  1740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1741                           ; Switch size 1, requested type "simple"
  1742                           ; Number of cases is 1, Range of values is 0 to 0
  1743                           ; switch strategies available:
  1744                           ; Name         Instructions Cycles
  1745                           ; simple_byte            4     3 (average)
  1746                           ; direct_byte           11     8 (fixed)
  1747                           ; jumptable            260     6 (fixed)
  1748                           ;	Chosen strategy is simple_byte
  1749  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1750  0266  3A00               	xorlw	0	; case 0
  1751  0267  1903               	skipnz
  1752  0268  2A6A               	goto	l3441
  1753  0269  2FDC               	goto	l3177
  1754  026A                     l3441:	
  1755                           
  1756                           ; Switch size 1, requested type "simple"
  1757                           ; Number of cases is 2, Range of values is 0 to 102
  1758                           ; switch strategies available:
  1759                           ; Name         Instructions Cycles
  1760                           ; simple_byte            7     4 (average)
  1761                           ; jumptable            260     6 (fixed)
  1762                           ;	Chosen strategy is simple_byte
  1763  026A  0825               	movf	??_sprintf^(0+128),w
  1764  026B  3A00               	xorlw	0	; case 0
  1765  026C  1903               	skipnz
  1766  026D  2FEE               	goto	l3179
  1767  026E  3A66               	xorlw	102	; case 102
  1768  026F  1903               	skipnz
  1769  0270  2A56               	goto	l233
  1770  0271  2FDC               	goto	l3177
  1771  0272                     l3031:	
  1772                           
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1774  0272  3000               	movlw	0
  1775  0273  052F               	andwf	sprintf@flag^(0+128),w
  1776  0274  00A5               	movwf	??_sprintf^(0+128)
  1777  0275  3007               	movlw	7
  1778  0276  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1779  0277  00A6               	movwf	(??_sprintf+1)^(0+128)
  1780  0278  0825               	movf	??_sprintf^(0+128),w
  1781  0279  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1782  027A  1903               	btfsc	3,2
  1783  027B  2A7D               	goto	u5221
  1784  027C  2A7E               	goto	u5220
  1785  027D                     u5221:	
  1786  027D  2FC8               	goto	l3171
  1787  027E                     u5220:	
  1788  027E                     l3033:	
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  1791  027E  3006               	movlw	6
  1792  027F  00B1               	movwf	sprintf@prec^(0+128)
  1793  0280  3000               	movlw	0
  1794  0281  00B2               	movwf	(sprintf@prec^(0+128)+1)
  1795  0282                     l3035:	
  1796                           
  1797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1798  0282  082E               	movf	sprintf@ap^(0+128),w
  1799  0283  0084               	movwf	4
  1800  0284  1383               	bcf	3,7	;select IRP bank0
  1801  0285  0800               	movf	0,w
  1802  0286  00BE               	movwf	sprintf@fval^(0+128)
  1803  0287  0A84               	incf	4,f
  1804  0288  0800               	movf	0,w
  1805  0289  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1806  028A  0A84               	incf	4,f
  1807  028B  0800               	movf	0,w
  1808  028C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1809  028D  0A84               	incf	4,f
  1810  028E  0800               	movf	0,w
  1811  028F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1812  0290                     l3037:	
  1813  0290  3004               	movlw	4
  1814  0291  00A5               	movwf	??_sprintf^(0+128)
  1815  0292  0825               	movf	??_sprintf^(0+128),w
  1816  0293  07AE               	addwf	sprintf@ap^(0+128),f
  1817  0294                     l3039:	
  1818                           
  1819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  1820  0294  0841               	movf	(sprintf@fval+3)^(0+128),w
  1821  0295  00F3               	movwf	___flge@ff1+3
  1822  0296  0840               	movf	(sprintf@fval+2)^(0+128),w
  1823  0297  00F2               	movwf	___flge@ff1+2
  1824  0298  083F               	movf	(sprintf@fval+1)^(0+128),w
  1825  0299  00F1               	movwf	___flge@ff1+1
  1826  029A  083E               	movf	sprintf@fval^(0+128),w
  1827  029B  00F0               	movwf	___flge@ff1
  1828  029C  3000               	movlw	0
  1829  029D  00F7               	movwf	___flge@ff2+3
  1830  029E  3000               	movlw	0
  1831  029F  00F6               	movwf	___flge@ff2+2
  1832  02A0  3000               	movlw	0
  1833  02A1  00F5               	movwf	___flge@ff2+1
  1834  02A2  3000               	movlw	0
  1835  02A3  00F4               	movwf	___flge@ff2
  1836  02A4  160A  118A  20C4  120A  118A  	fcall	___flge
  1837  02A9  1803               	btfsc	3,0
  1838  02AA  2AAC               	goto	u5231
  1839  02AB  2AAD               	goto	u5230
  1840  02AC                     u5231:	
  1841  02AC  2ACA               	goto	l3045
  1842  02AD                     u5230:	
  1843  02AD                     l3041:	
  1844                           
  1845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  1846  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  1847  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  1848  02AF  0841               	movf	(sprintf@fval+3)^(0+128),w
  1849  02B0  00F3               	movwf	___flneg@f1+3
  1850  02B1  0840               	movf	(sprintf@fval+2)^(0+128),w
  1851  02B2  00F2               	movwf	___flneg@f1+2
  1852  02B3  083F               	movf	(sprintf@fval+1)^(0+128),w
  1853  02B4  00F1               	movwf	___flneg@f1+1
  1854  02B5  083E               	movf	sprintf@fval^(0+128),w
  1855  02B6  00F0               	movwf	___flneg@f1
  1856  02B7  160A  118A  20B9  120A  118A  	fcall	___flneg
  1857  02BC  0873               	movf	?___flneg+3,w
  1858  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1859  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1860  02BF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1861  02C0  0872               	movf	?___flneg+2,w
  1862  02C1  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1863  02C2  0871               	movf	?___flneg+1,w
  1864  02C3  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1865  02C4  0870               	movf	?___flneg,w
  1866  02C5  00BE               	movwf	sprintf@fval^(0+128)
  1867  02C6                     l3043:	
  1868                           
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  1870  02C6  3003               	movlw	3
  1871  02C7  04AF               	iorwf	sprintf@flag^(0+128),f
  1872  02C8  3000               	movlw	0
  1873  02C9  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1874  02CA                     l3045:	
  1875                           
  1876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  1877  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1878  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1879  02CC  01B7               	clrf	sprintf@eexp^(0+128)
  1880  02CD  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  1881  02CE                     l3047:	
  1882                           
  1883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  1884  02CE  0841               	movf	(sprintf@fval+3)^(0+128),w
  1885  02CF  00F3               	movwf	___fleq@ff1+3
  1886  02D0  0840               	movf	(sprintf@fval+2)^(0+128),w
  1887  02D1  00F2               	movwf	___fleq@ff1+2
  1888  02D2  083F               	movf	(sprintf@fval+1)^(0+128),w
  1889  02D3  00F1               	movwf	___fleq@ff1+1
  1890  02D4  083E               	movf	sprintf@fval^(0+128),w
  1891  02D5  00F0               	movwf	___fleq@ff1
  1892  02D6  3000               	movlw	0
  1893  02D7  00F7               	movwf	___fleq@ff2+3
  1894  02D8  3000               	movlw	0
  1895  02D9  00F6               	movwf	___fleq@ff2+2
  1896  02DA  3000               	movlw	0
  1897  02DB  00F5               	movwf	___fleq@ff2+1
  1898  02DC  3000               	movlw	0
  1899  02DD  00F4               	movwf	___fleq@ff2
  1900  02DE  160A  158A  25C1  120A  118A  	fcall	___fleq
  1901  02E3  1803               	btfsc	3,0
  1902  02E4  2AE6               	goto	u5241
  1903  02E5  2AE7               	goto	u5240
  1904  02E6                     u5241:	
  1905  02E6  2BD7               	goto	l3073
  1906  02E7                     u5240:	
  1907  02E7                     l3049:	
  1908                           
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1910  02E7  1003               	clrc
  1911  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1912  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1913  02EA  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1914  02EB  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1915  02EC  3E82               	addlw	130
  1916  02ED  00B7               	movwf	sprintf@eexp^(0+128)
  1917  02EE  30FF               	movlw	255
  1918  02EF  1803               	skipnc
  1919  02F0  3000               	movlw	0
  1920  02F1  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  1921  02F2                     l3051:	
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  1924  02F2  30FF               	movlw	255
  1925  02F3  07B7               	addwf	sprintf@eexp^(0+128),f
  1926  02F4  1803               	skipnc
  1927  02F5  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1928  02F6  30FF               	movlw	255
  1929  02F7  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1930  02F8                     l3053:	
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  1933  02F8  3003               	movlw	3
  1934  02F9  00F0               	movwf	___wmul@multiplier
  1935  02FA  3000               	movlw	0
  1936  02FB  00F1               	movwf	___wmul@multiplier+1
  1937  02FC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1938  02FD  00F3               	movwf	___wmul@multiplicand+1
  1939  02FE  0837               	movf	sprintf@eexp^(0+128),w
  1940  02FF  00F2               	movwf	___wmul@multiplicand
  1941  0300  160A  158A  2478  120A  118A  	fcall	___wmul
  1942  0305  0871               	movf	?___wmul+1,w
  1943  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1944  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1945  0308  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  1946  0309  0870               	movf	?___wmul,w
  1947  030A  00B7               	movwf	sprintf@eexp^(0+128)
  1948  030B                     l3055:	
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  1951  030B  300A               	movlw	10
  1952  030C  00F7               	movwf	___awdiv@divisor
  1953  030D  3000               	movlw	0
  1954  030E  00F8               	movwf	___awdiv@divisor+1
  1955  030F  0838               	movf	(sprintf@eexp+1)^(0+128),w
  1956  0310  00FA               	movwf	___awdiv@dividend+1
  1957  0311  0837               	movf	sprintf@eexp^(0+128),w
  1958  0312  00F9               	movwf	___awdiv@dividend
  1959  0313  160A  158A  271B  120A  118A  	fcall	___awdiv
  1960  0318  0878               	movf	?___awdiv+1,w
  1961  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1962  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1963  031B  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  1964  031C  0877               	movf	?___awdiv,w
  1965  031D  00B7               	movwf	sprintf@eexp^(0+128)
  1966  031E                     l3057:	
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  1969  031E  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  1970  031F  2B21               	goto	u5251
  1971  0320  2B22               	goto	u5250
  1972  0321                     u5251:	
  1973  0321  2B28               	goto	l3061
  1974  0322                     u5250:	
  1975  0322                     l3059:	
  1976                           
  1977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1978  0322  30FF               	movlw	255
  1979  0323  07B7               	addwf	sprintf@eexp^(0+128),f
  1980  0324  1803               	skipnc
  1981  0325  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  1982  0326  30FF               	movlw	255
  1983  0327  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  1984  0328                     l3061:	
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  1987  0328  0337               	decf	sprintf@eexp^(0+128),w
  1988  0329  3AFF               	xorlw	255
  1989  032A  120A  158A  2140  120A  118A  	fcall	_scale
  1990  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0331  0841               	movf	?_scale+3,w
  1993  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1994  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1995  0334  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  1996  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0337  0840               	movf	?_scale+2,w
  1999  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2000  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2001  033A  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2002  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2003  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2004  033D  083F               	movf	?_scale+1,w
  2005  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2006  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0340  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2008  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0343  083E               	movf	?_scale,w
  2011  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2013  0346  00B9               	movwf	sprintf@tmpval^(0+128)
  2014  0347                     l3063:	
  2015                           
  2016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2017  0347  0841               	movf	(sprintf@fval+3)^(0+128),w
  2018  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2020  034A  00A7               	movwf	___flmul@b+3
  2021  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2022  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2023  034D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2024  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2025  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2026  0350  00A6               	movwf	___flmul@b+2
  2027  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2029  0353  083F               	movf	(sprintf@fval+1)^(0+128),w
  2030  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0356  00A5               	movwf	___flmul@b+1
  2033  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2034  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2035  0359  083E               	movf	sprintf@fval^(0+128),w
  2036  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2037  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2038  035C  00A4               	movwf	___flmul@b
  2039  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2040  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2041  035F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2042  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0362  00AB               	movwf	___flmul@a+3
  2045  0363  1683               	bsf	3,5	;RP0=1, select bank1
  2046  0364  1303               	bcf	3,6	;RP1=0, select bank1
  2047  0365  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2048  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0368  00AA               	movwf	___flmul@a+2
  2051  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2052  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2053  036B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2054  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2055  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2056  036E  00A9               	movwf	___flmul@a+1
  2057  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2058  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2059  0371  0839               	movf	sprintf@tmpval^(0+128),w
  2060  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0374  00A8               	movwf	___flmul@a
  2063  0375  120A  158A  249F  120A  118A  	fcall	___flmul
  2064  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2065  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2066  037C  0827               	movf	?___flmul+3,w
  2067  037D  1683               	bsf	3,5	;RP0=1, select bank1
  2068  037E  1303               	bcf	3,6	;RP1=0, select bank1
  2069  037F  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2070  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0382  0826               	movf	?___flmul+2,w
  2073  0383  1683               	bsf	3,5	;RP0=1, select bank1
  2074  0384  1303               	bcf	3,6	;RP1=0, select bank1
  2075  0385  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2076  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0388  0825               	movf	?___flmul+1,w
  2079  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2080  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2081  038B  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2082  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2083  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2084  038E  0824               	movf	?___flmul,w
  2085  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0391  00B9               	movwf	sprintf@tmpval^(0+128)
  2088  0392                     l3065:	
  2089                           
  2090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2091  0392  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2092  0393  00F3               	movwf	___flge@ff1+3
  2093  0394  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2094  0395  00F2               	movwf	___flge@ff1+2
  2095  0396  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2096  0397  00F1               	movwf	___flge@ff1+1
  2097  0398  0839               	movf	sprintf@tmpval^(0+128),w
  2098  0399  00F0               	movwf	___flge@ff1
  2099  039A  303F               	movlw	63
  2100  039B  00F7               	movwf	___flge@ff2+3
  2101  039C  3080               	movlw	128
  2102  039D  00F6               	movwf	___flge@ff2+2
  2103  039E  3000               	movlw	0
  2104  039F  00F5               	movwf	___flge@ff2+1
  2105  03A0  3000               	movlw	0
  2106  03A1  00F4               	movwf	___flge@ff2
  2107  03A2  160A  118A  20C4  120A  118A  	fcall	___flge
  2108  03A7  1803               	btfsc	3,0
  2109  03A8  2BAA               	goto	u5261
  2110  03A9  2BAB               	goto	u5260
  2111  03AA                     u5261:	
  2112  03AA  2BB4               	goto	l3069
  2113  03AB                     u5260:	
  2114  03AB                     l3067:	
  2115                           
  2116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2117  03AB  30FF               	movlw	255
  2118  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2119  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2120  03AE  07B7               	addwf	sprintf@eexp^(0+128),f
  2121  03AF  1803               	skipnc
  2122  03B0  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2123  03B1  30FF               	movlw	255
  2124  03B2  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2125  03B3  2BD7               	goto	l3073
  2126  03B4                     l3069:	
  2127  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2128  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2129  03B6  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2130  03B7  00F3               	movwf	___flge@ff1+3
  2131  03B8  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2132  03B9  00F2               	movwf	___flge@ff1+2
  2133  03BA  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2134  03BB  00F1               	movwf	___flge@ff1+1
  2135  03BC  0839               	movf	sprintf@tmpval^(0+128),w
  2136  03BD  00F0               	movwf	___flge@ff1
  2137  03BE  3041               	movlw	65
  2138  03BF  00F7               	movwf	___flge@ff2+3
  2139  03C0  3020               	movlw	32
  2140  03C1  00F6               	movwf	___flge@ff2+2
  2141  03C2  3000               	movlw	0
  2142  03C3  00F5               	movwf	___flge@ff2+1
  2143  03C4  3000               	movlw	0
  2144  03C5  00F4               	movwf	___flge@ff2
  2145  03C6  160A  118A  20C4  120A  118A  	fcall	___flge
  2146  03CB  1C03               	btfss	3,0
  2147  03CC  2BCE               	goto	u5271
  2148  03CD  2BCF               	goto	u5270
  2149  03CE                     u5271:	
  2150  03CE  2BD7               	goto	l3073
  2151  03CF                     u5270:	
  2152  03CF                     l3071:	
  2153                           
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2155  03CF  3001               	movlw	1
  2156  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2157  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2158  03D2  07B7               	addwf	sprintf@eexp^(0+128),f
  2159  03D3  1803               	skipnc
  2160  03D4  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2161  03D5  3000               	movlw	0
  2162  03D6  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2163  03D7                     l3073:	
  2164  03D7                     l3075:	
  2165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2166                           
  2167                           
  2168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2169  03D7  3006               	movlw	6
  2170  03D8  120A  118A  202E  120A  118A  	fcall	_fround
  2171  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2172  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2173  03DF  0841               	movf	?_fround+3,w
  2174  03E0  00D5               	movwf	___fladd@b+3
  2175  03E1  0840               	movf	?_fround+2,w
  2176  03E2  00D4               	movwf	___fladd@b+2
  2177  03E3  083F               	movf	?_fround+1,w
  2178  03E4  00D3               	movwf	___fladd@b+1
  2179  03E5  083E               	movf	?_fround,w
  2180  03E6  00D2               	movwf	___fladd@b
  2181  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2182  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2183  03E9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2184  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2185  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2186  03EC  00D9               	movwf	___fladd@a+3
  2187  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2188  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2189  03EF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2190  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2191  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2192  03F2  00D8               	movwf	___fladd@a+2
  2193  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2194  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2195  03F5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2196  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2197  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2198  03F8  00D7               	movwf	___fladd@a+1
  2199  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2200  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2201  03FB  083E               	movf	sprintf@fval^(0+128),w
  2202  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2203  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2204  03FE  00D6               	movwf	___fladd@a
  2205  03FF  160A  118A  2578  120A  118A  	fcall	___fladd
  2206  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0406  0855               	movf	?___fladd+3,w
  2209  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0409  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2212  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2213  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2214  040C  0854               	movf	?___fladd+2,w
  2215  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2216  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2217  040F  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2218  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0412  0853               	movf	?___fladd+1,w
  2221  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2222  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0415  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2224  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0418  0852               	movf	?___fladd,w
  2227  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2228  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2229  041B  00BE               	movwf	sprintf@fval^(0+128)
  2230  041C                     l3077:	
  2231                           
  2232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2233  041C  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2234  041D  3A80               	xorlw	128
  2235  041E  00FF               	movwf	btemp+1
  2236  041F  3080               	movlw	128
  2237  0420  027F               	subwf	btemp+1,w
  2238  0421  1D03               	skipz
  2239  0422  2C25               	goto	u5285
  2240  0423  300A               	movlw	10
  2241  0424  0237               	subwf	sprintf@eexp^(0+128),w
  2242  0425                     u5285:	
  2243  0425  1803               	skipnc
  2244  0426  2C28               	goto	u5281
  2245  0427  2C29               	goto	u5280
  2246  0428                     u5281:	
  2247  0428  2C7A               	goto	l3085
  2248  0429                     u5280:	
  2249  0429                     l3079:	
  2250  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2251  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2252  042B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2253  042C  00F3               	movwf	___fleq@ff1+3
  2254  042D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2255  042E  00F2               	movwf	___fleq@ff1+2
  2256  042F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2257  0430  00F1               	movwf	___fleq@ff1+1
  2258  0431  083E               	movf	sprintf@fval^(0+128),w
  2259  0432  00F0               	movwf	___fleq@ff1
  2260  0433  3000               	movlw	0
  2261  0434  00F7               	movwf	___fleq@ff2+3
  2262  0435  3000               	movlw	0
  2263  0436  00F6               	movwf	___fleq@ff2+2
  2264  0437  3000               	movlw	0
  2265  0438  00F5               	movwf	___fleq@ff2+1
  2266  0439  3000               	movlw	0
  2267  043A  00F4               	movwf	___fleq@ff2
  2268  043B  160A  158A  25C1  120A  118A  	fcall	___fleq
  2269  0440  1803               	btfsc	3,0
  2270  0441  2C43               	goto	u5291
  2271  0442  2C44               	goto	u5290
  2272  0443                     u5291:	
  2273  0443  2CEC               	goto	l3099
  2274  0444                     u5290:	
  2275  0444                     l3081:	
  2276  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2278  0446  0841               	movf	(sprintf@fval+3)^(0+128),w
  2279  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0449  00D4               	movwf	___fltol@f1+3
  2282  044A  1683               	bsf	3,5	;RP0=1, select bank1
  2283  044B  1303               	bcf	3,6	;RP1=0, select bank1
  2284  044C  0840               	movf	(sprintf@fval+2)^(0+128),w
  2285  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2286  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2287  044F  00D3               	movwf	___fltol@f1+2
  2288  0450  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0451  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2291  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0455  00D2               	movwf	___fltol@f1+1
  2294  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0458  083E               	movf	sprintf@fval^(0+128),w
  2297  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2298  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2299  045B  00D1               	movwf	___fltol@f1
  2300  045C  160A  158A  2784  120A  118A  	fcall	___fltol
  2301  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0463  0854               	movf	?___fltol+3,w
  2304  0464  0453               	iorwf	?___fltol+2,w
  2305  0465  0452               	iorwf	?___fltol+1,w
  2306  0466  0451               	iorwf	?___fltol,w
  2307  0467  1D03               	skipz
  2308  0468  2C6A               	goto	u5301
  2309  0469  2C6B               	goto	u5300
  2310  046A                     u5301:	
  2311  046A  2CEC               	goto	l3099
  2312  046B                     u5300:	
  2313  046B                     l3083:	
  2314  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2315  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2316  046D  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2317  046E  3A80               	xorlw	128
  2318  046F  00FF               	movwf	btemp+1
  2319  0470  3080               	movlw	128
  2320  0471  027F               	subwf	btemp+1,w
  2321  0472  1D03               	skipz
  2322  0473  2C76               	goto	u5315
  2323  0474  3002               	movlw	2
  2324  0475  0237               	subwf	sprintf@eexp^(0+128),w
  2325  0476                     u5315:	
  2326  0476  1C03               	skipc
  2327  0477  2C79               	goto	u5311
  2328  0478  2C7A               	goto	u5310
  2329  0479                     u5311:	
  2330  0479  2CEC               	goto	l3099
  2331  047A                     u5310:	
  2332  047A                     l3085:	
  2333                           
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2335  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2336  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2337  047C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2338  047D  00F3               	movwf	___flge@ff1+3
  2339  047E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2340  047F  00F2               	movwf	___flge@ff1+2
  2341  0480  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2342  0481  00F1               	movwf	___flge@ff1+1
  2343  0482  0839               	movf	sprintf@tmpval^(0+128),w
  2344  0483  00F0               	movwf	___flge@ff1
  2345  0484  3040               	movlw	64
  2346  0485  00F7               	movwf	___flge@ff2+3
  2347  0486  3089               	movlw	137
  2348  0487  00F6               	movwf	___flge@ff2+2
  2349  0488  3070               	movlw	112
  2350  0489  00F5               	movwf	___flge@ff2+1
  2351  048A  305F               	movlw	95
  2352  048B  00F4               	movwf	___flge@ff2
  2353  048C  160A  118A  20C4  120A  118A  	fcall	___flge
  2354  0491  1803               	btfsc	3,0
  2355  0492  2C94               	goto	u5321
  2356  0493  2C95               	goto	u5320
  2357  0494                     u5321:	
  2358  0494  2C9E               	goto	l3089
  2359  0495                     u5320:	
  2360  0495                     l3087:	
  2361                           
  2362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2363  0495  30F7               	movlw	247
  2364  0496  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0497  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0498  07B7               	addwf	sprintf@eexp^(0+128),f
  2367  0499  1803               	skipnc
  2368  049A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2369  049B  30FF               	movlw	255
  2370  049C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2371                           
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2373  049D  2CA6               	goto	l3091
  2374  049E                     l3089:	
  2375                           
  2376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2377  049E  30F8               	movlw	248
  2378  049F  1683               	bsf	3,5	;RP0=1, select bank1
  2379  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  2380  04A1  07B7               	addwf	sprintf@eexp^(0+128),f
  2381  04A2  1803               	skipnc
  2382  04A3  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2383  04A4  30FF               	movlw	255
  2384  04A5  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2385  04A6                     l3091:	
  2386                           
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2388  04A6  0837               	movf	sprintf@eexp^(0+128),w
  2389  04A7  120A  158A  2140  120A  118A  	fcall	_scale
  2390  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2391  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2392  04AE  0841               	movf	?_scale+3,w
  2393  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  2394  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  2395  04B1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2396  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2397  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2398  04B4  0840               	movf	?_scale+2,w
  2399  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2400  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  2401  04B7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2402  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2403  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2404  04BA  083F               	movf	?_scale+1,w
  2405  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  2406  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  2407  04BD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2408  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2409  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2410  04C0  083E               	movf	?_scale,w
  2411  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2412  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2413  04C3  00B9               	movwf	sprintf@tmpval^(0+128)
  2414  04C4                     l3093:	
  2415  04C4  0841               	movf	(sprintf@fval+3)^(0+128),w
  2416  04C5  00F3               	movwf	__div_to_l_@f1+3
  2417  04C6  0840               	movf	(sprintf@fval+2)^(0+128),w
  2418  04C7  00F2               	movwf	__div_to_l_@f1+2
  2419  04C8  083F               	movf	(sprintf@fval+1)^(0+128),w
  2420  04C9  00F1               	movwf	__div_to_l_@f1+1
  2421  04CA  083E               	movf	sprintf@fval^(0+128),w
  2422  04CB  00F0               	movwf	__div_to_l_@f1
  2423  04CC  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2424  04CD  00F7               	movwf	__div_to_l_@f2+3
  2425  04CE  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2426  04CF  00F6               	movwf	__div_to_l_@f2+2
  2427  04D0  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2428  04D1  00F5               	movwf	__div_to_l_@f2+1
  2429  04D2  0839               	movf	sprintf@tmpval^(0+128),w
  2430  04D3  00F4               	movwf	__div_to_l_@f2
  2431  04D4  160A  118A  22DD  120A  118A  	fcall	__div_to_l_
  2432  04D9  0873               	movf	?__div_to_l_+3,w
  2433  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2434  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2435  04DC  00B6               	movwf	(sprintf@val+3)^(0+128)
  2436  04DD  0872               	movf	?__div_to_l_+2,w
  2437  04DE  00B5               	movwf	(sprintf@val+2)^(0+128)
  2438  04DF  0871               	movf	?__div_to_l_+1,w
  2439  04E0  00B4               	movwf	(sprintf@val+1)^(0+128)
  2440  04E1  0870               	movf	?__div_to_l_,w
  2441  04E2  00B3               	movwf	sprintf@val^(0+128)
  2442  04E3                     l3097:	
  2443                           
  2444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2445  04E3  3000               	movlw	0
  2446  04E4  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2447  04E5  3000               	movlw	0
  2448  04E6  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2449  04E7  3000               	movlw	0
  2450  04E8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2451  04E9  3000               	movlw	0
  2452  04EA  00BE               	movwf	sprintf@fval^(0+128)
  2453                           
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2455  04EB  2D70               	goto	l3105
  2456  04EC                     l3099:	
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2459  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2460  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2461  04EE  0841               	movf	(sprintf@fval+3)^(0+128),w
  2462  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2463  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2464  04F1  00D4               	movwf	___fltol@f1+3
  2465  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2466  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  2467  04F4  0840               	movf	(sprintf@fval+2)^(0+128),w
  2468  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2469  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2470  04F7  00D3               	movwf	___fltol@f1+2
  2471  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  2472  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  2473  04FA  083F               	movf	(sprintf@fval+1)^(0+128),w
  2474  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2475  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2476  04FD  00D2               	movwf	___fltol@f1+1
  2477  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2478  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2479  0500  083E               	movf	sprintf@fval^(0+128),w
  2480  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0502  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0503  00D1               	movwf	___fltol@f1
  2483  0504  160A  158A  2784  120A  118A  	fcall	___fltol
  2484  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2485  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2486  050B  0854               	movf	?___fltol+3,w
  2487  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2488  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2489  050E  00B6               	movwf	(sprintf@val+3)^(0+128)
  2490  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0511  0853               	movf	?___fltol+2,w
  2493  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2495  0514  00B5               	movwf	(sprintf@val+2)^(0+128)
  2496  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0517  0852               	movf	?___fltol+1,w
  2499  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2501  051A  00B4               	movwf	(sprintf@val+1)^(0+128)
  2502  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2503  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2504  051D  0851               	movf	?___fltol,w
  2505  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2506  051F  1303               	bcf	3,6	;RP1=0, select bank1
  2507  0520  00B3               	movwf	sprintf@val^(0+128)
  2508  0521                     l3101:	
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2511  0521  0836               	movf	(sprintf@val+3)^(0+128),w
  2512  0522  00F3               	movwf	___xxtofl@val+3
  2513  0523  0835               	movf	(sprintf@val+2)^(0+128),w
  2514  0524  00F2               	movwf	___xxtofl@val+2
  2515  0525  0834               	movf	(sprintf@val+1)^(0+128),w
  2516  0526  00F1               	movwf	___xxtofl@val+1
  2517  0527  0833               	movf	sprintf@val^(0+128),w
  2518  0528  00F0               	movwf	___xxtofl@val
  2519  0529  3000               	movlw	0
  2520  052A  160A  118A  2166  120A  118A  	fcall	___xxtofl
  2521  052F  0873               	movf	?___xxtofl+3,w
  2522  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0532  00E9               	movwf	___flsub@a+3
  2525  0533  0872               	movf	?___xxtofl+2,w
  2526  0534  00E8               	movwf	___flsub@a+2
  2527  0535  0871               	movf	?___xxtofl+1,w
  2528  0536  00E7               	movwf	___flsub@a+1
  2529  0537  0870               	movf	?___xxtofl,w
  2530  0538  00E6               	movwf	___flsub@a
  2531  0539  1683               	bsf	3,5	;RP0=1, select bank1
  2532  053A  1303               	bcf	3,6	;RP1=0, select bank1
  2533  053B  0841               	movf	(sprintf@fval+3)^(0+128),w
  2534  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2535  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2536  053E  00ED               	movwf	___flsub@b+3
  2537  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0540  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0541  0840               	movf	(sprintf@fval+2)^(0+128),w
  2540  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0544  00EC               	movwf	___flsub@b+2
  2543  0545  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0546  1303               	bcf	3,6	;RP1=0, select bank1
  2545  0547  083F               	movf	(sprintf@fval+1)^(0+128),w
  2546  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2548  054A  00EB               	movwf	___flsub@b+1
  2549  054B  1683               	bsf	3,5	;RP0=1, select bank1
  2550  054C  1303               	bcf	3,6	;RP1=0, select bank1
  2551  054D  083E               	movf	sprintf@fval^(0+128),w
  2552  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2553  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0550  00EA               	movwf	___flsub@b
  2555  0551  160A  158A  2454  120A  118A  	fcall	___flsub
  2556  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0558  0869               	movf	?___flsub+3,w
  2559  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2560  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2561  055B  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2562  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2563  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2564  055E  0868               	movf	?___flsub+2,w
  2565  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0561  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2568  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0564  0867               	movf	?___flsub+1,w
  2571  0565  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0566  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0567  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2574  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2576  056A  0866               	movf	?___flsub,w
  2577  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2578  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2579  056D  00BE               	movwf	sprintf@fval^(0+128)
  2580  056E                     l3103:	
  2581                           
  2582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2583  056E  01B7               	clrf	sprintf@eexp^(0+128)
  2584  056F  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2585  0570                     l3105:	
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2588  0570  01C2               	clrf	sprintf@c^(0+128)
  2589  0571  0AC2               	incf	sprintf@c^(0+128),f
  2590  0572                     l3111:	
  2591                           
  2592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2593  0572  0842               	movf	sprintf@c^(0+128),w
  2594  0573  00A5               	movwf	??_sprintf^(0+128)
  2595  0574  3001               	movlw	1
  2596  0575                     u5335:	
  2597  0575  1003               	clrc
  2598  0576  0DA5               	rlf	??_sprintf^(0+128),f
  2599  0577  3EFF               	addlw	-1
  2600  0578  1D03               	skipz
  2601  0579  2D75               	goto	u5335
  2602  057A  1003               	clrc
  2603  057B  0D25               	rlf	??_sprintf^(0+128),w
  2604  057C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2605  057D  0084               	movwf	4
  2606  057E  160A  118A  200A  120A  118A  	fcall	stringdir
  2607  0583  00A6               	movwf	(??_sprintf+1)^(0+128)
  2608  0584  160A  118A  200A  120A  118A  	fcall	stringdir
  2609  0589  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2610  058A  160A  118A  200A  120A  118A  	fcall	stringdir
  2611  058F  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2612  0590  160A  118A  200A  120A  118A  	fcall	stringdir
  2613  0595  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2614  0596  0829               	movf	(??_sprintf+4)^(0+128),w
  2615  0597  0236               	subwf	(sprintf@val+3)^(0+128),w
  2616  0598  1D03               	skipz
  2617  0599  2DA4               	goto	u5345
  2618  059A  0828               	movf	(??_sprintf+3)^(0+128),w
  2619  059B  0235               	subwf	(sprintf@val+2)^(0+128),w
  2620  059C  1D03               	skipz
  2621  059D  2DA4               	goto	u5345
  2622  059E  0827               	movf	(??_sprintf+2)^(0+128),w
  2623  059F  0234               	subwf	(sprintf@val+1)^(0+128),w
  2624  05A0  1D03               	skipz
  2625  05A1  2DA4               	goto	u5345
  2626  05A2  0826               	movf	(??_sprintf+1)^(0+128),w
  2627  05A3  0233               	subwf	sprintf@val^(0+128),w
  2628  05A4                     u5345:	
  2629  05A4  1803               	skipnc
  2630  05A5  2DA7               	goto	u5341
  2631  05A6  2DA8               	goto	u5340
  2632  05A7                     u5341:	
  2633  05A7  2DA9               	goto	l3115
  2634  05A8                     u5340:	
  2635  05A8  2DB3               	goto	l3117
  2636  05A9                     l3115:	
  2637  05A9  3001               	movlw	1
  2638  05AA  00A5               	movwf	??_sprintf^(0+128)
  2639  05AB  0825               	movf	??_sprintf^(0+128),w
  2640  05AC  07C2               	addwf	sprintf@c^(0+128),f
  2641  05AD  300A               	movlw	10
  2642  05AE  0642               	xorwf	sprintf@c^(0+128),w
  2643  05AF  1D03               	btfss	3,2
  2644  05B0  2DB2               	goto	u5351
  2645  05B1  2DB3               	goto	u5350
  2646  05B2                     u5351:	
  2647  05B2  2D72               	goto	l3111
  2648  05B3                     u5350:	
  2649  05B3                     l3117:	
  2650                           
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2652  05B3  3003               	movlw	3
  2653  05B4  052F               	andwf	sprintf@flag^(0+128),w
  2654  05B5  00A5               	movwf	??_sprintf^(0+128)
  2655  05B6  3000               	movlw	0
  2656  05B7  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2657  05B8  00A6               	movwf	(??_sprintf+1)^(0+128)
  2658  05B9  0825               	movf	??_sprintf^(0+128),w
  2659  05BA  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2660  05BB  1903               	btfsc	3,2
  2661  05BC  2DBE               	goto	u5361
  2662  05BD  2DBF               	goto	u5360
  2663  05BE                     u5361:	
  2664  05BE  2E31               	goto	l258
  2665  05BF                     u5360:	
  2666  05BF                     l3119:	
  2667                           
  2668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2669  05BF  302D               	movlw	45
  2670  05C0  00A5               	movwf	??_sprintf^(0+128)
  2671  05C1  083D               	movf	sprintf@sp^(0+128),w
  2672  05C2  0084               	movwf	4
  2673  05C3  0825               	movf	??_sprintf^(0+128),w
  2674  05C4  1383               	bcf	3,7	;select IRP bank0
  2675  05C5  0080               	movwf	0
  2676  05C6                     l3121:	
  2677  05C6  3001               	movlw	1
  2678  05C7  00A5               	movwf	??_sprintf^(0+128)
  2679  05C8  0825               	movf	??_sprintf^(0+128),w
  2680  05C9  07BD               	addwf	sprintf@sp^(0+128),f
  2681  05CA  2E31               	goto	l258
  2682  05CB                     l3123:	
  2683                           
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2685  05CB  0842               	movf	sprintf@c^(0+128),w
  2686  05CC  00A5               	movwf	??_sprintf^(0+128)
  2687  05CD  3001               	movlw	1
  2688  05CE                     u5375:	
  2689  05CE  1003               	clrc
  2690  05CF  0DA5               	rlf	??_sprintf^(0+128),f
  2691  05D0  3EFF               	addlw	-1
  2692  05D1  1D03               	skipz
  2693  05D2  2DCE               	goto	u5375
  2694  05D3  1003               	clrc
  2695  05D4  0D25               	rlf	??_sprintf^(0+128),w
  2696  05D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2697  05D6  0084               	movwf	4
  2698  05D7  160A  118A  200A  120A  118A  	fcall	stringdir
  2699  05DC  00F0               	movwf	___lldiv@divisor
  2700  05DD  160A  118A  200A  120A  118A  	fcall	stringdir
  2701  05E2  00F1               	movwf	___lldiv@divisor+1
  2702  05E3  160A  118A  200A  120A  118A  	fcall	stringdir
  2703  05E8  00F2               	movwf	___lldiv@divisor+2
  2704  05E9  160A  118A  200A  120A  118A  	fcall	stringdir
  2705  05EE  00F3               	movwf	___lldiv@divisor+3
  2706  05EF  0836               	movf	(sprintf@val+3)^(0+128),w
  2707  05F0  00F7               	movwf	___lldiv@dividend+3
  2708  05F1  0835               	movf	(sprintf@val+2)^(0+128),w
  2709  05F2  00F6               	movwf	___lldiv@dividend+2
  2710  05F3  0834               	movf	(sprintf@val+1)^(0+128),w
  2711  05F4  00F5               	movwf	___lldiv@dividend+1
  2712  05F5  0833               	movf	sprintf@val^(0+128),w
  2713  05F6  00F4               	movwf	___lldiv@dividend
  2714  05F7  160A  158A  26B5  120A  118A  	fcall	___lldiv
  2715  05FC  0873               	movf	?___lldiv+3,w
  2716  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  2717  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  2718  05FF  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2719  0600  0872               	movf	?___lldiv+2,w
  2720  0601  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2721  0602  0871               	movf	?___lldiv+1,w
  2722  0603  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2723  0604  0870               	movf	?___lldiv,w
  2724  0605  00B9               	movwf	sprintf@tmpval^(0+128)
  2725  0606                     l3125:	
  2726                           
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2728  0606  3000               	movlw	0
  2729  0607  00F3               	movwf	___llmod@divisor+3
  2730  0608  3000               	movlw	0
  2731  0609  00F2               	movwf	___llmod@divisor+2
  2732  060A  3000               	movlw	0
  2733  060B  00F1               	movwf	___llmod@divisor+1
  2734  060C  300A               	movlw	10
  2735  060D  00F0               	movwf	___llmod@divisor
  2736  060E  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2737  060F  00F7               	movwf	___llmod@dividend+3
  2738  0610  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2739  0611  00F6               	movwf	___llmod@dividend+2
  2740  0612  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2741  0613  00F5               	movwf	___llmod@dividend+1
  2742  0614  0839               	movf	sprintf@tmpval^(0+128),w
  2743  0615  00F4               	movwf	___llmod@dividend
  2744  0616  160A  158A  2661  120A  118A  	fcall	___llmod
  2745  061B  0873               	movf	?___llmod+3,w
  2746  061C  1683               	bsf	3,5	;RP0=1, select bank1
  2747  061D  1303               	bcf	3,6	;RP1=0, select bank1
  2748  061E  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2749  061F  0872               	movf	?___llmod+2,w
  2750  0620  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2751  0621  0871               	movf	?___llmod+1,w
  2752  0622  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2753  0623  0870               	movf	?___llmod,w
  2754  0624  00B9               	movwf	sprintf@tmpval^(0+128)
  2755  0625                     l3127:	
  2756                           
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2758  0625  0839               	movf	sprintf@tmpval^(0+128),w
  2759  0626  3E30               	addlw	48
  2760  0627  00A5               	movwf	??_sprintf^(0+128)
  2761  0628  083D               	movf	sprintf@sp^(0+128),w
  2762  0629  0084               	movwf	4
  2763  062A  0825               	movf	??_sprintf^(0+128),w
  2764  062B  1383               	bcf	3,7	;select IRP bank0
  2765  062C  0080               	movwf	0
  2766  062D  3001               	movlw	1
  2767  062E  00A5               	movwf	??_sprintf^(0+128)
  2768  062F  0825               	movf	??_sprintf^(0+128),w
  2769  0630  07BD               	addwf	sprintf@sp^(0+128),f
  2770  0631                     l258:	
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  2772                           
  2773                           
  2774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  2775  0631  3001               	movlw	1
  2776  0632  02C2               	subwf	sprintf@c^(0+128),f
  2777  0633  0A42               	incf	sprintf@c^(0+128),w
  2778  0634  1D03               	btfss	3,2
  2779  0635  2E37               	goto	u5381
  2780  0636  2E38               	goto	u5380
  2781  0637                     u5381:	
  2782  0637  2DCB               	goto	l3123
  2783  0638                     u5380:	
  2784  0638  2E4C               	goto	l3135
  2785  0639                     l3129:	
  2786                           
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  2788  0639  3030               	movlw	48
  2789  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2790  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2791  063C  00A5               	movwf	??_sprintf^(0+128)
  2792  063D  083D               	movf	sprintf@sp^(0+128),w
  2793  063E  0084               	movwf	4
  2794  063F  0825               	movf	??_sprintf^(0+128),w
  2795  0640  1383               	bcf	3,7	;select IRP bank0
  2796  0641  0080               	movwf	0
  2797  0642                     l3131:	
  2798  0642  3001               	movlw	1
  2799  0643  00A5               	movwf	??_sprintf^(0+128)
  2800  0644  0825               	movf	??_sprintf^(0+128),w
  2801  0645  07BD               	addwf	sprintf@sp^(0+128),f
  2802  0646                     l3133:	
  2803                           
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  2805  0646  30FF               	movlw	255
  2806  0647  07B7               	addwf	sprintf@eexp^(0+128),f
  2807  0648  1803               	skipnc
  2808  0649  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2809  064A  30FF               	movlw	255
  2810  064B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2811  064C                     l3135:	
  2812                           
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  2814  064C  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2815  064D  3A80               	xorlw	128
  2816  064E  00FF               	movwf	btemp+1
  2817  064F  3080               	movlw	128
  2818  0650  027F               	subwf	btemp+1,w
  2819  0651  1D03               	skipz
  2820  0652  2E55               	goto	u5395
  2821  0653  3001               	movlw	1
  2822  0654  0237               	subwf	sprintf@eexp^(0+128),w
  2823  0655                     u5395:	
  2824  0655  1803               	skipnc
  2825  0656  2E58               	goto	u5391
  2826  0657  2E59               	goto	u5390
  2827  0658                     u5391:	
  2828  0658  2E39               	goto	l3129
  2829  0659                     u5390:	
  2830  0659                     l3137:	
  2831                           
  2832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2833  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2834  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2835  065B  0832               	movf	(sprintf@prec+1)^(0+128),w
  2836  065C  3A80               	xorlw	128
  2837  065D  00FF               	movwf	btemp+1
  2838  065E  3080               	movlw	128
  2839  065F  027F               	subwf	btemp+1,w
  2840  0660  1D03               	skipz
  2841  0661  2E64               	goto	u5405
  2842  0662  3009               	movlw	9
  2843  0663  0231               	subwf	sprintf@prec^(0+128),w
  2844  0664                     u5405:	
  2845  0664  1C03               	skipc
  2846  0665  2E67               	goto	u5401
  2847  0666  2E68               	goto	u5400
  2848  0667                     u5401:	
  2849  0667  2E6F               	goto	l3141
  2850  0668                     u5400:	
  2851  0668                     l3139:	
  2852                           
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2854  0668  3008               	movlw	8
  2855  0669  1683               	bsf	3,5	;RP0=1, select bank1
  2856  066A  1303               	bcf	3,6	;RP1=0, select bank1
  2857  066B  00A5               	movwf	??_sprintf^(0+128)
  2858  066C  0825               	movf	??_sprintf^(0+128),w
  2859  066D  00C2               	movwf	sprintf@c^(0+128)
  2860  066E  2E75               	goto	l265
  2861  066F                     l3141:	
  2862                           
  2863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  2864  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2865  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2866  0671  0831               	movf	sprintf@prec^(0+128),w
  2867  0672  00A5               	movwf	??_sprintf^(0+128)
  2868  0673  0825               	movf	??_sprintf^(0+128),w
  2869  0674  00C2               	movwf	sprintf@c^(0+128)
  2870  0675                     l265:	
  2871                           
  2872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  2873  0675  0842               	movf	sprintf@c^(0+128),w
  2874  0676  00A5               	movwf	??_sprintf^(0+128)
  2875  0677  01A6               	clrf	(??_sprintf^(0+128)+1)
  2876  0678  0825               	movf	??_sprintf^(0+128),w
  2877  0679  02B1               	subwf	sprintf@prec^(0+128),f
  2878  067A  0826               	movf	(??_sprintf+1)^(0+128),w
  2879  067B  1C03               	skipc
  2880  067C  03B2               	decf	(sprintf@prec+1)^(0+128),f
  2881  067D  02B2               	subwf	(sprintf@prec+1)^(0+128),f
  2882  067E                     l3143:	
  2883                           
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  2885  067E  0842               	movf	sprintf@c^(0+128),w
  2886  067F  1903               	btfsc	3,2
  2887  0680  2E82               	goto	u5411
  2888  0681  2E83               	goto	u5410
  2889  0682                     u5411:	
  2890  0682  2E8E               	goto	l3149
  2891  0683                     u5410:	
  2892  0683                     l3145:	
  2893                           
  2894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  2895  0683  302E               	movlw	46
  2896  0684  00A5               	movwf	??_sprintf^(0+128)
  2897  0685  083D               	movf	sprintf@sp^(0+128),w
  2898  0686  0084               	movwf	4
  2899  0687  0825               	movf	??_sprintf^(0+128),w
  2900  0688  1383               	bcf	3,7	;select IRP bank0
  2901  0689  0080               	movwf	0
  2902  068A                     l3147:	
  2903  068A  3001               	movlw	1
  2904  068B  00A5               	movwf	??_sprintf^(0+128)
  2905  068C  0825               	movf	??_sprintf^(0+128),w
  2906  068D  07BD               	addwf	sprintf@sp^(0+128),f
  2907  068E                     l3149:	
  2908                           
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2910  068E  0842               	movf	sprintf@c^(0+128),w
  2911  068F  120A  158A  2140  120A  118A  	fcall	_scale
  2912  0694  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0695  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0696  0841               	movf	?_scale+3,w
  2915  0697  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0698  1303               	bcf	3,6	;RP1=0, select bank1
  2917  0699  00AD               	movwf	(_sprintf$840+3)^(0+128)
  2918  069A  1283               	bcf	3,5	;RP0=0, select bank0
  2919  069B  1303               	bcf	3,6	;RP1=0, select bank0
  2920  069C  0840               	movf	?_scale+2,w
  2921  069D  1683               	bsf	3,5	;RP0=1, select bank1
  2922  069E  1303               	bcf	3,6	;RP1=0, select bank1
  2923  069F  00AC               	movwf	(_sprintf$840+2)^(0+128)
  2924  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2925  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2926  06A2  083F               	movf	?_scale+1,w
  2927  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2928  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2929  06A5  00AB               	movwf	(_sprintf$840+1)^(0+128)
  2930  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2931  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2932  06A8  083E               	movf	?_scale,w
  2933  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  2934  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  2935  06AB  00AA               	movwf	_sprintf$840^(0+128)
  2936  06AC                     l3151:	
  2937                           
  2938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2939  06AC  082D               	movf	(_sprintf$840+3)^(0+128),w
  2940  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2941  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2942  06AF  00AB               	movwf	___flmul@a+3
  2943  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  2944  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  2945  06B2  082C               	movf	(_sprintf$840+2)^(0+128),w
  2946  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2947  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2948  06B5  00AA               	movwf	___flmul@a+2
  2949  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  2950  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  2951  06B8  082B               	movf	(_sprintf$840+1)^(0+128),w
  2952  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2953  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2954  06BB  00A9               	movwf	___flmul@a+1
  2955  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  2956  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  2957  06BE  082A               	movf	_sprintf$840^(0+128),w
  2958  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2959  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2960  06C1  00A8               	movwf	___flmul@a
  2961  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2962  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  2963  06C4  0841               	movf	(sprintf@fval+3)^(0+128),w
  2964  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2965  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2966  06C7  00A7               	movwf	___flmul@b+3
  2967  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  2968  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  2969  06CA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2970  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2971  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2972  06CD  00A6               	movwf	___flmul@b+2
  2973  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  2974  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  2975  06D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  2976  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  2977  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  2978  06D3  00A5               	movwf	___flmul@b+1
  2979  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  2980  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  2981  06D6  083E               	movf	sprintf@fval^(0+128),w
  2982  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2983  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2984  06D9  00A4               	movwf	___flmul@b
  2985  06DA  120A  158A  249F  120A  118A  	fcall	___flmul
  2986  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2987  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2988  06E1  0827               	movf	?___flmul+3,w
  2989  06E2  00D4               	movwf	___fltol@f1+3
  2990  06E3  0826               	movf	?___flmul+2,w
  2991  06E4  00D3               	movwf	___fltol@f1+2
  2992  06E5  0825               	movf	?___flmul+1,w
  2993  06E6  00D2               	movwf	___fltol@f1+1
  2994  06E7  0824               	movf	?___flmul,w
  2995  06E8  00D1               	movwf	___fltol@f1
  2996  06E9  160A  158A  2784  120A  118A  	fcall	___fltol
  2997  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2998  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2999  06F0  0854               	movf	?___fltol+3,w
  3000  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3001  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3002  06F3  00B6               	movwf	(sprintf@val+3)^(0+128)
  3003  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3004  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3005  06F6  0853               	movf	?___fltol+2,w
  3006  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  3007  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  3008  06F9  00B5               	movwf	(sprintf@val+2)^(0+128)
  3009  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3010  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3011  06FC  0852               	movf	?___fltol+1,w
  3012  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  3013  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  3014  06FF  00B4               	movwf	(sprintf@val+1)^(0+128)
  3015  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0702  0851               	movf	?___fltol,w
  3018  0703  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0704  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0705  00B3               	movwf	sprintf@val^(0+128)
  3021                           
  3022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3023  0706  2FA8               	goto	l3161
  3024  0707                     l3153:	
  3025                           
  3026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3027  0707  0842               	movf	sprintf@c^(0+128),w
  3028  0708  00A5               	movwf	??_sprintf^(0+128)
  3029  0709  3001               	movlw	1
  3030  070A                     u5425:	
  3031  070A  1003               	clrc
  3032  070B  0DA5               	rlf	??_sprintf^(0+128),f
  3033  070C  3EFF               	addlw	-1
  3034  070D  1D03               	skipz
  3035  070E  2F0A               	goto	u5425
  3036  070F  1003               	clrc
  3037  0710  0D25               	rlf	??_sprintf^(0+128),w
  3038  0711  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3039  0712  0084               	movwf	4
  3040  0713  160A  118A  200A  120A  118A  	fcall	stringdir
  3041  0718  00F0               	movwf	___lldiv@divisor
  3042  0719  160A  118A  200A  120A  118A  	fcall	stringdir
  3043  071E  00F1               	movwf	___lldiv@divisor+1
  3044  071F  160A  118A  200A  120A  118A  	fcall	stringdir
  3045  0724  00F2               	movwf	___lldiv@divisor+2
  3046  0725  160A  118A  200A  120A  118A  	fcall	stringdir
  3047  072A  00F3               	movwf	___lldiv@divisor+3
  3048  072B  0836               	movf	(sprintf@val+3)^(0+128),w
  3049  072C  00F7               	movwf	___lldiv@dividend+3
  3050  072D  0835               	movf	(sprintf@val+2)^(0+128),w
  3051  072E  00F6               	movwf	___lldiv@dividend+2
  3052  072F  0834               	movf	(sprintf@val+1)^(0+128),w
  3053  0730  00F5               	movwf	___lldiv@dividend+1
  3054  0731  0833               	movf	sprintf@val^(0+128),w
  3055  0732  00F4               	movwf	___lldiv@dividend
  3056  0733  160A  158A  26B5  120A  118A  	fcall	___lldiv
  3057  0738  0873               	movf	?___lldiv+3,w
  3058  0739  1683               	bsf	3,5	;RP0=1, select bank1
  3059  073A  1303               	bcf	3,6	;RP1=0, select bank1
  3060  073B  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3061  073C  0872               	movf	?___lldiv+2,w
  3062  073D  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3063  073E  0871               	movf	?___lldiv+1,w
  3064  073F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3065  0740  0870               	movf	?___lldiv,w
  3066  0741  00B9               	movwf	sprintf@tmpval^(0+128)
  3067  0742                     l3155:	
  3068                           
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3070  0742  3000               	movlw	0
  3071  0743  00F3               	movwf	___llmod@divisor+3
  3072  0744  3000               	movlw	0
  3073  0745  00F2               	movwf	___llmod@divisor+2
  3074  0746  3000               	movlw	0
  3075  0747  00F1               	movwf	___llmod@divisor+1
  3076  0748  300A               	movlw	10
  3077  0749  00F0               	movwf	___llmod@divisor
  3078  074A  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3079  074B  00F7               	movwf	___llmod@dividend+3
  3080  074C  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3081  074D  00F6               	movwf	___llmod@dividend+2
  3082  074E  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3083  074F  00F5               	movwf	___llmod@dividend+1
  3084  0750  0839               	movf	sprintf@tmpval^(0+128),w
  3085  0751  00F4               	movwf	___llmod@dividend
  3086  0752  160A  158A  2661  120A  118A  	fcall	___llmod
  3087  0757  0873               	movf	?___llmod+3,w
  3088  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0759  1303               	bcf	3,6	;RP1=0, select bank1
  3090  075A  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3091  075B  0872               	movf	?___llmod+2,w
  3092  075C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3093  075D  0871               	movf	?___llmod+1,w
  3094  075E  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3095  075F  0870               	movf	?___llmod,w
  3096  0760  00B9               	movwf	sprintf@tmpval^(0+128)
  3097  0761                     l3157:	
  3098                           
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3100  0761  0839               	movf	sprintf@tmpval^(0+128),w
  3101  0762  3E30               	addlw	48
  3102  0763  00A5               	movwf	??_sprintf^(0+128)
  3103  0764  083D               	movf	sprintf@sp^(0+128),w
  3104  0765  0084               	movwf	4
  3105  0766  0825               	movf	??_sprintf^(0+128),w
  3106  0767  1383               	bcf	3,7	;select IRP bank0
  3107  0768  0080               	movwf	0
  3108  0769  3001               	movlw	1
  3109  076A  00A5               	movwf	??_sprintf^(0+128)
  3110  076B  0825               	movf	??_sprintf^(0+128),w
  3111  076C  07BD               	addwf	sprintf@sp^(0+128),f
  3112  076D                     l3159:	
  3113                           
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3115  076D  0842               	movf	sprintf@c^(0+128),w
  3116  076E  00A5               	movwf	??_sprintf^(0+128)
  3117  076F  3001               	movlw	1
  3118  0770                     u5435:	
  3119  0770  1003               	clrc
  3120  0771  0DA5               	rlf	??_sprintf^(0+128),f
  3121  0772  3EFF               	addlw	-1
  3122  0773  1D03               	skipz
  3123  0774  2F70               	goto	u5435
  3124  0775  1003               	clrc
  3125  0776  0D25               	rlf	??_sprintf^(0+128),w
  3126  0777  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3127  0778  0084               	movwf	4
  3128  0779  160A  118A  200A  120A  118A  	fcall	stringdir
  3129  077E  00F0               	movwf	___llmod@divisor
  3130  077F  160A  118A  200A  120A  118A  	fcall	stringdir
  3131  0784  00F1               	movwf	___llmod@divisor+1
  3132  0785  160A  118A  200A  120A  118A  	fcall	stringdir
  3133  078A  00F2               	movwf	___llmod@divisor+2
  3134  078B  160A  118A  200A  120A  118A  	fcall	stringdir
  3135  0790  00F3               	movwf	___llmod@divisor+3
  3136  0791  0836               	movf	(sprintf@val+3)^(0+128),w
  3137  0792  00F7               	movwf	___llmod@dividend+3
  3138  0793  0835               	movf	(sprintf@val+2)^(0+128),w
  3139  0794  00F6               	movwf	___llmod@dividend+2
  3140  0795  0834               	movf	(sprintf@val+1)^(0+128),w
  3141  0796  00F5               	movwf	___llmod@dividend+1
  3142  0797  0833               	movf	sprintf@val^(0+128),w
  3143  0798  00F4               	movwf	___llmod@dividend
  3144  0799  160A  158A  2661  120A  118A  	fcall	___llmod
  3145  079E  0873               	movf	?___llmod+3,w
  3146  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3147  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  3148  07A1  00B6               	movwf	(sprintf@val+3)^(0+128)
  3149  07A2  0872               	movf	?___llmod+2,w
  3150  07A3  00B5               	movwf	(sprintf@val+2)^(0+128)
  3151  07A4  0871               	movf	?___llmod+1,w
  3152  07A5  00B4               	movwf	(sprintf@val+1)^(0+128)
  3153  07A6  0870               	movf	?___llmod,w
  3154  07A7  00B3               	movwf	sprintf@val^(0+128)
  3155  07A8                     l3161:	
  3156                           
  3157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3158  07A8  3001               	movlw	1
  3159  07A9  02C2               	subwf	sprintf@c^(0+128),f
  3160  07AA  0A42               	incf	sprintf@c^(0+128),w
  3161  07AB  1D03               	btfss	3,2
  3162  07AC  2FAE               	goto	u5441
  3163  07AD  2FAF               	goto	u5440
  3164  07AE                     u5441:	
  3165  07AE  2F07               	goto	l3153
  3166  07AF                     u5440:	
  3167  07AF  2FC1               	goto	l3169
  3168  07B0                     l3163:	
  3169                           
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3171  07B0  3030               	movlw	48
  3172  07B1  00A5               	movwf	??_sprintf^(0+128)
  3173  07B2  083D               	movf	sprintf@sp^(0+128),w
  3174  07B3  0084               	movwf	4
  3175  07B4  0825               	movf	??_sprintf^(0+128),w
  3176  07B5  1383               	bcf	3,7	;select IRP bank0
  3177  07B6  0080               	movwf	0
  3178  07B7                     l3165:	
  3179  07B7  3001               	movlw	1
  3180  07B8  00A5               	movwf	??_sprintf^(0+128)
  3181  07B9  0825               	movf	??_sprintf^(0+128),w
  3182  07BA  07BD               	addwf	sprintf@sp^(0+128),f
  3183  07BB                     l3167:	
  3184                           
  3185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3186  07BB  30FF               	movlw	255
  3187  07BC  07B1               	addwf	sprintf@prec^(0+128),f
  3188  07BD  1803               	skipnc
  3189  07BE  0AB2               	incf	(sprintf@prec+1)^(0+128),f
  3190  07BF  30FF               	movlw	255
  3191  07C0  07B2               	addwf	(sprintf@prec+1)^(0+128),f
  3192  07C1                     l3169:	
  3193                           
  3194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3195  07C1  0831               	movf	sprintf@prec^(0+128),w
  3196  07C2  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  3197  07C3  1D03               	btfss	3,2
  3198  07C4  2FC6               	goto	u5451
  3199  07C5  2FC7               	goto	u5450
  3200  07C6                     u5451:	
  3201  07C6  2FB0               	goto	l3163
  3202  07C7                     u5450:	
  3203  07C7  2FDC               	goto	l3177
  3204  07C8                     l3171:	
  3205                           
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3207  07C8  3003               	movlw	3
  3208  07C9  052F               	andwf	sprintf@flag^(0+128),w
  3209  07CA  00A5               	movwf	??_sprintf^(0+128)
  3210  07CB  3000               	movlw	0
  3211  07CC  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3212  07CD  00A6               	movwf	(??_sprintf+1)^(0+128)
  3213  07CE  0825               	movf	??_sprintf^(0+128),w
  3214  07CF  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3215  07D0  1903               	btfsc	3,2
  3216  07D1  2FD3               	goto	u5461
  3217  07D2  2FD4               	goto	u5460
  3218  07D3                     u5461:	
  3219  07D3  2FDC               	goto	l3177
  3220  07D4                     u5460:	
  3221  07D4                     l3173:	
  3222                           
  3223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3224  07D4  302D               	movlw	45
  3225  07D5  00A5               	movwf	??_sprintf^(0+128)
  3226  07D6  083D               	movf	sprintf@sp^(0+128),w
  3227  07D7  0084               	movwf	4
  3228  07D8  0825               	movf	??_sprintf^(0+128),w
  3229  07D9  1383               	bcf	3,7	;select IRP bank0
  3230  07DA  0080               	movwf	0
  3231  07DB  2A4E               	goto	l3023
  3232  07DC                     l3177:	
  3233                           
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3235  07DC  3001               	movlw	1
  3236  07DD  07A0               	addwf	sprintf@f^(0+128),f
  3237  07DE  30FF               	movlw	-1
  3238  07DF  0720               	addwf	sprintf@f^(0+128),w
  3239  07E0  0084               	movwf	4
  3240  07E1  160A  118A  200A  120A  118A  	fcall	stringdir
  3241  07E6  00A5               	movwf	??_sprintf^(0+128)
  3242  07E7  0825               	movf	??_sprintf^(0+128),w
  3243  07E8  00C2               	movwf	sprintf@c^(0+128)
  3244  07E9  0842               	movf	sprintf@c^(0+128),w
  3245  07EA  1D03               	btfss	3,2
  3246  07EB  2FED               	goto	u5471
  3247  07EC  2FEE               	goto	u5470
  3248  07ED                     u5471:	
  3249  07ED  2A41               	goto	l3019
  3250  07EE                     u5470:	
  3251  07EE                     l3179:	
  3252                           
  3253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3254  07EE  083D               	movf	sprintf@sp^(0+128),w
  3255  07EF  0084               	movwf	4
  3256  07F0  1383               	bcf	3,7	;select IRP bank0
  3257  07F1  0180               	clrf	0
  3258  07F2                     l275:	
  3259  07F2  0008               	return
  3260  07F3                     __end_of_sprintf:	
  3261                           
  3262                           	psect	text4
  3263  0940                     __ptext4:	
  3264 ;; *************** function _scale *****************
  3265 ;; Defined at:
  3266 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  scl             1    wreg     char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  scl             1   48[BANK0 ] char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  4   30[BANK0 ] char 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3280 ;;      Params:         0       4       0       0       0
  3281 ;;      Locals:         0       5       0       0       0
  3282 ;;      Temps:          0      10       0       0       0
  3283 ;;      Totals:         0      19       0       0       0
  3284 ;;Total ram usage:       19 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    2
  3287 ;; This function calls:
  3288 ;;		___awdiv
  3289 ;;		___awmod
  3290 ;;		___flmul
  3291 ;; This function is called by:
  3292 ;;		_sprintf
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _scale
  3298  0940                     _scale:	
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3302                           ;scale@scl stored from wreg
  3303  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0942  00D0               	movwf	scale@scl
  3306  0943                     l2687:	
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3309  0943  1FD0               	btfss	scale@scl,7
  3310  0944  2946               	goto	u4261
  3311  0945  2947               	goto	u4260
  3312  0946                     u4261:	
  3313  0946  2AF4               	goto	l2709
  3314  0947                     u4260:	
  3315  0947                     l2689:	
  3316                           
  3317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3318  0947  09D0               	comf	scale@scl,f
  3319  0948  0AD0               	incf	scale@scl,f
  3320  0949                     l2691:	
  3321                           
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3323  0949  0850               	movf	scale@scl,w
  3324  094A  3A80               	xorlw	128
  3325  094B  3E12               	addlw	-238
  3326  094C  1C03               	skipc
  3327  094D  294F               	goto	u4271
  3328  094E  2950               	goto	u4270
  3329  094F                     u4271:	
  3330  094F  2A38               	goto	l2699
  3331  0950                     u4270:	
  3332  0950                     l2693:	
  3333                           
  3334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3335  0950  300A               	movlw	10
  3336  0951  00F7               	movwf	___awdiv@divisor
  3337  0952  3000               	movlw	0
  3338  0953  00F8               	movwf	___awdiv@divisor+1
  3339  0954  0850               	movf	scale@scl,w
  3340  0955  00F2               	movwf	___awmod@dividend
  3341  0956  01F3               	clrf	___awmod@dividend+1
  3342  0957  1BF2               	btfsc	___awmod@dividend,7
  3343  0958  03F3               	decf	___awmod@dividend+1,f
  3344  0959  3064               	movlw	100
  3345  095A  00F0               	movwf	___awmod@divisor
  3346  095B  3000               	movlw	0
  3347  095C  00F1               	movwf	___awmod@divisor+1
  3348  095D  120A  158A  200A  120A  158A  	fcall	___awmod
  3349  0962  0871               	movf	?___awmod+1,w
  3350  0963  00FA               	movwf	___awdiv@dividend+1
  3351  0964  0870               	movf	?___awmod,w
  3352  0965  00F9               	movwf	___awdiv@dividend
  3353  0966  160A  158A  271B  120A  158A  	fcall	___awdiv
  3354  096B  0877               	movf	?___awdiv,w
  3355  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3356  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3357  096E  00C2               	movwf	??_scale
  3358  096F  3001               	movlw	1
  3359  0970                     u4285:	
  3360  0970  1003               	clrc
  3361  0971  0DC2               	rlf	??_scale,f
  3362  0972  3EFF               	addlw	-1
  3363  0973  1D03               	skipz
  3364  0974  2970               	goto	u4285
  3365  0975  1003               	clrc
  3366  0976  0D42               	rlf	??_scale,w
  3367  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3368  0978  0084               	movwf	4
  3369  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  3370  097E  00C3               	movwf	??_scale+1
  3371  097F  160A  118A  200A  120A  158A  	fcall	stringdir
  3372  0984  00C4               	movwf	??_scale+2
  3373  0985  160A  118A  200A  120A  158A  	fcall	stringdir
  3374  098A  00C5               	movwf	??_scale+3
  3375  098B  160A  118A  200A  120A  158A  	fcall	stringdir
  3376  0990  00C6               	movwf	??_scale+4
  3377  0991  0846               	movf	??_scale+4,w
  3378  0992  00A7               	movwf	___flmul@b+3
  3379  0993  0845               	movf	??_scale+3,w
  3380  0994  00A6               	movwf	___flmul@b+2
  3381  0995  0844               	movf	??_scale+2,w
  3382  0996  00A5               	movwf	___flmul@b+1
  3383  0997  0843               	movf	??_scale+1,w
  3384  0998  00A4               	movwf	___flmul@b
  3385  0999  3064               	movlw	100
  3386  099A  00F7               	movwf	___awdiv@divisor
  3387  099B  3000               	movlw	0
  3388  099C  00F8               	movwf	___awdiv@divisor+1
  3389  099D  0850               	movf	scale@scl,w
  3390  099E  00F9               	movwf	___awdiv@dividend
  3391  099F  01FA               	clrf	___awdiv@dividend+1
  3392  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3393  09A1  03FA               	decf	___awdiv@dividend+1,f
  3394  09A2  160A  158A  271B  120A  158A  	fcall	___awdiv
  3395  09A7  0877               	movf	?___awdiv,w
  3396  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3397  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3398  09AA  00C7               	movwf	??_scale+5
  3399  09AB  3001               	movlw	1
  3400  09AC                     u4295:	
  3401  09AC  1003               	clrc
  3402  09AD  0DC7               	rlf	??_scale+5,f
  3403  09AE  3EFF               	addlw	-1
  3404  09AF  1D03               	skipz
  3405  09B0  29AC               	goto	u4295
  3406  09B1  1003               	clrc
  3407  09B2  0D47               	rlf	??_scale+5,w
  3408  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3409  09B4  0084               	movwf	4
  3410  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  3411  09BA  00C8               	movwf	??_scale+6
  3412  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  3413  09C0  00C9               	movwf	??_scale+7
  3414  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  3415  09C6  00CA               	movwf	??_scale+8
  3416  09C7  160A  118A  200A  120A  158A  	fcall	stringdir
  3417  09CC  00CB               	movwf	??_scale+9
  3418  09CD  084B               	movf	??_scale+9,w
  3419  09CE  00AB               	movwf	___flmul@a+3
  3420  09CF  084A               	movf	??_scale+8,w
  3421  09D0  00AA               	movwf	___flmul@a+2
  3422  09D1  0849               	movf	??_scale+7,w
  3423  09D2  00A9               	movwf	___flmul@a+1
  3424  09D3  0848               	movf	??_scale+6,w
  3425  09D4  00A8               	movwf	___flmul@a
  3426  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3427  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3428  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3429  09DC  0827               	movf	?___flmul+3,w
  3430  09DD  00CF               	movwf	_scale$839+3
  3431  09DE  0826               	movf	?___flmul+2,w
  3432  09DF  00CE               	movwf	_scale$839+2
  3433  09E0  0825               	movf	?___flmul+1,w
  3434  09E1  00CD               	movwf	_scale$839+1
  3435  09E2  0824               	movf	?___flmul,w
  3436  09E3  00CC               	movwf	_scale$839
  3437                           
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3439  09E4  300A               	movlw	10
  3440  09E5  00F0               	movwf	___awmod@divisor
  3441  09E6  3000               	movlw	0
  3442  09E7  00F1               	movwf	___awmod@divisor+1
  3443  09E8  0850               	movf	scale@scl,w
  3444  09E9  00F2               	movwf	___awmod@dividend
  3445  09EA  01F3               	clrf	___awmod@dividend+1
  3446  09EB  1BF2               	btfsc	___awmod@dividend,7
  3447  09EC  03F3               	decf	___awmod@dividend+1,f
  3448  09ED  120A  158A  200A  120A  158A  	fcall	___awmod
  3449  09F2  0870               	movf	?___awmod,w
  3450  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3451  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3452  09F5  00C2               	movwf	??_scale
  3453  09F6  3001               	movlw	1
  3454  09F7                     u4305:	
  3455  09F7  1003               	clrc
  3456  09F8  0DC2               	rlf	??_scale,f
  3457  09F9  3EFF               	addlw	-1
  3458  09FA  1D03               	skipz
  3459  09FB  29F7               	goto	u4305
  3460  09FC  1003               	clrc
  3461  09FD  0D42               	rlf	??_scale,w
  3462  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3463  09FF  0084               	movwf	4
  3464  0A00  160A  118A  200A  120A  158A  	fcall	stringdir
  3465  0A05  00C3               	movwf	??_scale+1
  3466  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  3467  0A0B  00C4               	movwf	??_scale+2
  3468  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3469  0A11  00C5               	movwf	??_scale+3
  3470  0A12  160A  118A  200A  120A  158A  	fcall	stringdir
  3471  0A17  00C6               	movwf	??_scale+4
  3472  0A18  0846               	movf	??_scale+4,w
  3473  0A19  00A7               	movwf	___flmul@b+3
  3474  0A1A  0845               	movf	??_scale+3,w
  3475  0A1B  00A6               	movwf	___flmul@b+2
  3476  0A1C  0844               	movf	??_scale+2,w
  3477  0A1D  00A5               	movwf	___flmul@b+1
  3478  0A1E  0843               	movf	??_scale+1,w
  3479  0A1F  00A4               	movwf	___flmul@b
  3480  0A20  084F               	movf	_scale$839+3,w
  3481  0A21  00AB               	movwf	___flmul@a+3
  3482  0A22  084E               	movf	_scale$839+2,w
  3483  0A23  00AA               	movwf	___flmul@a+2
  3484  0A24  084D               	movf	_scale$839+1,w
  3485  0A25  00A9               	movwf	___flmul@a+1
  3486  0A26  084C               	movf	_scale$839,w
  3487  0A27  00A8               	movwf	___flmul@a
  3488  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3489  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0A2F  0827               	movf	?___flmul+3,w
  3492  0A30  00C1               	movwf	?_scale+3
  3493  0A31  0826               	movf	?___flmul+2,w
  3494  0A32  00C0               	movwf	?_scale+2
  3495  0A33  0825               	movf	?___flmul+1,w
  3496  0A34  00BF               	movwf	?_scale+1
  3497  0A35  0824               	movf	?___flmul,w
  3498  0A36  00BE               	movwf	?_scale
  3499  0A37  2C9E               	goto	l219
  3500  0A38                     l2699:	
  3501  0A38  0850               	movf	scale@scl,w
  3502  0A39  3A80               	xorlw	128
  3503  0A3A  3E75               	addlw	-139
  3504  0A3B  1C03               	skipc
  3505  0A3C  2A3E               	goto	u4311
  3506  0A3D  2A3F               	goto	u4310
  3507  0A3E                     u4311:	
  3508  0A3E  2AC7               	goto	l2705
  3509  0A3F                     u4310:	
  3510  0A3F                     l2701:	
  3511                           
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3513  0A3F  300A               	movlw	10
  3514  0A40  00F0               	movwf	___awmod@divisor
  3515  0A41  3000               	movlw	0
  3516  0A42  00F1               	movwf	___awmod@divisor+1
  3517  0A43  0850               	movf	scale@scl,w
  3518  0A44  00F2               	movwf	___awmod@dividend
  3519  0A45  01F3               	clrf	___awmod@dividend+1
  3520  0A46  1BF2               	btfsc	___awmod@dividend,7
  3521  0A47  03F3               	decf	___awmod@dividend+1,f
  3522  0A48  120A  158A  200A  120A  158A  	fcall	___awmod
  3523  0A4D  0870               	movf	?___awmod,w
  3524  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0A50  00C2               	movwf	??_scale
  3527  0A51  3001               	movlw	1
  3528  0A52                     u4325:	
  3529  0A52  1003               	clrc
  3530  0A53  0DC2               	rlf	??_scale,f
  3531  0A54  3EFF               	addlw	-1
  3532  0A55  1D03               	skipz
  3533  0A56  2A52               	goto	u4325
  3534  0A57  1003               	clrc
  3535  0A58  0D42               	rlf	??_scale,w
  3536  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3537  0A5A  0084               	movwf	4
  3538  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  3539  0A60  00C3               	movwf	??_scale+1
  3540  0A61  160A  118A  200A  120A  158A  	fcall	stringdir
  3541  0A66  00C4               	movwf	??_scale+2
  3542  0A67  160A  118A  200A  120A  158A  	fcall	stringdir
  3543  0A6C  00C5               	movwf	??_scale+3
  3544  0A6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3545  0A72  00C6               	movwf	??_scale+4
  3546  0A73  0846               	movf	??_scale+4,w
  3547  0A74  00A7               	movwf	___flmul@b+3
  3548  0A75  0845               	movf	??_scale+3,w
  3549  0A76  00A6               	movwf	___flmul@b+2
  3550  0A77  0844               	movf	??_scale+2,w
  3551  0A78  00A5               	movwf	___flmul@b+1
  3552  0A79  0843               	movf	??_scale+1,w
  3553  0A7A  00A4               	movwf	___flmul@b
  3554  0A7B  300A               	movlw	10
  3555  0A7C  00F7               	movwf	___awdiv@divisor
  3556  0A7D  3000               	movlw	0
  3557  0A7E  00F8               	movwf	___awdiv@divisor+1
  3558  0A7F  0850               	movf	scale@scl,w
  3559  0A80  00F9               	movwf	___awdiv@dividend
  3560  0A81  01FA               	clrf	___awdiv@dividend+1
  3561  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3562  0A83  03FA               	decf	___awdiv@dividend+1,f
  3563  0A84  160A  158A  271B  120A  158A  	fcall	___awdiv
  3564  0A89  0877               	movf	?___awdiv,w
  3565  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0A8C  00C7               	movwf	??_scale+5
  3568  0A8D  3001               	movlw	1
  3569  0A8E                     u4335:	
  3570  0A8E  1003               	clrc
  3571  0A8F  0DC7               	rlf	??_scale+5,f
  3572  0A90  3EFF               	addlw	-1
  3573  0A91  1D03               	skipz
  3574  0A92  2A8E               	goto	u4335
  3575  0A93  1003               	clrc
  3576  0A94  0D47               	rlf	??_scale+5,w
  3577  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3578  0A96  0084               	movwf	4
  3579  0A97  160A  118A  200A  120A  158A  	fcall	stringdir
  3580  0A9C  00C8               	movwf	??_scale+6
  3581  0A9D  160A  118A  200A  120A  158A  	fcall	stringdir
  3582  0AA2  00C9               	movwf	??_scale+7
  3583  0AA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3584  0AA8  00CA               	movwf	??_scale+8
  3585  0AA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3586  0AAE  00CB               	movwf	??_scale+9
  3587  0AAF  084B               	movf	??_scale+9,w
  3588  0AB0  00AB               	movwf	___flmul@a+3
  3589  0AB1  084A               	movf	??_scale+8,w
  3590  0AB2  00AA               	movwf	___flmul@a+2
  3591  0AB3  0849               	movf	??_scale+7,w
  3592  0AB4  00A9               	movwf	___flmul@a+1
  3593  0AB5  0848               	movf	??_scale+6,w
  3594  0AB6  00A8               	movwf	___flmul@a
  3595  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3596  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0ABE  0827               	movf	?___flmul+3,w
  3599  0ABF  00C1               	movwf	?_scale+3
  3600  0AC0  0826               	movf	?___flmul+2,w
  3601  0AC1  00C0               	movwf	?_scale+2
  3602  0AC2  0825               	movf	?___flmul+1,w
  3603  0AC3  00BF               	movwf	?_scale+1
  3604  0AC4  0824               	movf	?___flmul,w
  3605  0AC5  00BE               	movwf	?_scale
  3606  0AC6  2C9E               	goto	l219
  3607  0AC7                     l2705:	
  3608                           
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3610  0AC7  0850               	movf	scale@scl,w
  3611  0AC8  00C2               	movwf	??_scale
  3612  0AC9  3001               	movlw	1
  3613  0ACA                     u4345:	
  3614  0ACA  1003               	clrc
  3615  0ACB  0DC2               	rlf	??_scale,f
  3616  0ACC  3EFF               	addlw	-1
  3617  0ACD  1D03               	skipz
  3618  0ACE  2ACA               	goto	u4345
  3619  0ACF  1003               	clrc
  3620  0AD0  0D42               	rlf	??_scale,w
  3621  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3622  0AD2  0084               	movwf	4
  3623  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  3624  0AD8  00C3               	movwf	??_scale+1
  3625  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  3626  0ADE  00C4               	movwf	??_scale+2
  3627  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  3628  0AE4  00C5               	movwf	??_scale+3
  3629  0AE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3630  0AEA  00C6               	movwf	??_scale+4
  3631  0AEB  0846               	movf	??_scale+4,w
  3632  0AEC  00C1               	movwf	?_scale+3
  3633  0AED  0845               	movf	??_scale+3,w
  3634  0AEE  00C0               	movwf	?_scale+2
  3635  0AEF  0844               	movf	??_scale+2,w
  3636  0AF0  00BF               	movwf	?_scale+1
  3637  0AF1  0843               	movf	??_scale+1,w
  3638  0AF2  00BE               	movwf	?_scale
  3639  0AF3  2C9E               	goto	l219
  3640  0AF4                     l2709:	
  3641                           
  3642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3643  0AF4  0850               	movf	scale@scl,w
  3644  0AF5  3A80               	xorlw	128
  3645  0AF6  3E12               	addlw	-238
  3646  0AF7  1C03               	skipc
  3647  0AF8  2AFA               	goto	u4351
  3648  0AF9  2AFB               	goto	u4350
  3649  0AFA                     u4351:	
  3650  0AFA  2BE3               	goto	l2717
  3651  0AFB                     u4350:	
  3652  0AFB                     l2711:	
  3653                           
  3654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3655  0AFB  300A               	movlw	10
  3656  0AFC  00F7               	movwf	___awdiv@divisor
  3657  0AFD  3000               	movlw	0
  3658  0AFE  00F8               	movwf	___awdiv@divisor+1
  3659  0AFF  0850               	movf	scale@scl,w
  3660  0B00  00F2               	movwf	___awmod@dividend
  3661  0B01  01F3               	clrf	___awmod@dividend+1
  3662  0B02  1BF2               	btfsc	___awmod@dividend,7
  3663  0B03  03F3               	decf	___awmod@dividend+1,f
  3664  0B04  3064               	movlw	100
  3665  0B05  00F0               	movwf	___awmod@divisor
  3666  0B06  3000               	movlw	0
  3667  0B07  00F1               	movwf	___awmod@divisor+1
  3668  0B08  120A  158A  200A  120A  158A  	fcall	___awmod
  3669  0B0D  0871               	movf	?___awmod+1,w
  3670  0B0E  00FA               	movwf	___awdiv@dividend+1
  3671  0B0F  0870               	movf	?___awmod,w
  3672  0B10  00F9               	movwf	___awdiv@dividend
  3673  0B11  160A  158A  271B  120A  158A  	fcall	___awdiv
  3674  0B16  0877               	movf	?___awdiv,w
  3675  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0B19  00C2               	movwf	??_scale
  3678  0B1A  3001               	movlw	1
  3679  0B1B                     u4365:	
  3680  0B1B  1003               	clrc
  3681  0B1C  0DC2               	rlf	??_scale,f
  3682  0B1D  3EFF               	addlw	-1
  3683  0B1E  1D03               	skipz
  3684  0B1F  2B1B               	goto	u4365
  3685  0B20  1003               	clrc
  3686  0B21  0D42               	rlf	??_scale,w
  3687  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3688  0B23  0084               	movwf	4
  3689  0B24  160A  118A  200A  120A  158A  	fcall	stringdir
  3690  0B29  00C3               	movwf	??_scale+1
  3691  0B2A  160A  118A  200A  120A  158A  	fcall	stringdir
  3692  0B2F  00C4               	movwf	??_scale+2
  3693  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  3694  0B35  00C5               	movwf	??_scale+3
  3695  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  3696  0B3B  00C6               	movwf	??_scale+4
  3697  0B3C  0846               	movf	??_scale+4,w
  3698  0B3D  00A7               	movwf	___flmul@b+3
  3699  0B3E  0845               	movf	??_scale+3,w
  3700  0B3F  00A6               	movwf	___flmul@b+2
  3701  0B40  0844               	movf	??_scale+2,w
  3702  0B41  00A5               	movwf	___flmul@b+1
  3703  0B42  0843               	movf	??_scale+1,w
  3704  0B43  00A4               	movwf	___flmul@b
  3705  0B44  3064               	movlw	100
  3706  0B45  00F7               	movwf	___awdiv@divisor
  3707  0B46  3000               	movlw	0
  3708  0B47  00F8               	movwf	___awdiv@divisor+1
  3709  0B48  0850               	movf	scale@scl,w
  3710  0B49  00F9               	movwf	___awdiv@dividend
  3711  0B4A  01FA               	clrf	___awdiv@dividend+1
  3712  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3713  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3714  0B4D  160A  158A  271B  120A  158A  	fcall	___awdiv
  3715  0B52  0877               	movf	?___awdiv,w
  3716  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0B55  00C7               	movwf	??_scale+5
  3719  0B56  3001               	movlw	1
  3720  0B57                     u4375:	
  3721  0B57  1003               	clrc
  3722  0B58  0DC7               	rlf	??_scale+5,f
  3723  0B59  3EFF               	addlw	-1
  3724  0B5A  1D03               	skipz
  3725  0B5B  2B57               	goto	u4375
  3726  0B5C  1003               	clrc
  3727  0B5D  0D47               	rlf	??_scale+5,w
  3728  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3729  0B5F  0084               	movwf	4
  3730  0B60  160A  118A  200A  120A  158A  	fcall	stringdir
  3731  0B65  00C8               	movwf	??_scale+6
  3732  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  3733  0B6B  00C9               	movwf	??_scale+7
  3734  0B6C  160A  118A  200A  120A  158A  	fcall	stringdir
  3735  0B71  00CA               	movwf	??_scale+8
  3736  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  3737  0B77  00CB               	movwf	??_scale+9
  3738  0B78  084B               	movf	??_scale+9,w
  3739  0B79  00AB               	movwf	___flmul@a+3
  3740  0B7A  084A               	movf	??_scale+8,w
  3741  0B7B  00AA               	movwf	___flmul@a+2
  3742  0B7C  0849               	movf	??_scale+7,w
  3743  0B7D  00A9               	movwf	___flmul@a+1
  3744  0B7E  0848               	movf	??_scale+6,w
  3745  0B7F  00A8               	movwf	___flmul@a
  3746  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3747  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0B87  0827               	movf	?___flmul+3,w
  3750  0B88  00CF               	movwf	_scale$839+3
  3751  0B89  0826               	movf	?___flmul+2,w
  3752  0B8A  00CE               	movwf	_scale$839+2
  3753  0B8B  0825               	movf	?___flmul+1,w
  3754  0B8C  00CD               	movwf	_scale$839+1
  3755  0B8D  0824               	movf	?___flmul,w
  3756  0B8E  00CC               	movwf	_scale$839
  3757                           
  3758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3759  0B8F  300A               	movlw	10
  3760  0B90  00F0               	movwf	___awmod@divisor
  3761  0B91  3000               	movlw	0
  3762  0B92  00F1               	movwf	___awmod@divisor+1
  3763  0B93  0850               	movf	scale@scl,w
  3764  0B94  00F2               	movwf	___awmod@dividend
  3765  0B95  01F3               	clrf	___awmod@dividend+1
  3766  0B96  1BF2               	btfsc	___awmod@dividend,7
  3767  0B97  03F3               	decf	___awmod@dividend+1,f
  3768  0B98  120A  158A  200A  120A  158A  	fcall	___awmod
  3769  0B9D  0870               	movf	?___awmod,w
  3770  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0BA0  00C2               	movwf	??_scale
  3773  0BA1  3001               	movlw	1
  3774  0BA2                     u4385:	
  3775  0BA2  1003               	clrc
  3776  0BA3  0DC2               	rlf	??_scale,f
  3777  0BA4  3EFF               	addlw	-1
  3778  0BA5  1D03               	skipz
  3779  0BA6  2BA2               	goto	u4385
  3780  0BA7  1003               	clrc
  3781  0BA8  0D42               	rlf	??_scale,w
  3782  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3783  0BAA  0084               	movwf	4
  3784  0BAB  160A  118A  200A  120A  158A  	fcall	stringdir
  3785  0BB0  00C3               	movwf	??_scale+1
  3786  0BB1  160A  118A  200A  120A  158A  	fcall	stringdir
  3787  0BB6  00C4               	movwf	??_scale+2
  3788  0BB7  160A  118A  200A  120A  158A  	fcall	stringdir
  3789  0BBC  00C5               	movwf	??_scale+3
  3790  0BBD  160A  118A  200A  120A  158A  	fcall	stringdir
  3791  0BC2  00C6               	movwf	??_scale+4
  3792  0BC3  0846               	movf	??_scale+4,w
  3793  0BC4  00A7               	movwf	___flmul@b+3
  3794  0BC5  0845               	movf	??_scale+3,w
  3795  0BC6  00A6               	movwf	___flmul@b+2
  3796  0BC7  0844               	movf	??_scale+2,w
  3797  0BC8  00A5               	movwf	___flmul@b+1
  3798  0BC9  0843               	movf	??_scale+1,w
  3799  0BCA  00A4               	movwf	___flmul@b
  3800  0BCB  084F               	movf	_scale$839+3,w
  3801  0BCC  00AB               	movwf	___flmul@a+3
  3802  0BCD  084E               	movf	_scale$839+2,w
  3803  0BCE  00AA               	movwf	___flmul@a+2
  3804  0BCF  084D               	movf	_scale$839+1,w
  3805  0BD0  00A9               	movwf	___flmul@a+1
  3806  0BD1  084C               	movf	_scale$839,w
  3807  0BD2  00A8               	movwf	___flmul@a
  3808  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3809  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0BDA  0827               	movf	?___flmul+3,w
  3812  0BDB  00C1               	movwf	?_scale+3
  3813  0BDC  0826               	movf	?___flmul+2,w
  3814  0BDD  00C0               	movwf	?_scale+2
  3815  0BDE  0825               	movf	?___flmul+1,w
  3816  0BDF  00BF               	movwf	?_scale+1
  3817  0BE0  0824               	movf	?___flmul,w
  3818  0BE1  00BE               	movwf	?_scale
  3819  0BE2  2C9E               	goto	l219
  3820  0BE3                     l2717:	
  3821  0BE3  0850               	movf	scale@scl,w
  3822  0BE4  3A80               	xorlw	128
  3823  0BE5  3E75               	addlw	-139
  3824  0BE6  1C03               	skipc
  3825  0BE7  2BE9               	goto	u4391
  3826  0BE8  2BEA               	goto	u4390
  3827  0BE9                     u4391:	
  3828  0BE9  2C72               	goto	l2723
  3829  0BEA                     u4390:	
  3830  0BEA                     l2719:	
  3831                           
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3833  0BEA  300A               	movlw	10
  3834  0BEB  00F0               	movwf	___awmod@divisor
  3835  0BEC  3000               	movlw	0
  3836  0BED  00F1               	movwf	___awmod@divisor+1
  3837  0BEE  0850               	movf	scale@scl,w
  3838  0BEF  00F2               	movwf	___awmod@dividend
  3839  0BF0  01F3               	clrf	___awmod@dividend+1
  3840  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3841  0BF2  03F3               	decf	___awmod@dividend+1,f
  3842  0BF3  120A  158A  200A  120A  158A  	fcall	___awmod
  3843  0BF8  0870               	movf	?___awmod,w
  3844  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3846  0BFB  00C2               	movwf	??_scale
  3847  0BFC  3001               	movlw	1
  3848  0BFD                     u4405:	
  3849  0BFD  1003               	clrc
  3850  0BFE  0DC2               	rlf	??_scale,f
  3851  0BFF  3EFF               	addlw	-1
  3852  0C00  1D03               	skipz
  3853  0C01  2BFD               	goto	u4405
  3854  0C02  1003               	clrc
  3855  0C03  0D42               	rlf	??_scale,w
  3856  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3857  0C05  0084               	movwf	4
  3858  0C06  160A  118A  200A  120A  158A  	fcall	stringdir
  3859  0C0B  00C3               	movwf	??_scale+1
  3860  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3861  0C11  00C4               	movwf	??_scale+2
  3862  0C12  160A  118A  200A  120A  158A  	fcall	stringdir
  3863  0C17  00C5               	movwf	??_scale+3
  3864  0C18  160A  118A  200A  120A  158A  	fcall	stringdir
  3865  0C1D  00C6               	movwf	??_scale+4
  3866  0C1E  0846               	movf	??_scale+4,w
  3867  0C1F  00A7               	movwf	___flmul@b+3
  3868  0C20  0845               	movf	??_scale+3,w
  3869  0C21  00A6               	movwf	___flmul@b+2
  3870  0C22  0844               	movf	??_scale+2,w
  3871  0C23  00A5               	movwf	___flmul@b+1
  3872  0C24  0843               	movf	??_scale+1,w
  3873  0C25  00A4               	movwf	___flmul@b
  3874  0C26  300A               	movlw	10
  3875  0C27  00F7               	movwf	___awdiv@divisor
  3876  0C28  3000               	movlw	0
  3877  0C29  00F8               	movwf	___awdiv@divisor+1
  3878  0C2A  0850               	movf	scale@scl,w
  3879  0C2B  00F9               	movwf	___awdiv@dividend
  3880  0C2C  01FA               	clrf	___awdiv@dividend+1
  3881  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3882  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3883  0C2F  160A  158A  271B  120A  158A  	fcall	___awdiv
  3884  0C34  0877               	movf	?___awdiv,w
  3885  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0C37  00C7               	movwf	??_scale+5
  3888  0C38  3001               	movlw	1
  3889  0C39                     u4415:	
  3890  0C39  1003               	clrc
  3891  0C3A  0DC7               	rlf	??_scale+5,f
  3892  0C3B  3EFF               	addlw	-1
  3893  0C3C  1D03               	skipz
  3894  0C3D  2C39               	goto	u4415
  3895  0C3E  1003               	clrc
  3896  0C3F  0D47               	rlf	??_scale+5,w
  3897  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3898  0C41  0084               	movwf	4
  3899  0C42  160A  118A  200A  120A  158A  	fcall	stringdir
  3900  0C47  00C8               	movwf	??_scale+6
  3901  0C48  160A  118A  200A  120A  158A  	fcall	stringdir
  3902  0C4D  00C9               	movwf	??_scale+7
  3903  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  3904  0C53  00CA               	movwf	??_scale+8
  3905  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  3906  0C59  00CB               	movwf	??_scale+9
  3907  0C5A  084B               	movf	??_scale+9,w
  3908  0C5B  00AB               	movwf	___flmul@a+3
  3909  0C5C  084A               	movf	??_scale+8,w
  3910  0C5D  00AA               	movwf	___flmul@a+2
  3911  0C5E  0849               	movf	??_scale+7,w
  3912  0C5F  00A9               	movwf	___flmul@a+1
  3913  0C60  0848               	movf	??_scale+6,w
  3914  0C61  00A8               	movwf	___flmul@a
  3915  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3916  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0C69  0827               	movf	?___flmul+3,w
  3919  0C6A  00C1               	movwf	?_scale+3
  3920  0C6B  0826               	movf	?___flmul+2,w
  3921  0C6C  00C0               	movwf	?_scale+2
  3922  0C6D  0825               	movf	?___flmul+1,w
  3923  0C6E  00BF               	movwf	?_scale+1
  3924  0C6F  0824               	movf	?___flmul,w
  3925  0C70  00BE               	movwf	?_scale
  3926  0C71  2C9E               	goto	l219
  3927  0C72                     l2723:	
  3928                           
  3929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3930  0C72  0850               	movf	scale@scl,w
  3931  0C73  00C2               	movwf	??_scale
  3932  0C74  3001               	movlw	1
  3933  0C75                     u4425:	
  3934  0C75  1003               	clrc
  3935  0C76  0DC2               	rlf	??_scale,f
  3936  0C77  3EFF               	addlw	-1
  3937  0C78  1D03               	skipz
  3938  0C79  2C75               	goto	u4425
  3939  0C7A  1003               	clrc
  3940  0C7B  0D42               	rlf	??_scale,w
  3941  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3942  0C7D  0084               	movwf	4
  3943  0C7E  160A  118A  200A  120A  158A  	fcall	stringdir
  3944  0C83  00C3               	movwf	??_scale+1
  3945  0C84  160A  118A  200A  120A  158A  	fcall	stringdir
  3946  0C89  00C4               	movwf	??_scale+2
  3947  0C8A  160A  118A  200A  120A  158A  	fcall	stringdir
  3948  0C8F  00C5               	movwf	??_scale+3
  3949  0C90  160A  118A  200A  120A  158A  	fcall	stringdir
  3950  0C95  00C6               	movwf	??_scale+4
  3951  0C96  0846               	movf	??_scale+4,w
  3952  0C97  00C1               	movwf	?_scale+3
  3953  0C98  0845               	movf	??_scale+3,w
  3954  0C99  00C0               	movwf	?_scale+2
  3955  0C9A  0844               	movf	??_scale+2,w
  3956  0C9B  00BF               	movwf	?_scale+1
  3957  0C9C  0843               	movf	??_scale+1,w
  3958  0C9D  00BE               	movwf	?_scale
  3959  0C9E                     l219:	
  3960  0C9E  0008               	return
  3961  0C9F                     __end_of_scale:	
  3962                           
  3963                           	psect	text5
  3964  080A                     __ptext5:	
  3965 ;; *************** function ___awmod *****************
  3966 ;; Defined at:
  3967 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  divisor         2    0[COMMON] int 
  3970 ;;  dividend        2    2[COMMON] int 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  sign            1    6[COMMON] unsigned char 
  3973 ;;  counter         1    5[COMMON] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2    0[COMMON] int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3983 ;;      Params:         4       0       0       0       0
  3984 ;;      Locals:         2       0       0       0       0
  3985 ;;      Temps:          1       0       0       0       0
  3986 ;;      Totals:         7       0       0       0       0
  3987 ;;Total ram usage:        7 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_scale
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function ___awmod
  3998  080A                     ___awmod:	
  3999  080A                     l2225:	
  4000                           ;incstack = 0
  4001                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4002                           
  4003  080A  01F6               	clrf	___awmod@sign
  4004  080B                     l2227:	
  4005  080B  1FF3               	btfss	___awmod@dividend+1,7
  4006  080C  280E               	goto	u3121
  4007  080D  280F               	goto	u3120
  4008  080E                     u3121:	
  4009  080E  2816               	goto	l2233
  4010  080F                     u3120:	
  4011  080F                     l2229:	
  4012  080F  09F2               	comf	___awmod@dividend,f
  4013  0810  09F3               	comf	___awmod@dividend+1,f
  4014  0811  0AF2               	incf	___awmod@dividend,f
  4015  0812  1903               	skipnz
  4016  0813  0AF3               	incf	___awmod@dividend+1,f
  4017  0814                     l2231:	
  4018  0814  01F6               	clrf	___awmod@sign
  4019  0815  0AF6               	incf	___awmod@sign,f
  4020  0816                     l2233:	
  4021  0816  1FF1               	btfss	___awmod@divisor+1,7
  4022  0817  2819               	goto	u3131
  4023  0818  281A               	goto	u3130
  4024  0819                     u3131:	
  4025  0819  281F               	goto	l2237
  4026  081A                     u3130:	
  4027  081A                     l2235:	
  4028  081A  09F0               	comf	___awmod@divisor,f
  4029  081B  09F1               	comf	___awmod@divisor+1,f
  4030  081C  0AF0               	incf	___awmod@divisor,f
  4031  081D  1903               	skipnz
  4032  081E  0AF1               	incf	___awmod@divisor+1,f
  4033  081F                     l2237:	
  4034  081F  0870               	movf	___awmod@divisor,w
  4035  0820  0471               	iorwf	___awmod@divisor+1,w
  4036  0821  1903               	btfsc	3,2
  4037  0822  2824               	goto	u3141
  4038  0823  2825               	goto	u3140
  4039  0824                     u3141:	
  4040  0824  2854               	goto	l2255
  4041  0825                     u3140:	
  4042  0825                     l2239:	
  4043  0825  01F5               	clrf	___awmod@counter
  4044  0826  0AF5               	incf	___awmod@counter,f
  4045  0827  2833               	goto	l2245
  4046  0828                     l2241:	
  4047  0828  3001               	movlw	1
  4048  0829                     u3155:	
  4049  0829  1003               	clrc
  4050  082A  0DF0               	rlf	___awmod@divisor,f
  4051  082B  0DF1               	rlf	___awmod@divisor+1,f
  4052  082C  3EFF               	addlw	-1
  4053  082D  1D03               	skipz
  4054  082E  2829               	goto	u3155
  4055  082F                     l2243:	
  4056  082F  3001               	movlw	1
  4057  0830  00F4               	movwf	??___awmod
  4058  0831  0874               	movf	??___awmod,w
  4059  0832  07F5               	addwf	___awmod@counter,f
  4060  0833                     l2245:	
  4061  0833  1FF1               	btfss	___awmod@divisor+1,7
  4062  0834  2836               	goto	u3161
  4063  0835  2837               	goto	u3160
  4064  0836                     u3161:	
  4065  0836  2828               	goto	l2241
  4066  0837                     u3160:	
  4067  0837                     l2247:	
  4068  0837  0871               	movf	___awmod@divisor+1,w
  4069  0838  0273               	subwf	___awmod@dividend+1,w
  4070  0839  1D03               	skipz
  4071  083A  283D               	goto	u3175
  4072  083B  0870               	movf	___awmod@divisor,w
  4073  083C  0272               	subwf	___awmod@dividend,w
  4074  083D                     u3175:	
  4075  083D  1C03               	skipc
  4076  083E  2840               	goto	u3171
  4077  083F  2841               	goto	u3170
  4078  0840                     u3171:	
  4079  0840  2847               	goto	l2251
  4080  0841                     u3170:	
  4081  0841                     l2249:	
  4082  0841  0870               	movf	___awmod@divisor,w
  4083  0842  02F2               	subwf	___awmod@dividend,f
  4084  0843  0871               	movf	___awmod@divisor+1,w
  4085  0844  1C03               	skipc
  4086  0845  03F3               	decf	___awmod@dividend+1,f
  4087  0846  02F3               	subwf	___awmod@dividend+1,f
  4088  0847                     l2251:	
  4089  0847  3001               	movlw	1
  4090  0848                     u3185:	
  4091  0848  1003               	clrc
  4092  0849  0CF1               	rrf	___awmod@divisor+1,f
  4093  084A  0CF0               	rrf	___awmod@divisor,f
  4094  084B  3EFF               	addlw	-1
  4095  084C  1D03               	skipz
  4096  084D  2848               	goto	u3185
  4097  084E                     l2253:	
  4098  084E  3001               	movlw	1
  4099  084F  02F5               	subwf	___awmod@counter,f
  4100  0850  1D03               	btfss	3,2
  4101  0851  2853               	goto	u3191
  4102  0852  2854               	goto	u3190
  4103  0853                     u3191:	
  4104  0853  2837               	goto	l2247
  4105  0854                     u3190:	
  4106  0854                     l2255:	
  4107  0854  0876               	movf	___awmod@sign,w
  4108  0855  1903               	btfsc	3,2
  4109  0856  2858               	goto	u3201
  4110  0857  2859               	goto	u3200
  4111  0858                     u3201:	
  4112  0858  285E               	goto	l2259
  4113  0859                     u3200:	
  4114  0859                     l2257:	
  4115  0859  09F2               	comf	___awmod@dividend,f
  4116  085A  09F3               	comf	___awmod@dividend+1,f
  4117  085B  0AF2               	incf	___awmod@dividend,f
  4118  085C  1903               	skipnz
  4119  085D  0AF3               	incf	___awmod@dividend+1,f
  4120  085E                     l2259:	
  4121  085E  0873               	movf	___awmod@dividend+1,w
  4122  085F  00F1               	movwf	?___awmod+1
  4123  0860  0872               	movf	___awmod@dividend,w
  4124  0861  00F0               	movwf	?___awmod
  4125  0862                     l445:	
  4126  0862  0008               	return
  4127  0863                     __end_of___awmod:	
  4128                           
  4129                           	psect	text6
  4130  1F1B                     __ptext6:	
  4131 ;; *************** function ___awdiv *****************
  4132 ;; Defined at:
  4133 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  divisor         2    7[COMMON] int 
  4136 ;;  dividend        2    9[COMMON] int 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  quotient        2    2[BANK0 ] int 
  4139 ;;  sign            1    1[BANK0 ] unsigned char 
  4140 ;;  counter         1    0[BANK0 ] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  2    7[COMMON] int 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         4       0       0       0       0
  4151 ;;      Locals:         0       4       0       0       0
  4152 ;;      Temps:          1       0       0       0       0
  4153 ;;      Totals:         5       4       0       0       0
  4154 ;;Total ram usage:        9 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_scale
  4160 ;;		_sprintf
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function ___awdiv
  4166  1F1B                     ___awdiv:	
  4167  1F1B                     l2181:	
  4168                           ;incstack = 0
  4169                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4170                           
  4171  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4172  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  4173  1F1D  01A1               	clrf	___awdiv@sign
  4174  1F1E                     l2183:	
  4175  1F1E  1FF8               	btfss	___awdiv@divisor+1,7
  4176  1F1F  2F21               	goto	u3021
  4177  1F20  2F22               	goto	u3020
  4178  1F21                     u3021:	
  4179  1F21  2F29               	goto	l2189
  4180  1F22                     u3020:	
  4181  1F22                     l2185:	
  4182  1F22  09F7               	comf	___awdiv@divisor,f
  4183  1F23  09F8               	comf	___awdiv@divisor+1,f
  4184  1F24  0AF7               	incf	___awdiv@divisor,f
  4185  1F25  1903               	skipnz
  4186  1F26  0AF8               	incf	___awdiv@divisor+1,f
  4187  1F27                     l2187:	
  4188  1F27  01A1               	clrf	___awdiv@sign
  4189  1F28  0AA1               	incf	___awdiv@sign,f
  4190  1F29                     l2189:	
  4191  1F29  1FFA               	btfss	___awdiv@dividend+1,7
  4192  1F2A  2F2C               	goto	u3031
  4193  1F2B  2F2D               	goto	u3030
  4194  1F2C                     u3031:	
  4195  1F2C  2F36               	goto	l2195
  4196  1F2D                     u3030:	
  4197  1F2D                     l2191:	
  4198  1F2D  09F9               	comf	___awdiv@dividend,f
  4199  1F2E  09FA               	comf	___awdiv@dividend+1,f
  4200  1F2F  0AF9               	incf	___awdiv@dividend,f
  4201  1F30  1903               	skipnz
  4202  1F31  0AFA               	incf	___awdiv@dividend+1,f
  4203  1F32                     l2193:	
  4204  1F32  3001               	movlw	1
  4205  1F33  00FB               	movwf	??___awdiv
  4206  1F34  087B               	movf	??___awdiv,w
  4207  1F35  06A1               	xorwf	___awdiv@sign,f
  4208  1F36                     l2195:	
  4209  1F36  01A2               	clrf	___awdiv@quotient
  4210  1F37  01A3               	clrf	___awdiv@quotient+1
  4211  1F38                     l2197:	
  4212  1F38  0877               	movf	___awdiv@divisor,w
  4213  1F39  0478               	iorwf	___awdiv@divisor+1,w
  4214  1F3A  1903               	btfsc	3,2
  4215  1F3B  2F3D               	goto	u3041
  4216  1F3C  2F3E               	goto	u3040
  4217  1F3D                     u3041:	
  4218  1F3D  2F75               	goto	l2217
  4219  1F3E                     u3040:	
  4220  1F3E                     l2199:	
  4221  1F3E  01A0               	clrf	___awdiv@counter
  4222  1F3F  0AA0               	incf	___awdiv@counter,f
  4223  1F40  2F4C               	goto	l2205
  4224  1F41                     l2201:	
  4225  1F41  3001               	movlw	1
  4226  1F42                     u3055:	
  4227  1F42  1003               	clrc
  4228  1F43  0DF7               	rlf	___awdiv@divisor,f
  4229  1F44  0DF8               	rlf	___awdiv@divisor+1,f
  4230  1F45  3EFF               	addlw	-1
  4231  1F46  1D03               	skipz
  4232  1F47  2F42               	goto	u3055
  4233  1F48                     l2203:	
  4234  1F48  3001               	movlw	1
  4235  1F49  00FB               	movwf	??___awdiv
  4236  1F4A  087B               	movf	??___awdiv,w
  4237  1F4B  07A0               	addwf	___awdiv@counter,f
  4238  1F4C                     l2205:	
  4239  1F4C  1FF8               	btfss	___awdiv@divisor+1,7
  4240  1F4D  2F4F               	goto	u3061
  4241  1F4E  2F50               	goto	u3060
  4242  1F4F                     u3061:	
  4243  1F4F  2F41               	goto	l2201
  4244  1F50                     u3060:	
  4245  1F50                     l2207:	
  4246  1F50  3001               	movlw	1
  4247  1F51                     u3075:	
  4248  1F51  1003               	clrc
  4249  1F52  0DA2               	rlf	___awdiv@quotient,f
  4250  1F53  0DA3               	rlf	___awdiv@quotient+1,f
  4251  1F54  3EFF               	addlw	-1
  4252  1F55  1D03               	skipz
  4253  1F56  2F51               	goto	u3075
  4254  1F57  0878               	movf	___awdiv@divisor+1,w
  4255  1F58  027A               	subwf	___awdiv@dividend+1,w
  4256  1F59  1D03               	skipz
  4257  1F5A  2F5D               	goto	u3085
  4258  1F5B  0877               	movf	___awdiv@divisor,w
  4259  1F5C  0279               	subwf	___awdiv@dividend,w
  4260  1F5D                     u3085:	
  4261  1F5D  1C03               	skipc
  4262  1F5E  2F60               	goto	u3081
  4263  1F5F  2F61               	goto	u3080
  4264  1F60                     u3081:	
  4265  1F60  2F68               	goto	l2213
  4266  1F61                     u3080:	
  4267  1F61                     l2209:	
  4268  1F61  0877               	movf	___awdiv@divisor,w
  4269  1F62  02F9               	subwf	___awdiv@dividend,f
  4270  1F63  0878               	movf	___awdiv@divisor+1,w
  4271  1F64  1C03               	skipc
  4272  1F65  03FA               	decf	___awdiv@dividend+1,f
  4273  1F66  02FA               	subwf	___awdiv@dividend+1,f
  4274  1F67                     l2211:	
  4275  1F67  1422               	bsf	___awdiv@quotient,0
  4276  1F68                     l2213:	
  4277  1F68  3001               	movlw	1
  4278  1F69                     u3095:	
  4279  1F69  1003               	clrc
  4280  1F6A  0CF8               	rrf	___awdiv@divisor+1,f
  4281  1F6B  0CF7               	rrf	___awdiv@divisor,f
  4282  1F6C  3EFF               	addlw	-1
  4283  1F6D  1D03               	skipz
  4284  1F6E  2F69               	goto	u3095
  4285  1F6F                     l2215:	
  4286  1F6F  3001               	movlw	1
  4287  1F70  02A0               	subwf	___awdiv@counter,f
  4288  1F71  1D03               	btfss	3,2
  4289  1F72  2F74               	goto	u3101
  4290  1F73  2F75               	goto	u3100
  4291  1F74                     u3101:	
  4292  1F74  2F50               	goto	l2207
  4293  1F75                     u3100:	
  4294  1F75                     l2217:	
  4295  1F75  0821               	movf	___awdiv@sign,w
  4296  1F76  1903               	btfsc	3,2
  4297  1F77  2F79               	goto	u3111
  4298  1F78  2F7A               	goto	u3110
  4299  1F79                     u3111:	
  4300  1F79  2F7F               	goto	l2221
  4301  1F7A                     u3110:	
  4302  1F7A                     l2219:	
  4303  1F7A  09A2               	comf	___awdiv@quotient,f
  4304  1F7B  09A3               	comf	___awdiv@quotient+1,f
  4305  1F7C  0AA2               	incf	___awdiv@quotient,f
  4306  1F7D  1903               	skipnz
  4307  1F7E  0AA3               	incf	___awdiv@quotient+1,f
  4308  1F7F                     l2221:	
  4309  1F7F  0823               	movf	___awdiv@quotient+1,w
  4310  1F80  00F8               	movwf	?___awdiv+1
  4311  1F81  0822               	movf	___awdiv@quotient,w
  4312  1F82  00F7               	movwf	?___awdiv
  4313  1F83                     l432:	
  4314  1F83  0008               	return
  4315  1F84                     __end_of___awdiv:	
  4316                           
  4317                           	psect	text7
  4318  002E                     __ptext7:	
  4319 ;; *************** function _fround *****************
  4320 ;; Defined at:
  4321 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  prec            1    wreg     unsigned char 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  prec            1   49[BANK0 ] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  4   30[BANK0 ] unsigned char 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4335 ;;      Params:         0       4       0       0       0
  4336 ;;      Locals:         0       9       0       0       0
  4337 ;;      Temps:          0       7       0       0       0
  4338 ;;      Totals:         0      20       0       0       0
  4339 ;;Total ram usage:       20 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    2
  4342 ;; This function calls:
  4343 ;;		___flmul
  4344 ;;		___lwdiv
  4345 ;;		___lwmod
  4346 ;; This function is called by:
  4347 ;;		_sprintf
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function _fround
  4353  002E                     _fround:	
  4354                           
  4355                           ;incstack = 0
  4356                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4357                           ;fround@prec stored from wreg
  4358  002E  1283               	bcf	3,5	;RP0=0, select bank0
  4359  002F  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0030  00D1               	movwf	fround@prec
  4361  0031                     l2669:	
  4362                           
  4363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4364  0031  306E               	movlw	110
  4365  0032  0251               	subwf	fround@prec,w
  4366  0033  1C03               	skipc
  4367  0034  2836               	goto	u4181
  4368  0035  2837               	goto	u4180
  4369  0036                     u4181:	
  4370  0036  2944               	goto	l2677
  4371  0037                     u4180:	
  4372  0037                     l2671:	
  4373                           
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4375  0037  303F               	movlw	63
  4376  0038  00A7               	movwf	___flmul@b+3
  4377  0039  3000               	movlw	0
  4378  003A  00A6               	movwf	___flmul@b+2
  4379  003B  3000               	movlw	0
  4380  003C  00A5               	movwf	___flmul@b+1
  4381  003D  3000               	movlw	0
  4382  003E  00A4               	movwf	___flmul@b
  4383  003F  3064               	movlw	100
  4384  0040  00F6               	movwf	___lwdiv@divisor
  4385  0041  3000               	movlw	0
  4386  0042  00F7               	movwf	___lwdiv@divisor+1
  4387  0043  0851               	movf	fround@prec,w
  4388  0044  00C2               	movwf	??_fround
  4389  0045  01C3               	clrf	??_fround+1
  4390  0046  0842               	movf	??_fround,w
  4391  0047  00F8               	movwf	___lwdiv@dividend
  4392  0048  0843               	movf	??_fround+1,w
  4393  0049  00F9               	movwf	___lwdiv@dividend+1
  4394  004A  160A  158A  257D  120A  118A  	fcall	___lwdiv
  4395  004F  0876               	movf	?___lwdiv,w
  4396  0050  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0051  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0052  00C4               	movwf	??_fround+2
  4399  0053  3001               	movlw	1
  4400  0054                     u4195:	
  4401  0054  1003               	clrc
  4402  0055  0DC4               	rlf	??_fround+2,f
  4403  0056  3EFF               	addlw	-1
  4404  0057  1D03               	skipz
  4405  0058  2854               	goto	u4195
  4406  0059  1003               	clrc
  4407  005A  0D44               	rlf	??_fround+2,w
  4408  005B  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4409  005C  0084               	movwf	4
  4410  005D  160A  118A  200A  120A  118A  	fcall	stringdir
  4411  0062  00C5               	movwf	??_fround+3
  4412  0063  160A  118A  200A  120A  118A  	fcall	stringdir
  4413  0068  00C6               	movwf	??_fround+4
  4414  0069  160A  118A  200A  120A  118A  	fcall	stringdir
  4415  006E  00C7               	movwf	??_fround+5
  4416  006F  160A  118A  200A  120A  118A  	fcall	stringdir
  4417  0074  00C8               	movwf	??_fround+6
  4418  0075  0848               	movf	??_fround+6,w
  4419  0076  00AB               	movwf	___flmul@a+3
  4420  0077  0847               	movf	??_fround+5,w
  4421  0078  00AA               	movwf	___flmul@a+2
  4422  0079  0846               	movf	??_fround+4,w
  4423  007A  00A9               	movwf	___flmul@a+1
  4424  007B  0845               	movf	??_fround+3,w
  4425  007C  00A8               	movwf	___flmul@a
  4426  007D  120A  158A  249F  120A  118A  	fcall	___flmul
  4427  0082  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0083  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0084  0827               	movf	?___flmul+3,w
  4430  0085  00D0               	movwf	_fround$837+3
  4431  0086  0826               	movf	?___flmul+2,w
  4432  0087  00CF               	movwf	_fround$837+2
  4433  0088  0825               	movf	?___flmul+1,w
  4434  0089  00CE               	movwf	_fround$837+1
  4435  008A  0824               	movf	?___flmul,w
  4436  008B  00CD               	movwf	_fround$837
  4437                           
  4438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4439  008C  300A               	movlw	10
  4440  008D  00F6               	movwf	___lwdiv@divisor
  4441  008E  3000               	movlw	0
  4442  008F  00F7               	movwf	___lwdiv@divisor+1
  4443  0090  0851               	movf	fround@prec,w
  4444  0091  00C2               	movwf	??_fround
  4445  0092  01C3               	clrf	??_fround+1
  4446  0093  0842               	movf	??_fround,w
  4447  0094  00F2               	movwf	___lwmod@dividend
  4448  0095  0843               	movf	??_fround+1,w
  4449  0096  00F3               	movwf	___lwmod@dividend+1
  4450  0097  3064               	movlw	100
  4451  0098  00F0               	movwf	___lwmod@divisor
  4452  0099  3000               	movlw	0
  4453  009A  00F1               	movwf	___lwmod@divisor+1
  4454  009B  160A  158A  24C4  120A  118A  	fcall	___lwmod
  4455  00A0  0871               	movf	?___lwmod+1,w
  4456  00A1  00F9               	movwf	___lwdiv@dividend+1
  4457  00A2  0870               	movf	?___lwmod,w
  4458  00A3  00F8               	movwf	___lwdiv@dividend
  4459  00A4  160A  158A  257D  120A  118A  	fcall	___lwdiv
  4460  00A9  0876               	movf	?___lwdiv,w
  4461  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4462  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4463  00AC  00C4               	movwf	??_fround+2
  4464  00AD  3001               	movlw	1
  4465  00AE                     u4205:	
  4466  00AE  1003               	clrc
  4467  00AF  0DC4               	rlf	??_fround+2,f
  4468  00B0  3EFF               	addlw	-1
  4469  00B1  1D03               	skipz
  4470  00B2  28AE               	goto	u4205
  4471  00B3  1003               	clrc
  4472  00B4  0D44               	rlf	??_fround+2,w
  4473  00B5  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4474  00B6  0084               	movwf	4
  4475  00B7  160A  118A  200A  120A  118A  	fcall	stringdir
  4476  00BC  00C5               	movwf	??_fround+3
  4477  00BD  160A  118A  200A  120A  118A  	fcall	stringdir
  4478  00C2  00C6               	movwf	??_fround+4
  4479  00C3  160A  118A  200A  120A  118A  	fcall	stringdir
  4480  00C8  00C7               	movwf	??_fround+5
  4481  00C9  160A  118A  200A  120A  118A  	fcall	stringdir
  4482  00CE  00C8               	movwf	??_fround+6
  4483  00CF  0848               	movf	??_fround+6,w
  4484  00D0  00A7               	movwf	___flmul@b+3
  4485  00D1  0847               	movf	??_fround+5,w
  4486  00D2  00A6               	movwf	___flmul@b+2
  4487  00D3  0846               	movf	??_fround+4,w
  4488  00D4  00A5               	movwf	___flmul@b+1
  4489  00D5  0845               	movf	??_fround+3,w
  4490  00D6  00A4               	movwf	___flmul@b
  4491  00D7  0850               	movf	_fround$837+3,w
  4492  00D8  00AB               	movwf	___flmul@a+3
  4493  00D9  084F               	movf	_fround$837+2,w
  4494  00DA  00AA               	movwf	___flmul@a+2
  4495  00DB  084E               	movf	_fround$837+1,w
  4496  00DC  00A9               	movwf	___flmul@a+1
  4497  00DD  084D               	movf	_fround$837,w
  4498  00DE  00A8               	movwf	___flmul@a
  4499  00DF  120A  158A  249F  120A  118A  	fcall	___flmul
  4500  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4501  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4502  00E6  0827               	movf	?___flmul+3,w
  4503  00E7  00CC               	movwf	_fround$838+3
  4504  00E8  0826               	movf	?___flmul+2,w
  4505  00E9  00CB               	movwf	_fround$838+2
  4506  00EA  0825               	movf	?___flmul+1,w
  4507  00EB  00CA               	movwf	_fround$838+1
  4508  00EC  0824               	movf	?___flmul,w
  4509  00ED  00C9               	movwf	_fround$838
  4510                           
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4512  00EE  300A               	movlw	10
  4513  00EF  00F0               	movwf	___lwmod@divisor
  4514  00F0  3000               	movlw	0
  4515  00F1  00F1               	movwf	___lwmod@divisor+1
  4516  00F2  0851               	movf	fround@prec,w
  4517  00F3  00C2               	movwf	??_fround
  4518  00F4  01C3               	clrf	??_fround+1
  4519  00F5  0842               	movf	??_fround,w
  4520  00F6  00F2               	movwf	___lwmod@dividend
  4521  00F7  0843               	movf	??_fround+1,w
  4522  00F8  00F3               	movwf	___lwmod@dividend+1
  4523  00F9  160A  158A  24C4  120A  118A  	fcall	___lwmod
  4524  00FE  0870               	movf	?___lwmod,w
  4525  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0100  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0101  00C4               	movwf	??_fround+2
  4528  0102  3001               	movlw	1
  4529  0103                     u4215:	
  4530  0103  1003               	clrc
  4531  0104  0DC4               	rlf	??_fround+2,f
  4532  0105  3EFF               	addlw	-1
  4533  0106  1D03               	skipz
  4534  0107  2903               	goto	u4215
  4535  0108  1003               	clrc
  4536  0109  0D44               	rlf	??_fround+2,w
  4537  010A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4538  010B  0084               	movwf	4
  4539  010C  160A  118A  200A  120A  118A  	fcall	stringdir
  4540  0111  00C5               	movwf	??_fround+3
  4541  0112  160A  118A  200A  120A  118A  	fcall	stringdir
  4542  0117  00C6               	movwf	??_fround+4
  4543  0118  160A  118A  200A  120A  118A  	fcall	stringdir
  4544  011D  00C7               	movwf	??_fround+5
  4545  011E  160A  118A  200A  120A  118A  	fcall	stringdir
  4546  0123  00C8               	movwf	??_fround+6
  4547  0124  0848               	movf	??_fround+6,w
  4548  0125  00A7               	movwf	___flmul@b+3
  4549  0126  0847               	movf	??_fround+5,w
  4550  0127  00A6               	movwf	___flmul@b+2
  4551  0128  0846               	movf	??_fround+4,w
  4552  0129  00A5               	movwf	___flmul@b+1
  4553  012A  0845               	movf	??_fround+3,w
  4554  012B  00A4               	movwf	___flmul@b
  4555  012C  084C               	movf	_fround$838+3,w
  4556  012D  00AB               	movwf	___flmul@a+3
  4557  012E  084B               	movf	_fround$838+2,w
  4558  012F  00AA               	movwf	___flmul@a+2
  4559  0130  084A               	movf	_fround$838+1,w
  4560  0131  00A9               	movwf	___flmul@a+1
  4561  0132  0849               	movf	_fround$838,w
  4562  0133  00A8               	movwf	___flmul@a
  4563  0134  120A  158A  249F  120A  118A  	fcall	___flmul
  4564  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4565  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4566  013B  0827               	movf	?___flmul+3,w
  4567  013C  00C1               	movwf	?_fround+3
  4568  013D  0826               	movf	?___flmul+2,w
  4569  013E  00C0               	movwf	?_fround+2
  4570  013F  0825               	movf	?___flmul+1,w
  4571  0140  00BF               	movwf	?_fround+1
  4572  0141  0824               	movf	?___flmul,w
  4573  0142  00BE               	movwf	?_fround
  4574  0143  2A38               	goto	l212
  4575  0144                     l2677:	
  4576  0144  300B               	movlw	11
  4577  0145  0251               	subwf	fround@prec,w
  4578  0146  1C03               	skipc
  4579  0147  2949               	goto	u4221
  4580  0148  294A               	goto	u4220
  4581  0149                     u4221:	
  4582  0149  29F5               	goto	l2683
  4583  014A                     u4220:	
  4584  014A                     l2679:	
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4587  014A  303F               	movlw	63
  4588  014B  00A7               	movwf	___flmul@b+3
  4589  014C  3000               	movlw	0
  4590  014D  00A6               	movwf	___flmul@b+2
  4591  014E  3000               	movlw	0
  4592  014F  00A5               	movwf	___flmul@b+1
  4593  0150  3000               	movlw	0
  4594  0151  00A4               	movwf	___flmul@b
  4595  0152  300A               	movlw	10
  4596  0153  00F6               	movwf	___lwdiv@divisor
  4597  0154  3000               	movlw	0
  4598  0155  00F7               	movwf	___lwdiv@divisor+1
  4599  0156  0851               	movf	fround@prec,w
  4600  0157  00C2               	movwf	??_fround
  4601  0158  01C3               	clrf	??_fround+1
  4602  0159  0842               	movf	??_fround,w
  4603  015A  00F8               	movwf	___lwdiv@dividend
  4604  015B  0843               	movf	??_fround+1,w
  4605  015C  00F9               	movwf	___lwdiv@dividend+1
  4606  015D  160A  158A  257D  120A  118A  	fcall	___lwdiv
  4607  0162  0876               	movf	?___lwdiv,w
  4608  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0165  00C4               	movwf	??_fround+2
  4611  0166  3001               	movlw	1
  4612  0167                     u4235:	
  4613  0167  1003               	clrc
  4614  0168  0DC4               	rlf	??_fround+2,f
  4615  0169  3EFF               	addlw	-1
  4616  016A  1D03               	skipz
  4617  016B  2967               	goto	u4235
  4618  016C  1003               	clrc
  4619  016D  0D44               	rlf	??_fround+2,w
  4620  016E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4621  016F  0084               	movwf	4
  4622  0170  160A  118A  200A  120A  118A  	fcall	stringdir
  4623  0175  00C5               	movwf	??_fround+3
  4624  0176  160A  118A  200A  120A  118A  	fcall	stringdir
  4625  017B  00C6               	movwf	??_fround+4
  4626  017C  160A  118A  200A  120A  118A  	fcall	stringdir
  4627  0181  00C7               	movwf	??_fround+5
  4628  0182  160A  118A  200A  120A  118A  	fcall	stringdir
  4629  0187  00C8               	movwf	??_fround+6
  4630  0188  0848               	movf	??_fround+6,w
  4631  0189  00AB               	movwf	___flmul@a+3
  4632  018A  0847               	movf	??_fround+5,w
  4633  018B  00AA               	movwf	___flmul@a+2
  4634  018C  0846               	movf	??_fround+4,w
  4635  018D  00A9               	movwf	___flmul@a+1
  4636  018E  0845               	movf	??_fround+3,w
  4637  018F  00A8               	movwf	___flmul@a
  4638  0190  120A  158A  249F  120A  118A  	fcall	___flmul
  4639  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0197  0827               	movf	?___flmul+3,w
  4642  0198  00D0               	movwf	_fround$837+3
  4643  0199  0826               	movf	?___flmul+2,w
  4644  019A  00CF               	movwf	_fround$837+2
  4645  019B  0825               	movf	?___flmul+1,w
  4646  019C  00CE               	movwf	_fround$837+1
  4647  019D  0824               	movf	?___flmul,w
  4648  019E  00CD               	movwf	_fround$837
  4649                           
  4650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4651  019F  300A               	movlw	10
  4652  01A0  00F0               	movwf	___lwmod@divisor
  4653  01A1  3000               	movlw	0
  4654  01A2  00F1               	movwf	___lwmod@divisor+1
  4655  01A3  0851               	movf	fround@prec,w
  4656  01A4  00C2               	movwf	??_fround
  4657  01A5  01C3               	clrf	??_fround+1
  4658  01A6  0842               	movf	??_fround,w
  4659  01A7  00F2               	movwf	___lwmod@dividend
  4660  01A8  0843               	movf	??_fround+1,w
  4661  01A9  00F3               	movwf	___lwmod@dividend+1
  4662  01AA  160A  158A  24C4  120A  118A  	fcall	___lwmod
  4663  01AF  0870               	movf	?___lwmod,w
  4664  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  4665  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  4666  01B2  00C4               	movwf	??_fround+2
  4667  01B3  3001               	movlw	1
  4668  01B4                     u4245:	
  4669  01B4  1003               	clrc
  4670  01B5  0DC4               	rlf	??_fround+2,f
  4671  01B6  3EFF               	addlw	-1
  4672  01B7  1D03               	skipz
  4673  01B8  29B4               	goto	u4245
  4674  01B9  1003               	clrc
  4675  01BA  0D44               	rlf	??_fround+2,w
  4676  01BB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4677  01BC  0084               	movwf	4
  4678  01BD  160A  118A  200A  120A  118A  	fcall	stringdir
  4679  01C2  00C5               	movwf	??_fround+3
  4680  01C3  160A  118A  200A  120A  118A  	fcall	stringdir
  4681  01C8  00C6               	movwf	??_fround+4
  4682  01C9  160A  118A  200A  120A  118A  	fcall	stringdir
  4683  01CE  00C7               	movwf	??_fround+5
  4684  01CF  160A  118A  200A  120A  118A  	fcall	stringdir
  4685  01D4  00C8               	movwf	??_fround+6
  4686  01D5  0848               	movf	??_fround+6,w
  4687  01D6  00A7               	movwf	___flmul@b+3
  4688  01D7  0847               	movf	??_fround+5,w
  4689  01D8  00A6               	movwf	___flmul@b+2
  4690  01D9  0846               	movf	??_fround+4,w
  4691  01DA  00A5               	movwf	___flmul@b+1
  4692  01DB  0845               	movf	??_fround+3,w
  4693  01DC  00A4               	movwf	___flmul@b
  4694  01DD  0850               	movf	_fround$837+3,w
  4695  01DE  00AB               	movwf	___flmul@a+3
  4696  01DF  084F               	movf	_fround$837+2,w
  4697  01E0  00AA               	movwf	___flmul@a+2
  4698  01E1  084E               	movf	_fround$837+1,w
  4699  01E2  00A9               	movwf	___flmul@a+1
  4700  01E3  084D               	movf	_fround$837,w
  4701  01E4  00A8               	movwf	___flmul@a
  4702  01E5  120A  158A  249F  120A  118A  	fcall	___flmul
  4703  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4704  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4705  01EC  0827               	movf	?___flmul+3,w
  4706  01ED  00C1               	movwf	?_fround+3
  4707  01EE  0826               	movf	?___flmul+2,w
  4708  01EF  00C0               	movwf	?_fround+2
  4709  01F0  0825               	movf	?___flmul+1,w
  4710  01F1  00BF               	movwf	?_fround+1
  4711  01F2  0824               	movf	?___flmul,w
  4712  01F3  00BE               	movwf	?_fround
  4713  01F4  2A38               	goto	l212
  4714  01F5                     l2683:	
  4715                           
  4716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4717  01F5  303F               	movlw	63
  4718  01F6  00A7               	movwf	___flmul@b+3
  4719  01F7  3000               	movlw	0
  4720  01F8  00A6               	movwf	___flmul@b+2
  4721  01F9  3000               	movlw	0
  4722  01FA  00A5               	movwf	___flmul@b+1
  4723  01FB  3000               	movlw	0
  4724  01FC  00A4               	movwf	___flmul@b
  4725  01FD  0851               	movf	fround@prec,w
  4726  01FE  00C2               	movwf	??_fround
  4727  01FF  3001               	movlw	1
  4728  0200                     u4255:	
  4729  0200  1003               	clrc
  4730  0201  0DC2               	rlf	??_fround,f
  4731  0202  3EFF               	addlw	-1
  4732  0203  1D03               	skipz
  4733  0204  2A00               	goto	u4255
  4734  0205  1003               	clrc
  4735  0206  0D42               	rlf	??_fround,w
  4736  0207  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4737  0208  0084               	movwf	4
  4738  0209  160A  118A  200A  120A  118A  	fcall	stringdir
  4739  020E  00C3               	movwf	??_fround+1
  4740  020F  160A  118A  200A  120A  118A  	fcall	stringdir
  4741  0214  00C4               	movwf	??_fround+2
  4742  0215  160A  118A  200A  120A  118A  	fcall	stringdir
  4743  021A  00C5               	movwf	??_fround+3
  4744  021B  160A  118A  200A  120A  118A  	fcall	stringdir
  4745  0220  00C6               	movwf	??_fround+4
  4746  0221  0846               	movf	??_fround+4,w
  4747  0222  00AB               	movwf	___flmul@a+3
  4748  0223  0845               	movf	??_fround+3,w
  4749  0224  00AA               	movwf	___flmul@a+2
  4750  0225  0844               	movf	??_fround+2,w
  4751  0226  00A9               	movwf	___flmul@a+1
  4752  0227  0843               	movf	??_fround+1,w
  4753  0228  00A8               	movwf	___flmul@a
  4754  0229  120A  158A  249F  120A  118A  	fcall	___flmul
  4755  022E  1283               	bcf	3,5	;RP0=0, select bank0
  4756  022F  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0230  0827               	movf	?___flmul+3,w
  4758  0231  00C1               	movwf	?_fround+3
  4759  0232  0826               	movf	?___flmul+2,w
  4760  0233  00C0               	movwf	?_fround+2
  4761  0234  0825               	movf	?___flmul+1,w
  4762  0235  00BF               	movwf	?_fround+1
  4763  0236  0824               	movf	?___flmul,w
  4764  0237  00BE               	movwf	?_fround
  4765  0238                     l212:	
  4766  0238  0008               	return
  4767  0239                     __end_of_fround:	
  4768                           
  4769                           	psect	text8
  4770  1CC4                     __ptext8:	
  4771 ;; *************** function ___lwmod *****************
  4772 ;; Defined at:
  4773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  divisor         2    0[COMMON] unsigned int 
  4776 ;;  dividend        2    2[COMMON] unsigned int 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  counter         1    5[COMMON] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  2    0[COMMON] unsigned int 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4788 ;;      Params:         4       0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0
  4790 ;;      Temps:          1       0       0       0       0
  4791 ;;      Totals:         6       0       0       0       0
  4792 ;;Total ram usage:        6 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_fround
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function ___lwmod
  4803  1CC4                     ___lwmod:	
  4804  1CC4                     l2289:	
  4805                           ;incstack = 0
  4806                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4807                           
  4808  1CC4  0870               	movf	___lwmod@divisor,w
  4809  1CC5  0471               	iorwf	___lwmod@divisor+1,w
  4810  1CC6  1903               	btfsc	3,2
  4811  1CC7  2CC9               	goto	u3281
  4812  1CC8  2CCA               	goto	u3280
  4813  1CC9                     u3281:	
  4814  1CC9  2CF9               	goto	l2307
  4815  1CCA                     u3280:	
  4816  1CCA                     l2291:	
  4817  1CCA  01F5               	clrf	___lwmod@counter
  4818  1CCB  0AF5               	incf	___lwmod@counter,f
  4819  1CCC  2CD8               	goto	l2297
  4820  1CCD                     l2293:	
  4821  1CCD  3001               	movlw	1
  4822  1CCE                     u3295:	
  4823  1CCE  1003               	clrc
  4824  1CCF  0DF0               	rlf	___lwmod@divisor,f
  4825  1CD0  0DF1               	rlf	___lwmod@divisor+1,f
  4826  1CD1  3EFF               	addlw	-1
  4827  1CD2  1D03               	skipz
  4828  1CD3  2CCE               	goto	u3295
  4829  1CD4                     l2295:	
  4830  1CD4  3001               	movlw	1
  4831  1CD5  00F4               	movwf	??___lwmod
  4832  1CD6  0874               	movf	??___lwmod,w
  4833  1CD7  07F5               	addwf	___lwmod@counter,f
  4834  1CD8                     l2297:	
  4835  1CD8  1FF1               	btfss	___lwmod@divisor+1,7
  4836  1CD9  2CDB               	goto	u3301
  4837  1CDA  2CDC               	goto	u3300
  4838  1CDB                     u3301:	
  4839  1CDB  2CCD               	goto	l2293
  4840  1CDC                     u3300:	
  4841  1CDC                     l2299:	
  4842  1CDC  0871               	movf	___lwmod@divisor+1,w
  4843  1CDD  0273               	subwf	___lwmod@dividend+1,w
  4844  1CDE  1D03               	skipz
  4845  1CDF  2CE2               	goto	u3315
  4846  1CE0  0870               	movf	___lwmod@divisor,w
  4847  1CE1  0272               	subwf	___lwmod@dividend,w
  4848  1CE2                     u3315:	
  4849  1CE2  1C03               	skipc
  4850  1CE3  2CE5               	goto	u3311
  4851  1CE4  2CE6               	goto	u3310
  4852  1CE5                     u3311:	
  4853  1CE5  2CEC               	goto	l2303
  4854  1CE6                     u3310:	
  4855  1CE6                     l2301:	
  4856  1CE6  0870               	movf	___lwmod@divisor,w
  4857  1CE7  02F2               	subwf	___lwmod@dividend,f
  4858  1CE8  0871               	movf	___lwmod@divisor+1,w
  4859  1CE9  1C03               	skipc
  4860  1CEA  03F3               	decf	___lwmod@dividend+1,f
  4861  1CEB  02F3               	subwf	___lwmod@dividend+1,f
  4862  1CEC                     l2303:	
  4863  1CEC  3001               	movlw	1
  4864  1CED                     u3325:	
  4865  1CED  1003               	clrc
  4866  1CEE  0CF1               	rrf	___lwmod@divisor+1,f
  4867  1CEF  0CF0               	rrf	___lwmod@divisor,f
  4868  1CF0  3EFF               	addlw	-1
  4869  1CF1  1D03               	skipz
  4870  1CF2  2CED               	goto	u3325
  4871  1CF3                     l2305:	
  4872  1CF3  3001               	movlw	1
  4873  1CF4  02F5               	subwf	___lwmod@counter,f
  4874  1CF5  1D03               	btfss	3,2
  4875  1CF6  2CF8               	goto	u3331
  4876  1CF7  2CF9               	goto	u3330
  4877  1CF8                     u3331:	
  4878  1CF8  2CDC               	goto	l2299
  4879  1CF9                     u3330:	
  4880  1CF9                     l2307:	
  4881  1CF9  0873               	movf	___lwmod@dividend+1,w
  4882  1CFA  00F1               	movwf	?___lwmod+1
  4883  1CFB  0872               	movf	___lwmod@dividend,w
  4884  1CFC  00F0               	movwf	?___lwmod
  4885  1CFD                     l595:	
  4886  1CFD  0008               	return
  4887  1CFE                     __end_of___lwmod:	
  4888                           
  4889                           	psect	text9
  4890  1D7D                     __ptext9:	
  4891 ;; *************** function ___lwdiv *****************
  4892 ;; Defined at:
  4893 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  divisor         2    6[COMMON] unsigned int 
  4896 ;;  dividend        2    8[COMMON] unsigned int 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  quotient        2   11[COMMON] unsigned int 
  4899 ;;  counter         1   13[COMMON] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  2    6[COMMON] unsigned int 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4909 ;;      Params:         4       0       0       0       0
  4910 ;;      Locals:         3       0       0       0       0
  4911 ;;      Temps:          1       0       0       0       0
  4912 ;;      Totals:         8       0       0       0       0
  4913 ;;Total ram usage:        8 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_fround
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function ___lwdiv
  4924  1D7D                     ___lwdiv:	
  4925  1D7D                     l2263:	
  4926                           ;incstack = 0
  4927                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4928                           
  4929  1D7D  01FB               	clrf	___lwdiv@quotient
  4930  1D7E  01FC               	clrf	___lwdiv@quotient+1
  4931  1D7F                     l2265:	
  4932  1D7F  0876               	movf	___lwdiv@divisor,w
  4933  1D80  0477               	iorwf	___lwdiv@divisor+1,w
  4934  1D81  1903               	btfsc	3,2
  4935  1D82  2D84               	goto	u3211
  4936  1D83  2D85               	goto	u3210
  4937  1D84                     u3211:	
  4938  1D84  2DBC               	goto	l2285
  4939  1D85                     u3210:	
  4940  1D85                     l2267:	
  4941  1D85  01FD               	clrf	___lwdiv@counter
  4942  1D86  0AFD               	incf	___lwdiv@counter,f
  4943  1D87  2D93               	goto	l2273
  4944  1D88                     l2269:	
  4945  1D88  3001               	movlw	1
  4946  1D89                     u3225:	
  4947  1D89  1003               	clrc
  4948  1D8A  0DF6               	rlf	___lwdiv@divisor,f
  4949  1D8B  0DF7               	rlf	___lwdiv@divisor+1,f
  4950  1D8C  3EFF               	addlw	-1
  4951  1D8D  1D03               	skipz
  4952  1D8E  2D89               	goto	u3225
  4953  1D8F                     l2271:	
  4954  1D8F  3001               	movlw	1
  4955  1D90  00FA               	movwf	??___lwdiv
  4956  1D91  087A               	movf	??___lwdiv,w
  4957  1D92  07FD               	addwf	___lwdiv@counter,f
  4958  1D93                     l2273:	
  4959  1D93  1FF7               	btfss	___lwdiv@divisor+1,7
  4960  1D94  2D96               	goto	u3231
  4961  1D95  2D97               	goto	u3230
  4962  1D96                     u3231:	
  4963  1D96  2D88               	goto	l2269
  4964  1D97                     u3230:	
  4965  1D97                     l2275:	
  4966  1D97  3001               	movlw	1
  4967  1D98                     u3245:	
  4968  1D98  1003               	clrc
  4969  1D99  0DFB               	rlf	___lwdiv@quotient,f
  4970  1D9A  0DFC               	rlf	___lwdiv@quotient+1,f
  4971  1D9B  3EFF               	addlw	-1
  4972  1D9C  1D03               	skipz
  4973  1D9D  2D98               	goto	u3245
  4974  1D9E  0877               	movf	___lwdiv@divisor+1,w
  4975  1D9F  0279               	subwf	___lwdiv@dividend+1,w
  4976  1DA0  1D03               	skipz
  4977  1DA1  2DA4               	goto	u3255
  4978  1DA2  0876               	movf	___lwdiv@divisor,w
  4979  1DA3  0278               	subwf	___lwdiv@dividend,w
  4980  1DA4                     u3255:	
  4981  1DA4  1C03               	skipc
  4982  1DA5  2DA7               	goto	u3251
  4983  1DA6  2DA8               	goto	u3250
  4984  1DA7                     u3251:	
  4985  1DA7  2DAF               	goto	l2281
  4986  1DA8                     u3250:	
  4987  1DA8                     l2277:	
  4988  1DA8  0876               	movf	___lwdiv@divisor,w
  4989  1DA9  02F8               	subwf	___lwdiv@dividend,f
  4990  1DAA  0877               	movf	___lwdiv@divisor+1,w
  4991  1DAB  1C03               	skipc
  4992  1DAC  03F9               	decf	___lwdiv@dividend+1,f
  4993  1DAD  02F9               	subwf	___lwdiv@dividend+1,f
  4994  1DAE                     l2279:	
  4995  1DAE  147B               	bsf	___lwdiv@quotient,0
  4996  1DAF                     l2281:	
  4997  1DAF  3001               	movlw	1
  4998  1DB0                     u3265:	
  4999  1DB0  1003               	clrc
  5000  1DB1  0CF7               	rrf	___lwdiv@divisor+1,f
  5001  1DB2  0CF6               	rrf	___lwdiv@divisor,f
  5002  1DB3  3EFF               	addlw	-1
  5003  1DB4  1D03               	skipz
  5004  1DB5  2DB0               	goto	u3265
  5005  1DB6                     l2283:	
  5006  1DB6  3001               	movlw	1
  5007  1DB7  02FD               	subwf	___lwdiv@counter,f
  5008  1DB8  1D03               	btfss	3,2
  5009  1DB9  2DBB               	goto	u3271
  5010  1DBA  2DBC               	goto	u3270
  5011  1DBB                     u3271:	
  5012  1DBB  2D97               	goto	l2275
  5013  1DBC                     u3270:	
  5014  1DBC                     l2285:	
  5015  1DBC  087C               	movf	___lwdiv@quotient+1,w
  5016  1DBD  00F7               	movwf	?___lwdiv+1
  5017  1DBE  087B               	movf	___lwdiv@quotient,w
  5018  1DBF  00F6               	movwf	?___lwdiv
  5019  1DC0                     l585:	
  5020  1DC0  0008               	return
  5021  1DC1                     __end_of___lwdiv:	
  5022                           
  5023                           	psect	text10
  5024  0C9F                     __ptext10:	
  5025 ;; *************** function ___flmul *****************
  5026 ;; Defined at:
  5027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  b               4    4[BANK0 ] unsigned int 
  5030 ;;  a               4    8[BANK0 ] unsigned int 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  prod            4   24[BANK0 ] struct .
  5033 ;;  grs             4   18[BANK0 ] unsigned long 
  5034 ;;  temp            2   28[BANK0 ] struct .
  5035 ;;  bexp            1   23[BANK0 ] unsigned char 
  5036 ;;  aexp            1   22[BANK0 ] unsigned char 
  5037 ;;  sign            1   17[BANK0 ] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  4    4[BANK0 ] unsigned char 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5047 ;;      Params:         0       8       0       0       0
  5048 ;;      Locals:         0      13       0       0       0
  5049 ;;      Temps:          0       5       0       0       0
  5050 ;;      Totals:         0      26       0       0       0
  5051 ;;Total ram usage:       26 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    1
  5054 ;; This function calls:
  5055 ;;		__Umul8_16
  5056 ;; This function is called by:
  5057 ;;		_ADC_Read
  5058 ;;		_fround
  5059 ;;		_scale
  5060 ;;		_sprintf
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function ___flmul
  5066  0C9F                     ___flmul:	
  5067  0C9F                     l2505:	
  5068                           ;incstack = 0
  5069                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5070                           
  5071  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5072  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5073  0CA1  0827               	movf	___flmul@b+3,w
  5074  0CA2  3980               	andlw	128
  5075  0CA3  00AC               	movwf	??___flmul
  5076  0CA4  082C               	movf	??___flmul,w
  5077  0CA5  00B1               	movwf	___flmul@sign
  5078  0CA6                     l2507:	
  5079  0CA6  0827               	movf	___flmul@b+3,w
  5080  0CA7  00AC               	movwf	??___flmul
  5081  0CA8  072C               	addwf	??___flmul,w
  5082  0CA9  00AD               	movwf	??___flmul+1
  5083  0CAA  082D               	movf	??___flmul+1,w
  5084  0CAB  00B7               	movwf	___flmul@bexp
  5085  0CAC                     l2509:	
  5086  0CAC  1FA6               	btfss	___flmul@b+2,7
  5087  0CAD  2CAF               	goto	u3801
  5088  0CAE  2CB0               	goto	u3800
  5089  0CAF                     u3801:	
  5090  0CAF  2CB1               	goto	l2513
  5091  0CB0                     u3800:	
  5092  0CB0                     l2511:	
  5093  0CB0  1437               	bsf	___flmul@bexp,0
  5094  0CB1                     l2513:	
  5095  0CB1  0837               	movf	___flmul@bexp,w
  5096  0CB2  1903               	btfsc	3,2
  5097  0CB3  2CB5               	goto	u3811
  5098  0CB4  2CB6               	goto	u3810
  5099  0CB5                     u3811:	
  5100  0CB5  2CC5               	goto	l2521
  5101  0CB6                     u3810:	
  5102  0CB6                     l2515:	
  5103  0CB6  0A37               	incf	___flmul@bexp,w
  5104  0CB7  1D03               	btfss	3,2
  5105  0CB8  2CBA               	goto	u3821
  5106  0CB9  2CBB               	goto	u3820
  5107  0CBA                     u3821:	
  5108  0CBA  2CC3               	goto	l2519
  5109  0CBB                     u3820:	
  5110  0CBB                     l2517:	
  5111  0CBB  3000               	movlw	0
  5112  0CBC  00A7               	movwf	___flmul@b+3
  5113  0CBD  3000               	movlw	0
  5114  0CBE  00A6               	movwf	___flmul@b+2
  5115  0CBF  3000               	movlw	0
  5116  0CC0  00A5               	movwf	___flmul@b+1
  5117  0CC1  3000               	movlw	0
  5118  0CC2  00A4               	movwf	___flmul@b
  5119  0CC3                     l2519:	
  5120  0CC3  17A6               	bsf	___flmul@b+2,7
  5121  0CC4  2CCD               	goto	l2523
  5122  0CC5                     l2521:	
  5123  0CC5  3000               	movlw	0
  5124  0CC6  00A7               	movwf	___flmul@b+3
  5125  0CC7  3000               	movlw	0
  5126  0CC8  00A6               	movwf	___flmul@b+2
  5127  0CC9  3000               	movlw	0
  5128  0CCA  00A5               	movwf	___flmul@b+1
  5129  0CCB  3000               	movlw	0
  5130  0CCC  00A4               	movwf	___flmul@b
  5131  0CCD                     l2523:	
  5132  0CCD  082B               	movf	___flmul@a+3,w
  5133  0CCE  3980               	andlw	128
  5134  0CCF  00AC               	movwf	??___flmul
  5135  0CD0  082C               	movf	??___flmul,w
  5136  0CD1  06B1               	xorwf	___flmul@sign,f
  5137  0CD2                     l2525:	
  5138  0CD2  082B               	movf	___flmul@a+3,w
  5139  0CD3  00AC               	movwf	??___flmul
  5140  0CD4  072C               	addwf	??___flmul,w
  5141  0CD5  00AD               	movwf	??___flmul+1
  5142  0CD6  082D               	movf	??___flmul+1,w
  5143  0CD7  00B6               	movwf	___flmul@aexp
  5144  0CD8                     l2527:	
  5145  0CD8  1FAA               	btfss	___flmul@a+2,7
  5146  0CD9  2CDB               	goto	u3831
  5147  0CDA  2CDC               	goto	u3830
  5148  0CDB                     u3831:	
  5149  0CDB  2CDD               	goto	l2531
  5150  0CDC                     u3830:	
  5151  0CDC                     l2529:	
  5152  0CDC  1436               	bsf	___flmul@aexp,0
  5153  0CDD                     l2531:	
  5154  0CDD  0836               	movf	___flmul@aexp,w
  5155  0CDE  1903               	btfsc	3,2
  5156  0CDF  2CE1               	goto	u3841
  5157  0CE0  2CE2               	goto	u3840
  5158  0CE1                     u3841:	
  5159  0CE1  2CF1               	goto	l2539
  5160  0CE2                     u3840:	
  5161  0CE2                     l2533:	
  5162  0CE2  0A36               	incf	___flmul@aexp,w
  5163  0CE3  1D03               	btfss	3,2
  5164  0CE4  2CE6               	goto	u3851
  5165  0CE5  2CE7               	goto	u3850
  5166  0CE6                     u3851:	
  5167  0CE6  2CEF               	goto	l2537
  5168  0CE7                     u3850:	
  5169  0CE7                     l2535:	
  5170  0CE7  3000               	movlw	0
  5171  0CE8  00AB               	movwf	___flmul@a+3
  5172  0CE9  3000               	movlw	0
  5173  0CEA  00AA               	movwf	___flmul@a+2
  5174  0CEB  3000               	movlw	0
  5175  0CEC  00A9               	movwf	___flmul@a+1
  5176  0CED  3000               	movlw	0
  5177  0CEE  00A8               	movwf	___flmul@a
  5178  0CEF                     l2537:	
  5179  0CEF  17AA               	bsf	___flmul@a+2,7
  5180  0CF0  2CF9               	goto	l2541
  5181  0CF1                     l2539:	
  5182  0CF1  3000               	movlw	0
  5183  0CF2  00AB               	movwf	___flmul@a+3
  5184  0CF3  3000               	movlw	0
  5185  0CF4  00AA               	movwf	___flmul@a+2
  5186  0CF5  3000               	movlw	0
  5187  0CF6  00A9               	movwf	___flmul@a+1
  5188  0CF7  3000               	movlw	0
  5189  0CF8  00A8               	movwf	___flmul@a
  5190  0CF9                     l2541:	
  5191  0CF9  0836               	movf	___flmul@aexp,w
  5192  0CFA  1903               	btfsc	3,2
  5193  0CFB  2CFD               	goto	u3861
  5194  0CFC  2CFE               	goto	u3860
  5195  0CFD                     u3861:	
  5196  0CFD  2D03               	goto	l2545
  5197  0CFE                     u3860:	
  5198  0CFE                     l2543:	
  5199  0CFE  0837               	movf	___flmul@bexp,w
  5200  0CFF  1D03               	btfss	3,2
  5201  0D00  2D02               	goto	u3871
  5202  0D01  2D03               	goto	u3870
  5203  0D02                     u3871:	
  5204  0D02  2D0C               	goto	l2549
  5205  0D03                     u3870:	
  5206  0D03                     l2545:	
  5207  0D03  3000               	movlw	0
  5208  0D04  00A7               	movwf	?___flmul+3
  5209  0D05  3000               	movlw	0
  5210  0D06  00A6               	movwf	?___flmul+2
  5211  0D07  3000               	movlw	0
  5212  0D08  00A5               	movwf	?___flmul+1
  5213  0D09  3000               	movlw	0
  5214  0D0A  00A4               	movwf	?___flmul
  5215  0D0B  2FFF               	goto	l702
  5216  0D0C                     l2549:	
  5217  0D0C  0824               	movf	___flmul@b,w
  5218  0D0D  00AC               	movwf	??___flmul
  5219  0D0E  082C               	movf	??___flmul,w
  5220  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5221  0D10  082A               	movf	___flmul@a+2,w
  5222  0D11  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5223  0D16  0871               	movf	?__Umul8_16+1,w
  5224  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5225  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5226  0D19  00BD               	movwf	___flmul@temp+1
  5227  0D1A  0870               	movf	?__Umul8_16,w
  5228  0D1B  00BC               	movwf	___flmul@temp
  5229  0D1C                     l2551:	
  5230  0D1C  083C               	movf	___flmul@temp,w
  5231  0D1D  00AC               	movwf	??___flmul
  5232  0D1E  01AD               	clrf	??___flmul+1
  5233  0D1F  01AE               	clrf	??___flmul+2
  5234  0D20  01AF               	clrf	??___flmul+3
  5235  0D21  082F               	movf	??___flmul+3,w
  5236  0D22  00B5               	movwf	___flmul@grs+3
  5237  0D23  082E               	movf	??___flmul+2,w
  5238  0D24  00B4               	movwf	___flmul@grs+2
  5239  0D25  082D               	movf	??___flmul+1,w
  5240  0D26  00B3               	movwf	___flmul@grs+1
  5241  0D27  082C               	movf	??___flmul,w
  5242  0D28  00B2               	movwf	___flmul@grs
  5243  0D29                     l2553:	
  5244  0D29  083D               	movf	___flmul@temp+1,w
  5245  0D2A  00AC               	movwf	??___flmul
  5246  0D2B  01AD               	clrf	??___flmul+1
  5247  0D2C  01AE               	clrf	??___flmul+2
  5248  0D2D  01AF               	clrf	??___flmul+3
  5249  0D2E  082F               	movf	??___flmul+3,w
  5250  0D2F  00BB               	movwf	___flmul@prod+3
  5251  0D30  082E               	movf	??___flmul+2,w
  5252  0D31  00BA               	movwf	___flmul@prod+2
  5253  0D32  082D               	movf	??___flmul+1,w
  5254  0D33  00B9               	movwf	___flmul@prod+1
  5255  0D34  082C               	movf	??___flmul,w
  5256  0D35  00B8               	movwf	___flmul@prod
  5257  0D36  0825               	movf	___flmul@b+1,w
  5258  0D37  00AC               	movwf	??___flmul
  5259  0D38  082C               	movf	??___flmul,w
  5260  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5261  0D3A  0829               	movf	___flmul@a+1,w
  5262  0D3B  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5263  0D40  0871               	movf	?__Umul8_16+1,w
  5264  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0D43  00BD               	movwf	___flmul@temp+1
  5267  0D44  0870               	movf	?__Umul8_16,w
  5268  0D45  00BC               	movwf	___flmul@temp
  5269  0D46                     l2555:	
  5270  0D46  083C               	movf	___flmul@temp,w
  5271  0D47  00AC               	movwf	??___flmul
  5272  0D48  01AD               	clrf	??___flmul+1
  5273  0D49  01AE               	clrf	??___flmul+2
  5274  0D4A  01AF               	clrf	??___flmul+3
  5275  0D4B  082C               	movf	??___flmul,w
  5276  0D4C  07B2               	addwf	___flmul@grs,f
  5277  0D4D  082D               	movf	??___flmul+1,w
  5278  0D4E  1103               	clrz
  5279  0D4F  1803               	skipnc
  5280  0D50  3E01               	addlw	1
  5281  0D51  1903               	skipnz
  5282  0D52  2D54               	goto	u3881
  5283  0D53  07B3               	addwf	___flmul@grs+1,f
  5284  0D54                     u3881:	
  5285  0D54  082E               	movf	??___flmul+2,w
  5286  0D55  1103               	clrz
  5287  0D56  1803               	skipnc
  5288  0D57  3E01               	addlw	1
  5289  0D58  1903               	skipnz
  5290  0D59  2D5B               	goto	u3882
  5291  0D5A  07B4               	addwf	___flmul@grs+2,f
  5292  0D5B                     u3882:	
  5293  0D5B  082F               	movf	??___flmul+3,w
  5294  0D5C  1103               	clrz
  5295  0D5D  1803               	skipnc
  5296  0D5E  3E01               	addlw	1
  5297  0D5F  1903               	skipnz
  5298  0D60  2D62               	goto	u3883
  5299  0D61  07B5               	addwf	___flmul@grs+3,f
  5300  0D62                     u3883:	
  5301  0D62                     l2557:	
  5302  0D62  083D               	movf	___flmul@temp+1,w
  5303  0D63  00AC               	movwf	??___flmul
  5304  0D64  01AD               	clrf	??___flmul+1
  5305  0D65  01AE               	clrf	??___flmul+2
  5306  0D66  01AF               	clrf	??___flmul+3
  5307  0D67  082C               	movf	??___flmul,w
  5308  0D68  07B8               	addwf	___flmul@prod,f
  5309  0D69  082D               	movf	??___flmul+1,w
  5310  0D6A  1103               	clrz
  5311  0D6B  1803               	skipnc
  5312  0D6C  3E01               	addlw	1
  5313  0D6D  1903               	skipnz
  5314  0D6E  2D70               	goto	u3891
  5315  0D6F  07B9               	addwf	___flmul@prod+1,f
  5316  0D70                     u3891:	
  5317  0D70  082E               	movf	??___flmul+2,w
  5318  0D71  1103               	clrz
  5319  0D72  1803               	skipnc
  5320  0D73  3E01               	addlw	1
  5321  0D74  1903               	skipnz
  5322  0D75  2D77               	goto	u3892
  5323  0D76  07BA               	addwf	___flmul@prod+2,f
  5324  0D77                     u3892:	
  5325  0D77  082F               	movf	??___flmul+3,w
  5326  0D78  1103               	clrz
  5327  0D79  1803               	skipnc
  5328  0D7A  3E01               	addlw	1
  5329  0D7B  1903               	skipnz
  5330  0D7C  2D7E               	goto	u3893
  5331  0D7D  07BB               	addwf	___flmul@prod+3,f
  5332  0D7E                     u3893:	
  5333  0D7E  0826               	movf	___flmul@b+2,w
  5334  0D7F  00AC               	movwf	??___flmul
  5335  0D80  082C               	movf	??___flmul,w
  5336  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5337  0D82  0828               	movf	___flmul@a,w
  5338  0D83  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5339  0D88  0871               	movf	?__Umul8_16+1,w
  5340  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5341  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5342  0D8B  00BD               	movwf	___flmul@temp+1
  5343  0D8C  0870               	movf	?__Umul8_16,w
  5344  0D8D  00BC               	movwf	___flmul@temp
  5345  0D8E                     l2559:	
  5346  0D8E  083C               	movf	___flmul@temp,w
  5347  0D8F  00AC               	movwf	??___flmul
  5348  0D90  01AD               	clrf	??___flmul+1
  5349  0D91  01AE               	clrf	??___flmul+2
  5350  0D92  01AF               	clrf	??___flmul+3
  5351  0D93  082C               	movf	??___flmul,w
  5352  0D94  07B2               	addwf	___flmul@grs,f
  5353  0D95  082D               	movf	??___flmul+1,w
  5354  0D96  1103               	clrz
  5355  0D97  1803               	skipnc
  5356  0D98  3E01               	addlw	1
  5357  0D99  1903               	skipnz
  5358  0D9A  2D9C               	goto	u3901
  5359  0D9B  07B3               	addwf	___flmul@grs+1,f
  5360  0D9C                     u3901:	
  5361  0D9C  082E               	movf	??___flmul+2,w
  5362  0D9D  1103               	clrz
  5363  0D9E  1803               	skipnc
  5364  0D9F  3E01               	addlw	1
  5365  0DA0  1903               	skipnz
  5366  0DA1  2DA3               	goto	u3902
  5367  0DA2  07B4               	addwf	___flmul@grs+2,f
  5368  0DA3                     u3902:	
  5369  0DA3  082F               	movf	??___flmul+3,w
  5370  0DA4  1103               	clrz
  5371  0DA5  1803               	skipnc
  5372  0DA6  3E01               	addlw	1
  5373  0DA7  1903               	skipnz
  5374  0DA8  2DAA               	goto	u3903
  5375  0DA9  07B5               	addwf	___flmul@grs+3,f
  5376  0DAA                     u3903:	
  5377  0DAA                     l2561:	
  5378  0DAA  083D               	movf	___flmul@temp+1,w
  5379  0DAB  00AC               	movwf	??___flmul
  5380  0DAC  01AD               	clrf	??___flmul+1
  5381  0DAD  01AE               	clrf	??___flmul+2
  5382  0DAE  01AF               	clrf	??___flmul+3
  5383  0DAF  082C               	movf	??___flmul,w
  5384  0DB0  07B8               	addwf	___flmul@prod,f
  5385  0DB1  082D               	movf	??___flmul+1,w
  5386  0DB2  1103               	clrz
  5387  0DB3  1803               	skipnc
  5388  0DB4  3E01               	addlw	1
  5389  0DB5  1903               	skipnz
  5390  0DB6  2DB8               	goto	u3911
  5391  0DB7  07B9               	addwf	___flmul@prod+1,f
  5392  0DB8                     u3911:	
  5393  0DB8  082E               	movf	??___flmul+2,w
  5394  0DB9  1103               	clrz
  5395  0DBA  1803               	skipnc
  5396  0DBB  3E01               	addlw	1
  5397  0DBC  1903               	skipnz
  5398  0DBD  2DBF               	goto	u3912
  5399  0DBE  07BA               	addwf	___flmul@prod+2,f
  5400  0DBF                     u3912:	
  5401  0DBF  082F               	movf	??___flmul+3,w
  5402  0DC0  1103               	clrz
  5403  0DC1  1803               	skipnc
  5404  0DC2  3E01               	addlw	1
  5405  0DC3  1903               	skipnz
  5406  0DC4  2DC6               	goto	u3913
  5407  0DC5  07BB               	addwf	___flmul@prod+3,f
  5408  0DC6                     u3913:	
  5409  0DC6                     l2563:	
  5410  0DC6  3008               	movlw	8
  5411  0DC7  00AC               	movwf	??___flmul
  5412  0DC8                     u3925:	
  5413  0DC8  1003               	clrc
  5414  0DC9  0DB2               	rlf	___flmul@grs,f
  5415  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5416  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5417  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5418  0DCD  0BAC               	decfsz	??___flmul,f
  5419  0DCE  2DC8               	goto	u3925
  5420  0DCF                     l2565:	
  5421  0DCF  0825               	movf	___flmul@b+1,w
  5422  0DD0  00AC               	movwf	??___flmul
  5423  0DD1  082C               	movf	??___flmul,w
  5424  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5425  0DD3  0828               	movf	___flmul@a,w
  5426  0DD4  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5427  0DD9  0871               	movf	?__Umul8_16+1,w
  5428  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5430  0DDC  00BD               	movwf	___flmul@temp+1
  5431  0DDD  0870               	movf	?__Umul8_16,w
  5432  0DDE  00BC               	movwf	___flmul@temp
  5433  0DDF                     l2567:	
  5434  0DDF  083C               	movf	___flmul@temp,w
  5435  0DE0  00AC               	movwf	??___flmul
  5436  0DE1  083D               	movf	___flmul@temp+1,w
  5437  0DE2  00AD               	movwf	??___flmul+1
  5438  0DE3  01AE               	clrf	??___flmul+2
  5439  0DE4  01AF               	clrf	??___flmul+3
  5440  0DE5  082C               	movf	??___flmul,w
  5441  0DE6  07B2               	addwf	___flmul@grs,f
  5442  0DE7  082D               	movf	??___flmul+1,w
  5443  0DE8  1103               	clrz
  5444  0DE9  1803               	skipnc
  5445  0DEA  3E01               	addlw	1
  5446  0DEB  1903               	skipnz
  5447  0DEC  2DEE               	goto	u3931
  5448  0DED  07B3               	addwf	___flmul@grs+1,f
  5449  0DEE                     u3931:	
  5450  0DEE  082E               	movf	??___flmul+2,w
  5451  0DEF  1103               	clrz
  5452  0DF0  1803               	skipnc
  5453  0DF1  3E01               	addlw	1
  5454  0DF2  1903               	skipnz
  5455  0DF3  2DF5               	goto	u3932
  5456  0DF4  07B4               	addwf	___flmul@grs+2,f
  5457  0DF5                     u3932:	
  5458  0DF5  082F               	movf	??___flmul+3,w
  5459  0DF6  1103               	clrz
  5460  0DF7  1803               	skipnc
  5461  0DF8  3E01               	addlw	1
  5462  0DF9  1903               	skipnz
  5463  0DFA  2DFC               	goto	u3933
  5464  0DFB  07B5               	addwf	___flmul@grs+3,f
  5465  0DFC                     u3933:	
  5466  0DFC                     l2569:	
  5467  0DFC  0824               	movf	___flmul@b,w
  5468  0DFD  00AC               	movwf	??___flmul
  5469  0DFE  082C               	movf	??___flmul,w
  5470  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5471  0E00  0829               	movf	___flmul@a+1,w
  5472  0E01  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5473  0E06  0871               	movf	?__Umul8_16+1,w
  5474  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5475  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5476  0E09  00BD               	movwf	___flmul@temp+1
  5477  0E0A  0870               	movf	?__Umul8_16,w
  5478  0E0B  00BC               	movwf	___flmul@temp
  5479  0E0C                     l2571:	
  5480  0E0C  083C               	movf	___flmul@temp,w
  5481  0E0D  00AC               	movwf	??___flmul
  5482  0E0E  083D               	movf	___flmul@temp+1,w
  5483  0E0F  00AD               	movwf	??___flmul+1
  5484  0E10  01AE               	clrf	??___flmul+2
  5485  0E11  01AF               	clrf	??___flmul+3
  5486  0E12  082C               	movf	??___flmul,w
  5487  0E13  07B2               	addwf	___flmul@grs,f
  5488  0E14  082D               	movf	??___flmul+1,w
  5489  0E15  1103               	clrz
  5490  0E16  1803               	skipnc
  5491  0E17  3E01               	addlw	1
  5492  0E18  1903               	skipnz
  5493  0E19  2E1B               	goto	u3941
  5494  0E1A  07B3               	addwf	___flmul@grs+1,f
  5495  0E1B                     u3941:	
  5496  0E1B  082E               	movf	??___flmul+2,w
  5497  0E1C  1103               	clrz
  5498  0E1D  1803               	skipnc
  5499  0E1E  3E01               	addlw	1
  5500  0E1F  1903               	skipnz
  5501  0E20  2E22               	goto	u3942
  5502  0E21  07B4               	addwf	___flmul@grs+2,f
  5503  0E22                     u3942:	
  5504  0E22  082F               	movf	??___flmul+3,w
  5505  0E23  1103               	clrz
  5506  0E24  1803               	skipnc
  5507  0E25  3E01               	addlw	1
  5508  0E26  1903               	skipnz
  5509  0E27  2E29               	goto	u3943
  5510  0E28  07B5               	addwf	___flmul@grs+3,f
  5511  0E29                     u3943:	
  5512  0E29                     l2573:	
  5513  0E29  3008               	movlw	8
  5514  0E2A  00AC               	movwf	??___flmul
  5515  0E2B                     u3955:	
  5516  0E2B  1003               	clrc
  5517  0E2C  0DB2               	rlf	___flmul@grs,f
  5518  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5519  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5520  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5521  0E30  0BAC               	decfsz	??___flmul,f
  5522  0E31  2E2B               	goto	u3955
  5523  0E32  0824               	movf	___flmul@b,w
  5524  0E33  00AC               	movwf	??___flmul
  5525  0E34  082C               	movf	??___flmul,w
  5526  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5527  0E36  0828               	movf	___flmul@a,w
  5528  0E37  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5529  0E3C  0871               	movf	?__Umul8_16+1,w
  5530  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5531  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5532  0E3F  00BD               	movwf	___flmul@temp+1
  5533  0E40  0870               	movf	?__Umul8_16,w
  5534  0E41  00BC               	movwf	___flmul@temp
  5535  0E42                     l2575:	
  5536  0E42  083C               	movf	___flmul@temp,w
  5537  0E43  00AC               	movwf	??___flmul
  5538  0E44  083D               	movf	___flmul@temp+1,w
  5539  0E45  00AD               	movwf	??___flmul+1
  5540  0E46  01AE               	clrf	??___flmul+2
  5541  0E47  01AF               	clrf	??___flmul+3
  5542  0E48  082C               	movf	??___flmul,w
  5543  0E49  07B2               	addwf	___flmul@grs,f
  5544  0E4A  082D               	movf	??___flmul+1,w
  5545  0E4B  1103               	clrz
  5546  0E4C  1803               	skipnc
  5547  0E4D  3E01               	addlw	1
  5548  0E4E  1903               	skipnz
  5549  0E4F  2E51               	goto	u3961
  5550  0E50  07B3               	addwf	___flmul@grs+1,f
  5551  0E51                     u3961:	
  5552  0E51  082E               	movf	??___flmul+2,w
  5553  0E52  1103               	clrz
  5554  0E53  1803               	skipnc
  5555  0E54  3E01               	addlw	1
  5556  0E55  1903               	skipnz
  5557  0E56  2E58               	goto	u3962
  5558  0E57  07B4               	addwf	___flmul@grs+2,f
  5559  0E58                     u3962:	
  5560  0E58  082F               	movf	??___flmul+3,w
  5561  0E59  1103               	clrz
  5562  0E5A  1803               	skipnc
  5563  0E5B  3E01               	addlw	1
  5564  0E5C  1903               	skipnz
  5565  0E5D  2E5F               	goto	u3963
  5566  0E5E  07B5               	addwf	___flmul@grs+3,f
  5567  0E5F                     u3963:	
  5568  0E5F                     l2577:	
  5569  0E5F  0825               	movf	___flmul@b+1,w
  5570  0E60  00AC               	movwf	??___flmul
  5571  0E61  082C               	movf	??___flmul,w
  5572  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5573  0E63  082A               	movf	___flmul@a+2,w
  5574  0E64  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5575  0E69  0871               	movf	?__Umul8_16+1,w
  5576  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0E6C  00BD               	movwf	___flmul@temp+1
  5579  0E6D  0870               	movf	?__Umul8_16,w
  5580  0E6E  00BC               	movwf	___flmul@temp
  5581  0E6F  083C               	movf	___flmul@temp,w
  5582  0E70  00AC               	movwf	??___flmul
  5583  0E71  083D               	movf	___flmul@temp+1,w
  5584  0E72  00AD               	movwf	??___flmul+1
  5585  0E73  01AE               	clrf	??___flmul+2
  5586  0E74  01AF               	clrf	??___flmul+3
  5587  0E75  082C               	movf	??___flmul,w
  5588  0E76  07B8               	addwf	___flmul@prod,f
  5589  0E77  082D               	movf	??___flmul+1,w
  5590  0E78  1103               	clrz
  5591  0E79  1803               	skipnc
  5592  0E7A  3E01               	addlw	1
  5593  0E7B  1903               	skipnz
  5594  0E7C  2E7E               	goto	u3971
  5595  0E7D  07B9               	addwf	___flmul@prod+1,f
  5596  0E7E                     u3971:	
  5597  0E7E  082E               	movf	??___flmul+2,w
  5598  0E7F  1103               	clrz
  5599  0E80  1803               	skipnc
  5600  0E81  3E01               	addlw	1
  5601  0E82  1903               	skipnz
  5602  0E83  2E85               	goto	u3972
  5603  0E84  07BA               	addwf	___flmul@prod+2,f
  5604  0E85                     u3972:	
  5605  0E85  082F               	movf	??___flmul+3,w
  5606  0E86  1103               	clrz
  5607  0E87  1803               	skipnc
  5608  0E88  3E01               	addlw	1
  5609  0E89  1903               	skipnz
  5610  0E8A  2E8C               	goto	u3973
  5611  0E8B  07BB               	addwf	___flmul@prod+3,f
  5612  0E8C                     u3973:	
  5613  0E8C                     l2579:	
  5614  0E8C  0826               	movf	___flmul@b+2,w
  5615  0E8D  00AC               	movwf	??___flmul
  5616  0E8E  082C               	movf	??___flmul,w
  5617  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5618  0E90  0829               	movf	___flmul@a+1,w
  5619  0E91  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5620  0E96  0871               	movf	?__Umul8_16+1,w
  5621  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5623  0E99  00BD               	movwf	___flmul@temp+1
  5624  0E9A  0870               	movf	?__Umul8_16,w
  5625  0E9B  00BC               	movwf	___flmul@temp
  5626  0E9C                     l2581:	
  5627  0E9C  083C               	movf	___flmul@temp,w
  5628  0E9D  00AC               	movwf	??___flmul
  5629  0E9E  083D               	movf	___flmul@temp+1,w
  5630  0E9F  00AD               	movwf	??___flmul+1
  5631  0EA0  01AE               	clrf	??___flmul+2
  5632  0EA1  01AF               	clrf	??___flmul+3
  5633  0EA2  082C               	movf	??___flmul,w
  5634  0EA3  07B8               	addwf	___flmul@prod,f
  5635  0EA4  082D               	movf	??___flmul+1,w
  5636  0EA5  1103               	clrz
  5637  0EA6  1803               	skipnc
  5638  0EA7  3E01               	addlw	1
  5639  0EA8  1903               	skipnz
  5640  0EA9  2EAB               	goto	u3981
  5641  0EAA  07B9               	addwf	___flmul@prod+1,f
  5642  0EAB                     u3981:	
  5643  0EAB  082E               	movf	??___flmul+2,w
  5644  0EAC  1103               	clrz
  5645  0EAD  1803               	skipnc
  5646  0EAE  3E01               	addlw	1
  5647  0EAF  1903               	skipnz
  5648  0EB0  2EB2               	goto	u3982
  5649  0EB1  07BA               	addwf	___flmul@prod+2,f
  5650  0EB2                     u3982:	
  5651  0EB2  082F               	movf	??___flmul+3,w
  5652  0EB3  1103               	clrz
  5653  0EB4  1803               	skipnc
  5654  0EB5  3E01               	addlw	1
  5655  0EB6  1903               	skipnz
  5656  0EB7  2EB9               	goto	u3983
  5657  0EB8  07BB               	addwf	___flmul@prod+3,f
  5658  0EB9                     u3983:	
  5659  0EB9  0826               	movf	___flmul@b+2,w
  5660  0EBA  00AC               	movwf	??___flmul
  5661  0EBB  082C               	movf	??___flmul,w
  5662  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5663  0EBD  082A               	movf	___flmul@a+2,w
  5664  0EBE  160A  158A  249D  120A  158A  	fcall	__Umul8_16
  5665  0EC3  0871               	movf	?__Umul8_16+1,w
  5666  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0EC6  00BD               	movwf	___flmul@temp+1
  5669  0EC7  0870               	movf	?__Umul8_16,w
  5670  0EC8  00BC               	movwf	___flmul@temp
  5671  0EC9                     l2583:	
  5672  0EC9  083C               	movf	___flmul@temp,w
  5673  0ECA  00AC               	movwf	??___flmul
  5674  0ECB  083D               	movf	___flmul@temp+1,w
  5675  0ECC  00AD               	movwf	??___flmul+1
  5676  0ECD  01AE               	clrf	??___flmul+2
  5677  0ECE  01AF               	clrf	??___flmul+3
  5678  0ECF  3008               	movlw	8
  5679  0ED0                     u3995:	
  5680  0ED0  1003               	clrc
  5681  0ED1  0DAC               	rlf	??___flmul,f
  5682  0ED2  0DAD               	rlf	??___flmul+1,f
  5683  0ED3  0DAE               	rlf	??___flmul+2,f
  5684  0ED4  0DAF               	rlf	??___flmul+3,f
  5685  0ED5                     u3990:	
  5686  0ED5  3EFF               	addlw	-1
  5687  0ED6  1D03               	skipz
  5688  0ED7  2ED0               	goto	u3995
  5689  0ED8  082C               	movf	??___flmul,w
  5690  0ED9  07B8               	addwf	___flmul@prod,f
  5691  0EDA  082D               	movf	??___flmul+1,w
  5692  0EDB  1103               	clrz
  5693  0EDC  1803               	skipnc
  5694  0EDD  3E01               	addlw	1
  5695  0EDE  1903               	skipnz
  5696  0EDF  2EE1               	goto	u4001
  5697  0EE0  07B9               	addwf	___flmul@prod+1,f
  5698  0EE1                     u4001:	
  5699  0EE1  082E               	movf	??___flmul+2,w
  5700  0EE2  1103               	clrz
  5701  0EE3  1803               	skipnc
  5702  0EE4  3E01               	addlw	1
  5703  0EE5  1903               	skipnz
  5704  0EE6  2EE8               	goto	u4002
  5705  0EE7  07BA               	addwf	___flmul@prod+2,f
  5706  0EE8                     u4002:	
  5707  0EE8  082F               	movf	??___flmul+3,w
  5708  0EE9  1103               	clrz
  5709  0EEA  1803               	skipnc
  5710  0EEB  3E01               	addlw	1
  5711  0EEC  1903               	skipnz
  5712  0EED  2EEF               	goto	u4003
  5713  0EEE  07BB               	addwf	___flmul@prod+3,f
  5714  0EEF                     u4003:	
  5715  0EEF                     l2585:	
  5716  0EEF  0832               	movf	___flmul@grs,w
  5717  0EF0  00AC               	movwf	??___flmul
  5718  0EF1  0833               	movf	___flmul@grs+1,w
  5719  0EF2  00AD               	movwf	??___flmul+1
  5720  0EF3  0834               	movf	___flmul@grs+2,w
  5721  0EF4  00AE               	movwf	??___flmul+2
  5722  0EF5  0835               	movf	___flmul@grs+3,w
  5723  0EF6  00AF               	movwf	??___flmul+3
  5724  0EF7  3018               	movlw	24
  5725  0EF8                     u4015:	
  5726  0EF8  1003               	clrc
  5727  0EF9  0CAF               	rrf	??___flmul+3,f
  5728  0EFA  0CAE               	rrf	??___flmul+2,f
  5729  0EFB  0CAD               	rrf	??___flmul+1,f
  5730  0EFC  0CAC               	rrf	??___flmul,f
  5731  0EFD                     u4010:	
  5732  0EFD  3EFF               	addlw	-1
  5733  0EFE  1D03               	skipz
  5734  0EFF  2EF8               	goto	u4015
  5735  0F00  082C               	movf	??___flmul,w
  5736  0F01  07B8               	addwf	___flmul@prod,f
  5737  0F02  082D               	movf	??___flmul+1,w
  5738  0F03  1103               	clrz
  5739  0F04  1803               	skipnc
  5740  0F05  3E01               	addlw	1
  5741  0F06  1903               	skipnz
  5742  0F07  2F09               	goto	u4021
  5743  0F08  07B9               	addwf	___flmul@prod+1,f
  5744  0F09                     u4021:	
  5745  0F09  082E               	movf	??___flmul+2,w
  5746  0F0A  1103               	clrz
  5747  0F0B  1803               	skipnc
  5748  0F0C  3E01               	addlw	1
  5749  0F0D  1903               	skipnz
  5750  0F0E  2F10               	goto	u4022
  5751  0F0F  07BA               	addwf	___flmul@prod+2,f
  5752  0F10                     u4022:	
  5753  0F10  082F               	movf	??___flmul+3,w
  5754  0F11  1103               	clrz
  5755  0F12  1803               	skipnc
  5756  0F13  3E01               	addlw	1
  5757  0F14  1903               	skipnz
  5758  0F15  2F17               	goto	u4023
  5759  0F16  07BB               	addwf	___flmul@prod+3,f
  5760  0F17                     u4023:	
  5761  0F17                     l2587:	
  5762  0F17  3008               	movlw	8
  5763  0F18  00AC               	movwf	??___flmul
  5764  0F19                     u4035:	
  5765  0F19  1003               	clrc
  5766  0F1A  0DB2               	rlf	___flmul@grs,f
  5767  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5768  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5769  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5770  0F1E  0BAC               	decfsz	??___flmul,f
  5771  0F1F  2F19               	goto	u4035
  5772  0F20                     l2589:	
  5773  0F20  0837               	movf	___flmul@bexp,w
  5774  0F21  0736               	addwf	___flmul@aexp,w
  5775  0F22  00AC               	movwf	??___flmul
  5776  0F23  01AD               	clrf	??___flmul+1
  5777  0F24  0DAD               	rlf	??___flmul+1,f
  5778  0F25  082C               	movf	??___flmul,w
  5779  0F26  3E82               	addlw	130
  5780  0F27  00BC               	movwf	___flmul@temp
  5781  0F28  082D               	movf	??___flmul+1,w
  5782  0F29  1803               	skipnc
  5783  0F2A  3E01               	addlw	1
  5784  0F2B  3EFF               	addlw	255
  5785  0F2C  00BD               	movwf	___flmul@temp+1
  5786  0F2D  2F4B               	goto	l2601
  5787  0F2E                     l2591:	
  5788  0F2E  3001               	movlw	1
  5789  0F2F  00AC               	movwf	??___flmul
  5790  0F30                     u4045:	
  5791  0F30  1003               	clrc
  5792  0F31  0DB8               	rlf	___flmul@prod,f
  5793  0F32  0DB9               	rlf	___flmul@prod+1,f
  5794  0F33  0DBA               	rlf	___flmul@prod+2,f
  5795  0F34  0DBB               	rlf	___flmul@prod+3,f
  5796  0F35  0BAC               	decfsz	??___flmul,f
  5797  0F36  2F30               	goto	u4045
  5798  0F37                     l2593:	
  5799  0F37  1FB5               	btfss	___flmul@grs+3,7
  5800  0F38  2F3A               	goto	u4051
  5801  0F39  2F3B               	goto	u4050
  5802  0F3A                     u4051:	
  5803  0F3A  2F3C               	goto	l2597
  5804  0F3B                     u4050:	
  5805  0F3B                     l2595:	
  5806  0F3B  1438               	bsf	___flmul@prod,0
  5807  0F3C                     l2597:	
  5808  0F3C  3001               	movlw	1
  5809  0F3D  00AC               	movwf	??___flmul
  5810  0F3E                     u4065:	
  5811  0F3E  1003               	clrc
  5812  0F3F  0DB2               	rlf	___flmul@grs,f
  5813  0F40  0DB3               	rlf	___flmul@grs+1,f
  5814  0F41  0DB4               	rlf	___flmul@grs+2,f
  5815  0F42  0DB5               	rlf	___flmul@grs+3,f
  5816  0F43  0BAC               	decfsz	??___flmul,f
  5817  0F44  2F3E               	goto	u4065
  5818  0F45                     l2599:	
  5819  0F45  30FF               	movlw	255
  5820  0F46  07BC               	addwf	___flmul@temp,f
  5821  0F47  1803               	skipnc
  5822  0F48  0ABD               	incf	___flmul@temp+1,f
  5823  0F49  30FF               	movlw	255
  5824  0F4A  07BD               	addwf	___flmul@temp+1,f
  5825  0F4B                     l2601:	
  5826  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5827  0F4C  2F4E               	goto	u4071
  5828  0F4D  2F4F               	goto	u4070
  5829  0F4E                     u4071:	
  5830  0F4E  2F2E               	goto	l2591
  5831  0F4F                     u4070:	
  5832  0F4F                     l2603:	
  5833  0F4F  01B6               	clrf	___flmul@aexp
  5834  0F50                     l2605:	
  5835  0F50  1FB5               	btfss	___flmul@grs+3,7
  5836  0F51  2F53               	goto	u4081
  5837  0F52  2F54               	goto	u4080
  5838  0F53                     u4081:	
  5839  0F53  2F70               	goto	l2613
  5840  0F54                     u4080:	
  5841  0F54                     l2607:	
  5842  0F54  30FF               	movlw	255
  5843  0F55  0532               	andwf	___flmul@grs,w
  5844  0F56  00AC               	movwf	??___flmul
  5845  0F57  30FF               	movlw	255
  5846  0F58  0533               	andwf	___flmul@grs+1,w
  5847  0F59  00AD               	movwf	??___flmul+1
  5848  0F5A  30FF               	movlw	255
  5849  0F5B  0534               	andwf	___flmul@grs+2,w
  5850  0F5C  00AE               	movwf	??___flmul+2
  5851  0F5D  307F               	movlw	127
  5852  0F5E  0535               	andwf	___flmul@grs+3,w
  5853  0F5F  00AF               	movwf	??___flmul+3
  5854  0F60  082F               	movf	??___flmul+3,w
  5855  0F61  042E               	iorwf	??___flmul+2,w
  5856  0F62  042D               	iorwf	??___flmul+1,w
  5857  0F63  042C               	iorwf	??___flmul,w
  5858  0F64  1903               	skipnz
  5859  0F65  2F67               	goto	u4091
  5860  0F66  2F68               	goto	u4090
  5861  0F67                     u4091:	
  5862  0F67  2F6B               	goto	l708
  5863  0F68                     u4090:	
  5864  0F68                     l2609:	
  5865  0F68  01B6               	clrf	___flmul@aexp
  5866  0F69  0AB6               	incf	___flmul@aexp,f
  5867  0F6A  2F70               	goto	l2613
  5868  0F6B                     l708:	
  5869  0F6B  1C38               	btfss	___flmul@prod,0
  5870  0F6C  2F6E               	goto	u4101
  5871  0F6D  2F6F               	goto	u4100
  5872  0F6E                     u4101:	
  5873  0F6E  2F70               	goto	l2613
  5874  0F6F                     u4100:	
  5875  0F6F  2F68               	goto	l2609
  5876  0F70                     l2613:	
  5877  0F70  0836               	movf	___flmul@aexp,w
  5878  0F71  1903               	btfsc	3,2
  5879  0F72  2F74               	goto	u4111
  5880  0F73  2F75               	goto	u4110
  5881  0F74                     u4111:	
  5882  0F74  2FA6               	goto	l2623
  5883  0F75                     u4110:	
  5884  0F75                     l2615:	
  5885  0F75  3001               	movlw	1
  5886  0F76  07B8               	addwf	___flmul@prod,f
  5887  0F77  3000               	movlw	0
  5888  0F78  1803               	skipnc
  5889  0F79  3001               	movlw	1
  5890  0F7A  07B9               	addwf	___flmul@prod+1,f
  5891  0F7B  3000               	movlw	0
  5892  0F7C  1803               	skipnc
  5893  0F7D  3001               	movlw	1
  5894  0F7E  07BA               	addwf	___flmul@prod+2,f
  5895  0F7F  3000               	movlw	0
  5896  0F80  1803               	skipnc
  5897  0F81  3001               	movlw	1
  5898  0F82  07BB               	addwf	___flmul@prod+3,f
  5899  0F83                     l2617:	
  5900  0F83  1C3B               	btfss	___flmul@prod+3,0
  5901  0F84  2F86               	goto	u4121
  5902  0F85  2F87               	goto	u4120
  5903  0F86                     u4121:	
  5904  0F86  2FA6               	goto	l2623
  5905  0F87                     u4120:	
  5906  0F87                     l2619:	
  5907  0F87  0838               	movf	___flmul@prod,w
  5908  0F88  00AC               	movwf	??___flmul
  5909  0F89  0839               	movf	___flmul@prod+1,w
  5910  0F8A  00AD               	movwf	??___flmul+1
  5911  0F8B  083A               	movf	___flmul@prod+2,w
  5912  0F8C  00AE               	movwf	??___flmul+2
  5913  0F8D  083B               	movf	___flmul@prod+3,w
  5914  0F8E  00AF               	movwf	??___flmul+3
  5915  0F8F  3001               	movlw	1
  5916  0F90  00B0               	movwf	??___flmul+4
  5917  0F91                     u4135:	
  5918  0F91  0D2F               	rlf	??___flmul+3,w
  5919  0F92  0CAF               	rrf	??___flmul+3,f
  5920  0F93  0CAE               	rrf	??___flmul+2,f
  5921  0F94  0CAD               	rrf	??___flmul+1,f
  5922  0F95  0CAC               	rrf	??___flmul,f
  5923  0F96                     u4130:	
  5924  0F96  0BB0               	decfsz	??___flmul+4,f
  5925  0F97  2F91               	goto	u4135
  5926  0F98  082F               	movf	??___flmul+3,w
  5927  0F99  00BB               	movwf	___flmul@prod+3
  5928  0F9A  082E               	movf	??___flmul+2,w
  5929  0F9B  00BA               	movwf	___flmul@prod+2
  5930  0F9C  082D               	movf	??___flmul+1,w
  5931  0F9D  00B9               	movwf	___flmul@prod+1
  5932  0F9E  082C               	movf	??___flmul,w
  5933  0F9F  00B8               	movwf	___flmul@prod
  5934  0FA0                     l2621:	
  5935  0FA0  3001               	movlw	1
  5936  0FA1  07BC               	addwf	___flmul@temp,f
  5937  0FA2  1803               	skipnc
  5938  0FA3  0ABD               	incf	___flmul@temp+1,f
  5939  0FA4  3000               	movlw	0
  5940  0FA5  07BD               	addwf	___flmul@temp+1,f
  5941  0FA6                     l2623:	
  5942  0FA6  083D               	movf	___flmul@temp+1,w
  5943  0FA7  3A80               	xorlw	128
  5944  0FA8  00FF               	movwf	btemp+1
  5945  0FA9  3080               	movlw	128
  5946  0FAA  027F               	subwf	btemp+1,w
  5947  0FAB  1D03               	skipz
  5948  0FAC  2FAF               	goto	u4145
  5949  0FAD  30FF               	movlw	255
  5950  0FAE  023C               	subwf	___flmul@temp,w
  5951  0FAF                     u4145:	
  5952  0FAF  1C03               	skipc
  5953  0FB0  2FB2               	goto	u4141
  5954  0FB1  2FB3               	goto	u4140
  5955  0FB2                     u4141:	
  5956  0FB2  2FBE               	goto	l2627
  5957  0FB3                     u4140:	
  5958  0FB3                     l2625:	
  5959  0FB3  307F               	movlw	127
  5960  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5961  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5962  0FB6  00BB               	movwf	___flmul@prod+3
  5963  0FB7  3080               	movlw	128
  5964  0FB8  00BA               	movwf	___flmul@prod+2
  5965  0FB9  3000               	movlw	0
  5966  0FBA  00B9               	movwf	___flmul@prod+1
  5967  0FBB  3000               	movlw	0
  5968  0FBC  00B8               	movwf	___flmul@prod
  5969  0FBD  2FF3               	goto	l714
  5970  0FBE                     l2627:	
  5971  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5972  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5973  0FC0  083D               	movf	___flmul@temp+1,w
  5974  0FC1  3A80               	xorlw	128
  5975  0FC2  00FF               	movwf	btemp+1
  5976  0FC3  3080               	movlw	128
  5977  0FC4  027F               	subwf	btemp+1,w
  5978  0FC5  1D03               	skipz
  5979  0FC6  2FC9               	goto	u4155
  5980  0FC7  3001               	movlw	1
  5981  0FC8  023C               	subwf	___flmul@temp,w
  5982  0FC9                     u4155:	
  5983  0FC9  1803               	skipnc
  5984  0FCA  2FCC               	goto	u4151
  5985  0FCB  2FCD               	goto	u4150
  5986  0FCC                     u4151:	
  5987  0FCC  2FD9               	goto	l2633
  5988  0FCD                     u4150:	
  5989  0FCD                     l2629:	
  5990  0FCD  3000               	movlw	0
  5991  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5992  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5993  0FD0  00BB               	movwf	___flmul@prod+3
  5994  0FD1  3000               	movlw	0
  5995  0FD2  00BA               	movwf	___flmul@prod+2
  5996  0FD3  3000               	movlw	0
  5997  0FD4  00B9               	movwf	___flmul@prod+1
  5998  0FD5  3000               	movlw	0
  5999  0FD6  00B8               	movwf	___flmul@prod
  6000  0FD7                     l2631:	
  6001  0FD7  01B1               	clrf	___flmul@sign
  6002  0FD8  2FF3               	goto	l714
  6003  0FD9                     l2633:	
  6004  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6006  0FDB  083C               	movf	___flmul@temp,w
  6007  0FDC  00AC               	movwf	??___flmul
  6008  0FDD  082C               	movf	??___flmul,w
  6009  0FDE  00B7               	movwf	___flmul@bexp
  6010  0FDF  30FF               	movlw	255
  6011  0FE0  05B8               	andwf	___flmul@prod,f
  6012  0FE1  30FF               	movlw	255
  6013  0FE2  05B9               	andwf	___flmul@prod+1,f
  6014  0FE3  307F               	movlw	127
  6015  0FE4  05BA               	andwf	___flmul@prod+2,f
  6016  0FE5  3000               	movlw	0
  6017  0FE6  05BB               	andwf	___flmul@prod+3,f
  6018  0FE7                     l2635:	
  6019  0FE7  1C37               	btfss	___flmul@bexp,0
  6020  0FE8  2FEA               	goto	u4161
  6021  0FE9  2FEB               	goto	u4160
  6022  0FEA                     u4161:	
  6023  0FEA  2FEC               	goto	l2639
  6024  0FEB                     u4160:	
  6025  0FEB                     l2637:	
  6026  0FEB  17BA               	bsf	___flmul@prod+2,7
  6027  0FEC                     l2639:	
  6028  0FEC  0837               	movf	___flmul@bexp,w
  6029  0FED  00AC               	movwf	??___flmul
  6030  0FEE  1003               	clrc
  6031  0FEF  0C2C               	rrf	??___flmul,w
  6032  0FF0  00AD               	movwf	??___flmul+1
  6033  0FF1  082D               	movf	??___flmul+1,w
  6034  0FF2  00BB               	movwf	___flmul@prod+3
  6035  0FF3                     l714:	
  6036  0FF3  0831               	movf	___flmul@sign,w
  6037  0FF4  00AC               	movwf	??___flmul
  6038  0FF5  082C               	movf	??___flmul,w
  6039  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6040  0FF7                     l2641:	
  6041  0FF7  083B               	movf	___flmul@prod+3,w
  6042  0FF8  00A7               	movwf	?___flmul+3
  6043  0FF9  083A               	movf	___flmul@prod+2,w
  6044  0FFA  00A6               	movwf	?___flmul+2
  6045  0FFB  0839               	movf	___flmul@prod+1,w
  6046  0FFC  00A5               	movwf	?___flmul+1
  6047  0FFD  0838               	movf	___flmul@prod,w
  6048  0FFE  00A4               	movwf	?___flmul
  6049  0FFF                     l702:	
  6050  0FFF  0008               	return
  6051  1000                     __end_of___flmul:	
  6052                           
  6053                           	psect	text11
  6054  1C9D                     __ptext11:	
  6055 ;; *************** function __Umul8_16 *****************
  6056 ;; Defined at:
  6057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  multiplier      1    wreg     unsigned char 
  6060 ;;  multiplicand    1    0[COMMON] unsigned char 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  multiplier      1    8[COMMON] unsigned char 
  6063 ;;  word_mpld       2    6[COMMON] unsigned int 
  6064 ;;  product         2    4[COMMON] unsigned int 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  2    0[COMMON] unsigned int 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6074 ;;      Params:         2       0       0       0       0
  6075 ;;      Locals:         5       0       0       0       0
  6076 ;;      Temps:          2       0       0       0       0
  6077 ;;      Totals:         9       0       0       0       0
  6078 ;;Total ram usage:        9 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		___flmul
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           
  6088                           ;psect for function __Umul8_16
  6089  1C9D                     __Umul8_16:	
  6090                           
  6091                           ;incstack = 0
  6092                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6093                           ;__Umul8_16@multiplier stored from wreg
  6094  1C9D  00F8               	movwf	__Umul8_16@multiplier
  6095  1C9E                     l2149:	
  6096  1C9E  01F4               	clrf	__Umul8_16@product
  6097  1C9F  01F5               	clrf	__Umul8_16@product+1
  6098  1CA0                     l2151:	
  6099  1CA0  0870               	movf	__Umul8_16@multiplicand,w
  6100  1CA1  00F2               	movwf	??__Umul8_16
  6101  1CA2  01F3               	clrf	??__Umul8_16+1
  6102  1CA3  0872               	movf	??__Umul8_16,w
  6103  1CA4  00F6               	movwf	__Umul8_16@word_mpld
  6104  1CA5  0873               	movf	??__Umul8_16+1,w
  6105  1CA6  00F7               	movwf	__Umul8_16@word_mpld+1
  6106  1CA7                     l2153:	
  6107  1CA7  1C78               	btfss	__Umul8_16@multiplier,0
  6108  1CA8  2CAA               	goto	u2941
  6109  1CA9  2CAB               	goto	u2940
  6110  1CAA                     u2941:	
  6111  1CAA  2CB1               	goto	l763
  6112  1CAB                     u2940:	
  6113  1CAB                     l2155:	
  6114  1CAB  0876               	movf	__Umul8_16@word_mpld,w
  6115  1CAC  07F4               	addwf	__Umul8_16@product,f
  6116  1CAD  1803               	skipnc
  6117  1CAE  0AF5               	incf	__Umul8_16@product+1,f
  6118  1CAF  0877               	movf	__Umul8_16@word_mpld+1,w
  6119  1CB0  07F5               	addwf	__Umul8_16@product+1,f
  6120  1CB1                     l763:	
  6121  1CB1  3001               	movlw	1
  6122  1CB2                     u2955:	
  6123  1CB2  1003               	clrc
  6124  1CB3  0DF6               	rlf	__Umul8_16@word_mpld,f
  6125  1CB4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6126  1CB5  3EFF               	addlw	-1
  6127  1CB6  1D03               	skipz
  6128  1CB7  2CB2               	goto	u2955
  6129  1CB8  1003               	clrc
  6130  1CB9  0CF8               	rrf	__Umul8_16@multiplier,f
  6131  1CBA                     l2157:	
  6132  1CBA  0878               	movf	__Umul8_16@multiplier,w
  6133  1CBB  1D03               	btfss	3,2
  6134  1CBC  2CBE               	goto	u2961
  6135  1CBD  2CBF               	goto	u2960
  6136  1CBE                     u2961:	
  6137  1CBE  2CA7               	goto	l2153
  6138  1CBF                     u2960:	
  6139  1CBF                     l2159:	
  6140  1CBF  0875               	movf	__Umul8_16@product+1,w
  6141  1CC0  00F1               	movwf	?__Umul8_16+1
  6142  1CC1  0874               	movf	__Umul8_16@product,w
  6143  1CC2  00F0               	movwf	?__Umul8_16
  6144  1CC3                     l765:	
  6145  1CC3  0008               	return
  6146  1CC4                     __end_of__Umul8_16:	
  6147                           
  6148                           	psect	text12
  6149  1220                     __ptext12:	
  6150 ;; *************** function __tdiv_to_l_ *****************
  6151 ;; Defined at:
  6152 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  f1              4    0[COMMON] float 
  6155 ;;  f2              4    4[COMMON] float 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  quot            4    0[BANK0 ] unsigned long 
  6158 ;;  exp1            1    5[BANK0 ] unsigned char 
  6159 ;;  cntr            1    4[BANK0 ] unsigned char 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  4    0[COMMON] unsigned long 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6169 ;;      Params:         8       0       0       0       0
  6170 ;;      Locals:         0       6       0       0       0
  6171 ;;      Temps:          4       0       0       0       0
  6172 ;;      Totals:        12       6       0       0       0
  6173 ;;Total ram usage:       18 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_sprintf
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           
  6183                           ;psect for function __tdiv_to_l_
  6184  1220                     __tdiv_to_l_:	
  6185  1220                     l2727:	
  6186                           ;incstack = 0
  6187                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6188                           
  6189  1220  0870               	movf	__tdiv_to_l_@f1,w
  6190  1221  00F8               	movwf	??__tdiv_to_l_
  6191  1222  0871               	movf	__tdiv_to_l_@f1+1,w
  6192  1223  00F9               	movwf	??__tdiv_to_l_+1
  6193  1224  0872               	movf	__tdiv_to_l_@f1+2,w
  6194  1225  00FA               	movwf	??__tdiv_to_l_+2
  6195  1226  1003               	clrc
  6196  1227  0D79               	rlf	??__tdiv_to_l_+1,w
  6197  1228  0D7A               	rlf	??__tdiv_to_l_+2,w
  6198  1229  00FB               	movwf	??__tdiv_to_l_+3
  6199  122A  087B               	movf	??__tdiv_to_l_+3,w
  6200  122B  1283               	bcf	3,5	;RP0=0, select bank0
  6201  122C  1303               	bcf	3,6	;RP1=0, select bank0
  6202  122D  00A5               	movwf	__tdiv_to_l_@exp1
  6203  122E  0825               	movf	__tdiv_to_l_@exp1,w
  6204  122F  1D03               	btfss	3,2
  6205  1230  2A32               	goto	u4431
  6206  1231  2A33               	goto	u4430
  6207  1232                     u4431:	
  6208  1232  2A3C               	goto	l2733
  6209  1233                     u4430:	
  6210  1233                     l2729:	
  6211  1233  3000               	movlw	0
  6212  1234  00F3               	movwf	?__tdiv_to_l_+3
  6213  1235  3000               	movlw	0
  6214  1236  00F2               	movwf	?__tdiv_to_l_+2
  6215  1237  3000               	movlw	0
  6216  1238  00F1               	movwf	?__tdiv_to_l_+1
  6217  1239  3000               	movlw	0
  6218  123A  00F0               	movwf	?__tdiv_to_l_
  6219  123B  2ADC               	goto	l496
  6220  123C                     l2733:	
  6221  123C  0874               	movf	__tdiv_to_l_@f2,w
  6222  123D  00F8               	movwf	??__tdiv_to_l_
  6223  123E  0875               	movf	__tdiv_to_l_@f2+1,w
  6224  123F  00F9               	movwf	??__tdiv_to_l_+1
  6225  1240  0876               	movf	__tdiv_to_l_@f2+2,w
  6226  1241  00FA               	movwf	??__tdiv_to_l_+2
  6227  1242  1003               	clrc
  6228  1243  0D79               	rlf	??__tdiv_to_l_+1,w
  6229  1244  0D7A               	rlf	??__tdiv_to_l_+2,w
  6230  1245  00FB               	movwf	??__tdiv_to_l_+3
  6231  1246  087B               	movf	??__tdiv_to_l_+3,w
  6232  1247  00A4               	movwf	__tdiv_to_l_@cntr
  6233  1248  0824               	movf	__tdiv_to_l_@cntr,w
  6234  1249  1D03               	btfss	3,2
  6235  124A  2A4C               	goto	u4441
  6236  124B  2A4D               	goto	u4440
  6237  124C                     u4441:	
  6238  124C  2A4E               	goto	l497
  6239  124D                     u4440:	
  6240  124D  2A33               	goto	l2729
  6241  124E                     l497:	
  6242  124E  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6243  124F                     l2739:	
  6244  124F  30FF               	movlw	255
  6245  1250  05F0               	andwf	__tdiv_to_l_@f1,f
  6246  1251  30FF               	movlw	255
  6247  1252  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6248  1253  3000               	movlw	0
  6249  1254  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6250  1255                     l2741:	
  6251  1255  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6252  1256  30FF               	movlw	255
  6253  1257  05F4               	andwf	__tdiv_to_l_@f2,f
  6254  1258  30FF               	movlw	255
  6255  1259  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6256  125A  3000               	movlw	0
  6257  125B  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6258  125C  3000               	movlw	0
  6259  125D  00A3               	movwf	__tdiv_to_l_@quot+3
  6260  125E  3000               	movlw	0
  6261  125F  00A2               	movwf	__tdiv_to_l_@quot+2
  6262  1260  3000               	movlw	0
  6263  1261  00A1               	movwf	__tdiv_to_l_@quot+1
  6264  1262  3000               	movlw	0
  6265  1263  00A0               	movwf	__tdiv_to_l_@quot
  6266  1264                     l2743:	
  6267  1264  307F               	movlw	127
  6268  1265  02A5               	subwf	__tdiv_to_l_@exp1,f
  6269  1266                     l2745:	
  6270  1266  3098               	movlw	152
  6271  1267  0724               	addwf	__tdiv_to_l_@cntr,w
  6272  1268  00F8               	movwf	??__tdiv_to_l_
  6273  1269  0878               	movf	??__tdiv_to_l_,w
  6274  126A  02A5               	subwf	__tdiv_to_l_@exp1,f
  6275  126B  3018               	movlw	24
  6276  126C  00F8               	movwf	??__tdiv_to_l_
  6277  126D  0878               	movf	??__tdiv_to_l_,w
  6278  126E  00A4               	movwf	__tdiv_to_l_@cntr
  6279  126F                     l2747:	
  6280  126F  3001               	movlw	1
  6281  1270  00F8               	movwf	??__tdiv_to_l_
  6282  1271                     u4455:	
  6283  1271  1003               	clrc
  6284  1272  0DA0               	rlf	__tdiv_to_l_@quot,f
  6285  1273  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6286  1274  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6287  1275  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6288  1276  0BF8               	decfsz	??__tdiv_to_l_,f
  6289  1277  2A71               	goto	u4455
  6290  1278                     l2749:	
  6291  1278  0876               	movf	__tdiv_to_l_@f2+2,w
  6292  1279  0272               	subwf	__tdiv_to_l_@f1+2,w
  6293  127A  1D03               	skipz
  6294  127B  2A82               	goto	u4465
  6295  127C  0875               	movf	__tdiv_to_l_@f2+1,w
  6296  127D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6297  127E  1D03               	skipz
  6298  127F  2A82               	goto	u4465
  6299  1280  0874               	movf	__tdiv_to_l_@f2,w
  6300  1281  0270               	subwf	__tdiv_to_l_@f1,w
  6301  1282                     u4465:	
  6302  1282  1C03               	skipc
  6303  1283  2A85               	goto	u4461
  6304  1284  2A86               	goto	u4460
  6305  1285                     u4461:	
  6306  1285  2A91               	goto	l2755
  6307  1286                     u4460:	
  6308  1286                     l2751:	
  6309  1286  0874               	movf	__tdiv_to_l_@f2,w
  6310  1287  02F0               	subwf	__tdiv_to_l_@f1,f
  6311  1288  0875               	movf	__tdiv_to_l_@f2+1,w
  6312  1289  1C03               	skipc
  6313  128A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6314  128B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6315  128C  0876               	movf	__tdiv_to_l_@f2+2,w
  6316  128D  1C03               	skipc
  6317  128E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6318  128F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6319  1290                     l2753:	
  6320  1290  1420               	bsf	__tdiv_to_l_@quot,0
  6321  1291                     l2755:	
  6322  1291  3001               	movlw	1
  6323  1292                     u4475:	
  6324  1292  1003               	clrc
  6325  1293  0DF0               	rlf	__tdiv_to_l_@f1,f
  6326  1294  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6327  1295  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6328  1296  3EFF               	addlw	-1
  6329  1297  1D03               	skipz
  6330  1298  2A92               	goto	u4475
  6331  1299                     l2757:	
  6332  1299  3001               	movlw	1
  6333  129A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6334  129B  1D03               	btfss	3,2
  6335  129C  2A9E               	goto	u4481
  6336  129D  2A9F               	goto	u4480
  6337  129E                     u4481:	
  6338  129E  2A6F               	goto	l2747
  6339  129F                     u4480:	
  6340  129F                     l500:	
  6341  129F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6342  12A0  2AA2               	goto	u4491
  6343  12A1  2AA3               	goto	u4490
  6344  12A2                     u4491:	
  6345  12A2  2ABD               	goto	l2767
  6346  12A3                     u4490:	
  6347  12A3                     l2759:	
  6348  12A3  0825               	movf	__tdiv_to_l_@exp1,w
  6349  12A4  3A80               	xorlw	128
  6350  12A5  3E97               	addlw	151
  6351  12A6  1803               	skipnc
  6352  12A7  2AA9               	goto	u4501
  6353  12A8  2AAA               	goto	u4500
  6354  12A9                     u4501:	
  6355  12A9  2AAB               	goto	l2765
  6356  12AA                     u4500:	
  6357  12AA  2A33               	goto	l2729
  6358  12AB                     l2765:	
  6359  12AB  3001               	movlw	1
  6360  12AC                     u4515:	
  6361  12AC  1003               	clrc
  6362  12AD  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6363  12AE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6364  12AF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6365  12B0  0CA0               	rrf	__tdiv_to_l_@quot,f
  6366  12B1  3EFF               	addlw	-1
  6367  12B2  1D03               	skipz
  6368  12B3  2AAC               	goto	u4515
  6369  12B4  3001               	movlw	1
  6370  12B5  00F8               	movwf	??__tdiv_to_l_
  6371  12B6  0878               	movf	??__tdiv_to_l_,w
  6372  12B7  07A5               	addwf	__tdiv_to_l_@exp1,f
  6373  12B8  1D03               	btfss	3,2
  6374  12B9  2ABB               	goto	u4521
  6375  12BA  2ABC               	goto	u4520
  6376  12BB                     u4521:	
  6377  12BB  2AAB               	goto	l2765
  6378  12BC                     u4520:	
  6379  12BC  2AD4               	goto	l2775
  6380  12BD                     l2767:	
  6381  12BD  3018               	movlw	24
  6382  12BE  0225               	subwf	__tdiv_to_l_@exp1,w
  6383  12BF  1C03               	skipc
  6384  12C0  2AC2               	goto	u4531
  6385  12C1  2AC3               	goto	u4530
  6386  12C2                     u4531:	
  6387  12C2  2ACF               	goto	l507
  6388  12C3                     u4530:	
  6389  12C3  2A33               	goto	l2729
  6390  12C4                     l2773:	
  6391  12C4  3001               	movlw	1
  6392  12C5  00F8               	movwf	??__tdiv_to_l_
  6393  12C6                     u4545:	
  6394  12C6  1003               	clrc
  6395  12C7  0DA0               	rlf	__tdiv_to_l_@quot,f
  6396  12C8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6397  12C9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6398  12CA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6399  12CB  0BF8               	decfsz	??__tdiv_to_l_,f
  6400  12CC  2AC6               	goto	u4545
  6401  12CD  3001               	movlw	1
  6402  12CE  02A5               	subwf	__tdiv_to_l_@exp1,f
  6403  12CF                     l507:	
  6404  12CF  0825               	movf	__tdiv_to_l_@exp1,w
  6405  12D0  1D03               	btfss	3,2
  6406  12D1  2AD3               	goto	u4551
  6407  12D2  2AD4               	goto	u4550
  6408  12D3                     u4551:	
  6409  12D3  2AC4               	goto	l2773
  6410  12D4                     u4550:	
  6411  12D4                     l2775:	
  6412  12D4  0823               	movf	__tdiv_to_l_@quot+3,w
  6413  12D5  00F3               	movwf	?__tdiv_to_l_+3
  6414  12D6  0822               	movf	__tdiv_to_l_@quot+2,w
  6415  12D7  00F2               	movwf	?__tdiv_to_l_+2
  6416  12D8  0821               	movf	__tdiv_to_l_@quot+1,w
  6417  12D9  00F1               	movwf	?__tdiv_to_l_+1
  6418  12DA  0820               	movf	__tdiv_to_l_@quot,w
  6419  12DB  00F0               	movwf	?__tdiv_to_l_
  6420  12DC                     l496:	
  6421  12DC  0008               	return
  6422  12DD                     __end_of__tdiv_to_l_:	
  6423                           
  6424                           	psect	text13
  6425  12DD                     __ptext13:	
  6426 ;; *************** function __div_to_l_ *****************
  6427 ;; Defined at:
  6428 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  f1              4    0[COMMON] unsigned long 
  6431 ;;  f2              4    4[COMMON] unsigned long 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  quot            4    0[BANK0 ] unsigned long 
  6434 ;;  exp1            1    5[BANK0 ] unsigned char 
  6435 ;;  cntr            1    4[BANK0 ] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  4    0[COMMON] unsigned long 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         8       0       0       0       0
  6446 ;;      Locals:         0       6       0       0       0
  6447 ;;      Temps:          1       0       0       0       0
  6448 ;;      Totals:         9       6       0       0       0
  6449 ;;Total ram usage:       15 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_sprintf
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           
  6459                           ;psect for function __div_to_l_
  6460  12DD                     __div_to_l_:	
  6461  12DD                     l2779:	
  6462                           ;incstack = 0
  6463                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6464                           
  6465  12DD  1003               	clrc
  6466  12DE  0D72               	rlf	__div_to_l_@f1+2,w
  6467  12DF  0D73               	rlf	__div_to_l_@f1+3,w
  6468  12E0  00F8               	movwf	??__div_to_l_
  6469  12E1  0878               	movf	??__div_to_l_,w
  6470  12E2  1283               	bcf	3,5	;RP0=0, select bank0
  6471  12E3  1303               	bcf	3,6	;RP1=0, select bank0
  6472  12E4  00A5               	movwf	__div_to_l_@exp1
  6473  12E5  0825               	movf	__div_to_l_@exp1,w
  6474  12E6  1D03               	btfss	3,2
  6475  12E7  2AE9               	goto	u4561
  6476  12E8  2AEA               	goto	u4560
  6477  12E9                     u4561:	
  6478  12E9  2AF3               	goto	l2785
  6479  12EA                     u4560:	
  6480  12EA                     l2781:	
  6481  12EA  3000               	movlw	0
  6482  12EB  00F3               	movwf	?__div_to_l_+3
  6483  12EC  3000               	movlw	0
  6484  12ED  00F2               	movwf	?__div_to_l_+2
  6485  12EE  3000               	movlw	0
  6486  12EF  00F1               	movwf	?__div_to_l_+1
  6487  12F0  3000               	movlw	0
  6488  12F1  00F0               	movwf	?__div_to_l_
  6489  12F2  2B9A               	goto	l449
  6490  12F3                     l2785:	
  6491  12F3  1003               	clrc
  6492  12F4  0D76               	rlf	__div_to_l_@f2+2,w
  6493  12F5  0D77               	rlf	__div_to_l_@f2+3,w
  6494  12F6  00F8               	movwf	??__div_to_l_
  6495  12F7  0878               	movf	??__div_to_l_,w
  6496  12F8  00A4               	movwf	__div_to_l_@cntr
  6497  12F9  0824               	movf	__div_to_l_@cntr,w
  6498  12FA  1D03               	btfss	3,2
  6499  12FB  2AFD               	goto	u4571
  6500  12FC  2AFE               	goto	u4570
  6501  12FD                     u4571:	
  6502  12FD  2AFF               	goto	l450
  6503  12FE                     u4570:	
  6504  12FE  2AEA               	goto	l2781
  6505  12FF                     l450:	
  6506  12FF  17F2               	bsf	__div_to_l_@f1+2,7
  6507  1300                     l2791:	
  6508  1300  30FF               	movlw	255
  6509  1301  05F0               	andwf	__div_to_l_@f1,f
  6510  1302  30FF               	movlw	255
  6511  1303  05F1               	andwf	__div_to_l_@f1+1,f
  6512  1304  30FF               	movlw	255
  6513  1305  05F2               	andwf	__div_to_l_@f1+2,f
  6514  1306  3000               	movlw	0
  6515  1307  05F3               	andwf	__div_to_l_@f1+3,f
  6516  1308                     l2793:	
  6517  1308  17F6               	bsf	__div_to_l_@f2+2,7
  6518  1309  30FF               	movlw	255
  6519  130A  05F4               	andwf	__div_to_l_@f2,f
  6520  130B  30FF               	movlw	255
  6521  130C  05F5               	andwf	__div_to_l_@f2+1,f
  6522  130D  30FF               	movlw	255
  6523  130E  05F6               	andwf	__div_to_l_@f2+2,f
  6524  130F  3000               	movlw	0
  6525  1310  05F7               	andwf	__div_to_l_@f2+3,f
  6526  1311  3000               	movlw	0
  6527  1312  00A3               	movwf	__div_to_l_@quot+3
  6528  1313  3000               	movlw	0
  6529  1314  00A2               	movwf	__div_to_l_@quot+2
  6530  1315  3000               	movlw	0
  6531  1316  00A1               	movwf	__div_to_l_@quot+1
  6532  1317  3000               	movlw	0
  6533  1318  00A0               	movwf	__div_to_l_@quot
  6534  1319                     l2795:	
  6535  1319  307F               	movlw	127
  6536  131A  02A5               	subwf	__div_to_l_@exp1,f
  6537  131B                     l2797:	
  6538  131B  30A0               	movlw	160
  6539  131C  0724               	addwf	__div_to_l_@cntr,w
  6540  131D  00F8               	movwf	??__div_to_l_
  6541  131E  0878               	movf	??__div_to_l_,w
  6542  131F  02A5               	subwf	__div_to_l_@exp1,f
  6543  1320  3020               	movlw	32
  6544  1321  00F8               	movwf	??__div_to_l_
  6545  1322  0878               	movf	??__div_to_l_,w
  6546  1323  00A4               	movwf	__div_to_l_@cntr
  6547  1324                     l2799:	
  6548  1324  3001               	movlw	1
  6549  1325  00F8               	movwf	??__div_to_l_
  6550  1326                     u4585:	
  6551  1326  1003               	clrc
  6552  1327  0DA0               	rlf	__div_to_l_@quot,f
  6553  1328  0DA1               	rlf	__div_to_l_@quot+1,f
  6554  1329  0DA2               	rlf	__div_to_l_@quot+2,f
  6555  132A  0DA3               	rlf	__div_to_l_@quot+3,f
  6556  132B  0BF8               	decfsz	??__div_to_l_,f
  6557  132C  2B26               	goto	u4585
  6558  132D                     l2801:	
  6559  132D  0877               	movf	__div_to_l_@f2+3,w
  6560  132E  0273               	subwf	__div_to_l_@f1+3,w
  6561  132F  1D03               	skipz
  6562  1330  2B3B               	goto	u4595
  6563  1331  0876               	movf	__div_to_l_@f2+2,w
  6564  1332  0272               	subwf	__div_to_l_@f1+2,w
  6565  1333  1D03               	skipz
  6566  1334  2B3B               	goto	u4595
  6567  1335  0875               	movf	__div_to_l_@f2+1,w
  6568  1336  0271               	subwf	__div_to_l_@f1+1,w
  6569  1337  1D03               	skipz
  6570  1338  2B3B               	goto	u4595
  6571  1339  0874               	movf	__div_to_l_@f2,w
  6572  133A  0270               	subwf	__div_to_l_@f1,w
  6573  133B                     u4595:	
  6574  133B  1C03               	skipc
  6575  133C  2B3E               	goto	u4591
  6576  133D  2B3F               	goto	u4590
  6577  133E                     u4591:	
  6578  133E  2B4E               	goto	l2807
  6579  133F                     u4590:	
  6580  133F                     l2803:	
  6581  133F  0874               	movf	__div_to_l_@f2,w
  6582  1340  02F0               	subwf	__div_to_l_@f1,f
  6583  1341  0875               	movf	__div_to_l_@f2+1,w
  6584  1342  1C03               	skipc
  6585  1343  0F75               	incfsz	__div_to_l_@f2+1,w
  6586  1344  02F1               	subwf	__div_to_l_@f1+1,f
  6587  1345  0876               	movf	__div_to_l_@f2+2,w
  6588  1346  1C03               	skipc
  6589  1347  0F76               	incfsz	__div_to_l_@f2+2,w
  6590  1348  02F2               	subwf	__div_to_l_@f1+2,f
  6591  1349  0877               	movf	__div_to_l_@f2+3,w
  6592  134A  1C03               	skipc
  6593  134B  0F77               	incfsz	__div_to_l_@f2+3,w
  6594  134C  02F3               	subwf	__div_to_l_@f1+3,f
  6595  134D                     l2805:	
  6596  134D  1420               	bsf	__div_to_l_@quot,0
  6597  134E                     l2807:	
  6598  134E  3001               	movlw	1
  6599  134F  00F8               	movwf	??__div_to_l_
  6600  1350                     u4605:	
  6601  1350  1003               	clrc
  6602  1351  0DF0               	rlf	__div_to_l_@f1,f
  6603  1352  0DF1               	rlf	__div_to_l_@f1+1,f
  6604  1353  0DF2               	rlf	__div_to_l_@f1+2,f
  6605  1354  0DF3               	rlf	__div_to_l_@f1+3,f
  6606  1355  0BF8               	decfsz	??__div_to_l_,f
  6607  1356  2B50               	goto	u4605
  6608  1357                     l2809:	
  6609  1357  3001               	movlw	1
  6610  1358  02A4               	subwf	__div_to_l_@cntr,f
  6611  1359  1D03               	btfss	3,2
  6612  135A  2B5C               	goto	u4611
  6613  135B  2B5D               	goto	u4610
  6614  135C                     u4611:	
  6615  135C  2B24               	goto	l2799
  6616  135D                     u4610:	
  6617  135D                     l453:	
  6618  135D  1FA5               	btfss	__div_to_l_@exp1,7
  6619  135E  2B60               	goto	u4621
  6620  135F  2B61               	goto	u4620
  6621  1360                     u4621:	
  6622  1360  2B7B               	goto	l2819
  6623  1361                     u4620:	
  6624  1361                     l2811:	
  6625  1361  0825               	movf	__div_to_l_@exp1,w
  6626  1362  3A80               	xorlw	128
  6627  1363  3E9F               	addlw	159
  6628  1364  1803               	skipnc
  6629  1365  2B67               	goto	u4631
  6630  1366  2B68               	goto	u4630
  6631  1367                     u4631:	
  6632  1367  2B69               	goto	l2817
  6633  1368                     u4630:	
  6634  1368  2AEA               	goto	l2781
  6635  1369                     l2817:	
  6636  1369  3001               	movlw	1
  6637  136A                     u4645:	
  6638  136A  1003               	clrc
  6639  136B  0CA3               	rrf	__div_to_l_@quot+3,f
  6640  136C  0CA2               	rrf	__div_to_l_@quot+2,f
  6641  136D  0CA1               	rrf	__div_to_l_@quot+1,f
  6642  136E  0CA0               	rrf	__div_to_l_@quot,f
  6643  136F  3EFF               	addlw	-1
  6644  1370  1D03               	skipz
  6645  1371  2B6A               	goto	u4645
  6646  1372  3001               	movlw	1
  6647  1373  00F8               	movwf	??__div_to_l_
  6648  1374  0878               	movf	??__div_to_l_,w
  6649  1375  07A5               	addwf	__div_to_l_@exp1,f
  6650  1376  1D03               	btfss	3,2
  6651  1377  2B79               	goto	u4651
  6652  1378  2B7A               	goto	u4650
  6653  1379                     u4651:	
  6654  1379  2B69               	goto	l2817
  6655  137A                     u4650:	
  6656  137A  2B92               	goto	l2827
  6657  137B                     l2819:	
  6658  137B  3020               	movlw	32
  6659  137C  0225               	subwf	__div_to_l_@exp1,w
  6660  137D  1C03               	skipc
  6661  137E  2B80               	goto	u4661
  6662  137F  2B81               	goto	u4660
  6663  1380                     u4661:	
  6664  1380  2B8D               	goto	l460
  6665  1381                     u4660:	
  6666  1381  2AEA               	goto	l2781
  6667  1382                     l2825:	
  6668  1382  3001               	movlw	1
  6669  1383  00F8               	movwf	??__div_to_l_
  6670  1384                     u4675:	
  6671  1384  1003               	clrc
  6672  1385  0DA0               	rlf	__div_to_l_@quot,f
  6673  1386  0DA1               	rlf	__div_to_l_@quot+1,f
  6674  1387  0DA2               	rlf	__div_to_l_@quot+2,f
  6675  1388  0DA3               	rlf	__div_to_l_@quot+3,f
  6676  1389  0BF8               	decfsz	??__div_to_l_,f
  6677  138A  2B84               	goto	u4675
  6678  138B  3001               	movlw	1
  6679  138C  02A5               	subwf	__div_to_l_@exp1,f
  6680  138D                     l460:	
  6681  138D  0825               	movf	__div_to_l_@exp1,w
  6682  138E  1D03               	btfss	3,2
  6683  138F  2B91               	goto	u4681
  6684  1390  2B92               	goto	u4680
  6685  1391                     u4681:	
  6686  1391  2B82               	goto	l2825
  6687  1392                     u4680:	
  6688  1392                     l2827:	
  6689  1392  0823               	movf	__div_to_l_@quot+3,w
  6690  1393  00F3               	movwf	?__div_to_l_+3
  6691  1394  0822               	movf	__div_to_l_@quot+2,w
  6692  1395  00F2               	movwf	?__div_to_l_+2
  6693  1396  0821               	movf	__div_to_l_@quot+1,w
  6694  1397  00F1               	movwf	?__div_to_l_+1
  6695  1398  0820               	movf	__div_to_l_@quot,w
  6696  1399  00F0               	movwf	?__div_to_l_
  6697  139A                     l449:	
  6698  139A  0008               	return
  6699  139B                     __end_of__div_to_l_:	
  6700                           
  6701                           	psect	text14
  6702  1166                     __ptext14:	
  6703 ;; *************** function ___xxtofl *****************
  6704 ;; Defined at:
  6705 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  sign            1    wreg     unsigned char 
  6708 ;;  val             4    0[COMMON] long 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  sign            1    8[COMMON] unsigned char 
  6711 ;;  arg             4   10[COMMON] unsigned long 
  6712 ;;  exp             1    9[COMMON] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  4    0[COMMON] unsigned char 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6722 ;;      Params:         4       0       0       0       0
  6723 ;;      Locals:         6       0       0       0       0
  6724 ;;      Temps:          4       0       0       0       0
  6725 ;;      Totals:        14       0       0       0       0
  6726 ;;Total ram usage:       14 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_ADC_Read
  6732 ;;		_sprintf
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           
  6737                           ;psect for function ___xxtofl
  6738  1166                     ___xxtofl:	
  6739                           
  6740                           ;incstack = 0
  6741                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6742                           ;___xxtofl@sign stored from wreg
  6743  1166  00F8               	movwf	___xxtofl@sign
  6744  1167                     l2971:	
  6745  1167  0878               	movf	___xxtofl@sign,w
  6746  1168  1903               	btfsc	3,2
  6747  1169  296B               	goto	u5071
  6748  116A  296C               	goto	u5070
  6749  116B                     u5071:	
  6750  116B  2980               	goto	l2977
  6751  116C                     u5070:	
  6752  116C                     l2973:	
  6753  116C  1FF3               	btfss	___xxtofl@val+3,7
  6754  116D  296F               	goto	u5081
  6755  116E  2970               	goto	u5080
  6756  116F                     u5081:	
  6757  116F  2980               	goto	l2977
  6758  1170                     u5080:	
  6759  1170                     l2975:	
  6760  1170  0970               	comf	___xxtofl@val,w
  6761  1171  00FA               	movwf	___xxtofl@arg
  6762  1172  0971               	comf	___xxtofl@val+1,w
  6763  1173  00FB               	movwf	___xxtofl@arg+1
  6764  1174  0972               	comf	___xxtofl@val+2,w
  6765  1175  00FC               	movwf	___xxtofl@arg+2
  6766  1176  0973               	comf	___xxtofl@val+3,w
  6767  1177  00FD               	movwf	___xxtofl@arg+3
  6768  1178  0AFA               	incf	___xxtofl@arg,f
  6769  1179  1903               	skipnz
  6770  117A  0AFB               	incf	___xxtofl@arg+1,f
  6771  117B  1903               	skipnz
  6772  117C  0AFC               	incf	___xxtofl@arg+2,f
  6773  117D  1903               	skipnz
  6774  117E  0AFD               	incf	___xxtofl@arg+3,f
  6775  117F  2988               	goto	l740
  6776  1180                     l2977:	
  6777  1180  0873               	movf	___xxtofl@val+3,w
  6778  1181  00FD               	movwf	___xxtofl@arg+3
  6779  1182  0872               	movf	___xxtofl@val+2,w
  6780  1183  00FC               	movwf	___xxtofl@arg+2
  6781  1184  0871               	movf	___xxtofl@val+1,w
  6782  1185  00FB               	movwf	___xxtofl@arg+1
  6783  1186  0870               	movf	___xxtofl@val,w
  6784  1187  00FA               	movwf	___xxtofl@arg
  6785  1188                     l740:	
  6786  1188  0873               	movf	___xxtofl@val+3,w
  6787  1189  0472               	iorwf	___xxtofl@val+2,w
  6788  118A  0471               	iorwf	___xxtofl@val+1,w
  6789  118B  0470               	iorwf	___xxtofl@val,w
  6790  118C  1D03               	skipz
  6791  118D  298F               	goto	u5091
  6792  118E  2990               	goto	u5090
  6793  118F                     u5091:	
  6794  118F  2999               	goto	l2983
  6795  1190                     u5090:	
  6796  1190                     l2979:	
  6797  1190  3000               	movlw	0
  6798  1191  00F3               	movwf	?___xxtofl+3
  6799  1192  3000               	movlw	0
  6800  1193  00F2               	movwf	?___xxtofl+2
  6801  1194  3000               	movlw	0
  6802  1195  00F1               	movwf	?___xxtofl+1
  6803  1196  3000               	movlw	0
  6804  1197  00F0               	movwf	?___xxtofl
  6805  1198  2A1F               	goto	l742
  6806  1199                     l2983:	
  6807  1199  3096               	movlw	150
  6808  119A  00F4               	movwf	??___xxtofl
  6809  119B  0874               	movf	??___xxtofl,w
  6810  119C  00F9               	movwf	___xxtofl@exp
  6811  119D  29AB               	goto	l2987
  6812  119E                     l2985:	
  6813  119E  3001               	movlw	1
  6814  119F  00F4               	movwf	??___xxtofl
  6815  11A0  0874               	movf	??___xxtofl,w
  6816  11A1  07F9               	addwf	___xxtofl@exp,f
  6817  11A2  3001               	movlw	1
  6818  11A3                     u5105:	
  6819  11A3  1003               	clrc
  6820  11A4  0CFD               	rrf	___xxtofl@arg+3,f
  6821  11A5  0CFC               	rrf	___xxtofl@arg+2,f
  6822  11A6  0CFB               	rrf	___xxtofl@arg+1,f
  6823  11A7  0CFA               	rrf	___xxtofl@arg,f
  6824  11A8  3EFF               	addlw	-1
  6825  11A9  1D03               	skipz
  6826  11AA  29A3               	goto	u5105
  6827  11AB                     l2987:	
  6828  11AB  30FE               	movlw	254
  6829  11AC  057D               	andwf	___xxtofl@arg+3,w
  6830  11AD  1D03               	btfss	3,2
  6831  11AE  29B0               	goto	u5111
  6832  11AF  29B1               	goto	u5110
  6833  11B0                     u5111:	
  6834  11B0  299E               	goto	l2985
  6835  11B1                     u5110:	
  6836  11B1  29CD               	goto	l746
  6837  11B2                     l2989:	
  6838  11B2  3001               	movlw	1
  6839  11B3  00F4               	movwf	??___xxtofl
  6840  11B4  0874               	movf	??___xxtofl,w
  6841  11B5  07F9               	addwf	___xxtofl@exp,f
  6842  11B6                     l2991:	
  6843  11B6  3001               	movlw	1
  6844  11B7  07FA               	addwf	___xxtofl@arg,f
  6845  11B8  3000               	movlw	0
  6846  11B9  1803               	skipnc
  6847  11BA  3001               	movlw	1
  6848  11BB  07FB               	addwf	___xxtofl@arg+1,f
  6849  11BC  3000               	movlw	0
  6850  11BD  1803               	skipnc
  6851  11BE  3001               	movlw	1
  6852  11BF  07FC               	addwf	___xxtofl@arg+2,f
  6853  11C0  3000               	movlw	0
  6854  11C1  1803               	skipnc
  6855  11C2  3001               	movlw	1
  6856  11C3  07FD               	addwf	___xxtofl@arg+3,f
  6857  11C4                     l2993:	
  6858  11C4  3001               	movlw	1
  6859  11C5                     u5125:	
  6860  11C5  1003               	clrc
  6861  11C6  0CFD               	rrf	___xxtofl@arg+3,f
  6862  11C7  0CFC               	rrf	___xxtofl@arg+2,f
  6863  11C8  0CFB               	rrf	___xxtofl@arg+1,f
  6864  11C9  0CFA               	rrf	___xxtofl@arg,f
  6865  11CA  3EFF               	addlw	-1
  6866  11CB  1D03               	skipz
  6867  11CC  29C5               	goto	u5125
  6868  11CD                     l746:	
  6869  11CD  30FF               	movlw	255
  6870  11CE  057D               	andwf	___xxtofl@arg+3,w
  6871  11CF  1D03               	btfss	3,2
  6872  11D0  29D2               	goto	u5131
  6873  11D1  29D3               	goto	u5130
  6874  11D2                     u5131:	
  6875  11D2  29B2               	goto	l2989
  6876  11D3                     u5130:	
  6877  11D3  29DF               	goto	l2997
  6878  11D4                     l2995:	
  6879  11D4  3001               	movlw	1
  6880  11D5  02F9               	subwf	___xxtofl@exp,f
  6881  11D6  3001               	movlw	1
  6882  11D7  00F4               	movwf	??___xxtofl
  6883  11D8                     u5145:	
  6884  11D8  1003               	clrc
  6885  11D9  0DFA               	rlf	___xxtofl@arg,f
  6886  11DA  0DFB               	rlf	___xxtofl@arg+1,f
  6887  11DB  0DFC               	rlf	___xxtofl@arg+2,f
  6888  11DC  0DFD               	rlf	___xxtofl@arg+3,f
  6889  11DD  0BF4               	decfsz	??___xxtofl,f
  6890  11DE  29D8               	goto	u5145
  6891  11DF                     l2997:	
  6892  11DF  1BFC               	btfsc	___xxtofl@arg+2,7
  6893  11E0  29E2               	goto	u5151
  6894  11E1  29E3               	goto	u5150
  6895  11E2                     u5151:	
  6896  11E2  29E9               	goto	l753
  6897  11E3                     u5150:	
  6898  11E3                     l2999:	
  6899  11E3  3002               	movlw	2
  6900  11E4  0279               	subwf	___xxtofl@exp,w
  6901  11E5  1803               	skipnc
  6902  11E6  29E8               	goto	u5161
  6903  11E7  29E9               	goto	u5160
  6904  11E8                     u5161:	
  6905  11E8  29D4               	goto	l2995
  6906  11E9                     u5160:	
  6907  11E9                     l753:	
  6908  11E9  1879               	btfsc	___xxtofl@exp,0
  6909  11EA  29EC               	goto	u5171
  6910  11EB  29ED               	goto	u5170
  6911  11EC                     u5171:	
  6912  11EC  29F5               	goto	l754
  6913  11ED                     u5170:	
  6914  11ED                     l3001:	
  6915  11ED  30FF               	movlw	255
  6916  11EE  05FA               	andwf	___xxtofl@arg,f
  6917  11EF  30FF               	movlw	255
  6918  11F0  05FB               	andwf	___xxtofl@arg+1,f
  6919  11F1  307F               	movlw	127
  6920  11F2  05FC               	andwf	___xxtofl@arg+2,f
  6921  11F3  30FF               	movlw	255
  6922  11F4  05FD               	andwf	___xxtofl@arg+3,f
  6923  11F5                     l754:	
  6924  11F5  1003               	clrc
  6925  11F6  0CF9               	rrf	___xxtofl@exp,f
  6926  11F7                     l3003:	
  6927  11F7  0879               	movf	___xxtofl@exp,w
  6928  11F8  00F4               	movwf	??___xxtofl
  6929  11F9  01F5               	clrf	??___xxtofl+1
  6930  11FA  01F6               	clrf	??___xxtofl+2
  6931  11FB  01F7               	clrf	??___xxtofl+3
  6932  11FC  3018               	movlw	24
  6933  11FD                     u5185:	
  6934  11FD  1003               	clrc
  6935  11FE  0DF4               	rlf	??___xxtofl,f
  6936  11FF  0DF5               	rlf	??___xxtofl+1,f
  6937  1200  0DF6               	rlf	??___xxtofl+2,f
  6938  1201  0DF7               	rlf	??___xxtofl+3,f
  6939  1202                     u5180:	
  6940  1202  3EFF               	addlw	-1
  6941  1203  1D03               	skipz
  6942  1204  29FD               	goto	u5185
  6943  1205  0874               	movf	??___xxtofl,w
  6944  1206  04FA               	iorwf	___xxtofl@arg,f
  6945  1207  0875               	movf	??___xxtofl+1,w
  6946  1208  04FB               	iorwf	___xxtofl@arg+1,f
  6947  1209  0876               	movf	??___xxtofl+2,w
  6948  120A  04FC               	iorwf	___xxtofl@arg+2,f
  6949  120B  0877               	movf	??___xxtofl+3,w
  6950  120C  04FD               	iorwf	___xxtofl@arg+3,f
  6951  120D                     l3005:	
  6952  120D  0878               	movf	___xxtofl@sign,w
  6953  120E  1903               	btfsc	3,2
  6954  120F  2A11               	goto	u5191
  6955  1210  2A12               	goto	u5190
  6956  1211                     u5191:	
  6957  1211  2A17               	goto	l3011
  6958  1212                     u5190:	
  6959  1212                     l3007:	
  6960  1212  1FF3               	btfss	___xxtofl@val+3,7
  6961  1213  2A15               	goto	u5201
  6962  1214  2A16               	goto	u5200
  6963  1215                     u5201:	
  6964  1215  2A17               	goto	l3011
  6965  1216                     u5200:	
  6966  1216                     l3009:	
  6967  1216  17FD               	bsf	___xxtofl@arg+3,7
  6968  1217                     l3011:	
  6969  1217  087D               	movf	___xxtofl@arg+3,w
  6970  1218  00F3               	movwf	?___xxtofl+3
  6971  1219  087C               	movf	___xxtofl@arg+2,w
  6972  121A  00F2               	movwf	?___xxtofl+2
  6973  121B  087B               	movf	___xxtofl@arg+1,w
  6974  121C  00F1               	movwf	?___xxtofl+1
  6975  121D  087A               	movf	___xxtofl@arg,w
  6976  121E  00F0               	movwf	?___xxtofl
  6977  121F                     l742:	
  6978  121F  0008               	return
  6979  1220                     __end_of___xxtofl:	
  6980                           
  6981                           	psect	text15
  6982  1C78                     __ptext15:	
  6983 ;; *************** function ___wmul *****************
  6984 ;; Defined at:
  6985 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  multiplier      2    0[COMMON] unsigned int 
  6988 ;;  multiplicand    2    2[COMMON] unsigned int 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  product         2    4[COMMON] unsigned int 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  2    0[COMMON] unsigned int 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7000 ;;      Params:         4       0       0       0       0
  7001 ;;      Locals:         2       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0
  7003 ;;      Totals:         6       0       0       0       0
  7004 ;;Total ram usage:        6 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_sprintf
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function ___wmul
  7015  1C78                     ___wmul:	
  7016  1C78                     l2831:	
  7017                           ;incstack = 0
  7018                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7019                           
  7020  1C78  01F4               	clrf	___wmul@product
  7021  1C79  01F5               	clrf	___wmul@product+1
  7022  1C7A                     l2833:	
  7023  1C7A  1C70               	btfss	___wmul@multiplier,0
  7024  1C7B  2C7D               	goto	u4691
  7025  1C7C  2C7E               	goto	u4690
  7026  1C7D                     u4691:	
  7027  1C7D  2C84               	goto	l279
  7028  1C7E                     u4690:	
  7029  1C7E                     l2835:	
  7030  1C7E  0872               	movf	___wmul@multiplicand,w
  7031  1C7F  07F4               	addwf	___wmul@product,f
  7032  1C80  1803               	skipnc
  7033  1C81  0AF5               	incf	___wmul@product+1,f
  7034  1C82  0873               	movf	___wmul@multiplicand+1,w
  7035  1C83  07F5               	addwf	___wmul@product+1,f
  7036  1C84                     l279:	
  7037  1C84  3001               	movlw	1
  7038  1C85                     u4705:	
  7039  1C85  1003               	clrc
  7040  1C86  0DF2               	rlf	___wmul@multiplicand,f
  7041  1C87  0DF3               	rlf	___wmul@multiplicand+1,f
  7042  1C88  3EFF               	addlw	-1
  7043  1C89  1D03               	skipz
  7044  1C8A  2C85               	goto	u4705
  7045  1C8B                     l2837:	
  7046  1C8B  3001               	movlw	1
  7047  1C8C                     u4715:	
  7048  1C8C  1003               	clrc
  7049  1C8D  0CF1               	rrf	___wmul@multiplier+1,f
  7050  1C8E  0CF0               	rrf	___wmul@multiplier,f
  7051  1C8F  3EFF               	addlw	-1
  7052  1C90  1D03               	skipz
  7053  1C91  2C8C               	goto	u4715
  7054  1C92                     l2839:	
  7055  1C92  0870               	movf	___wmul@multiplier,w
  7056  1C93  0471               	iorwf	___wmul@multiplier+1,w
  7057  1C94  1D03               	btfss	3,2
  7058  1C95  2C97               	goto	u4721
  7059  1C96  2C98               	goto	u4720
  7060  1C97                     u4721:	
  7061  1C97  2C7A               	goto	l2833
  7062  1C98                     u4720:	
  7063  1C98                     l2841:	
  7064  1C98  0875               	movf	___wmul@product+1,w
  7065  1C99  00F1               	movwf	?___wmul+1
  7066  1C9A  0874               	movf	___wmul@product,w
  7067  1C9B  00F0               	movwf	?___wmul
  7068  1C9C                     l281:	
  7069  1C9C  0008               	return
  7070  1C9D                     __end_of___wmul:	
  7071                           
  7072                           	psect	text16
  7073  1E61                     __ptext16:	
  7074 ;; *************** function ___llmod *****************
  7075 ;; Defined at:
  7076 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  divisor         4    0[COMMON] unsigned long 
  7079 ;;  dividend        4    4[COMMON] unsigned long 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  counter         1    9[COMMON] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  4    0[COMMON] unsigned long 
  7084 ;; Registers used:
  7085 ;;		wreg, status,2, status,0
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7091 ;;      Params:         8       0       0       0       0
  7092 ;;      Locals:         1       0       0       0       0
  7093 ;;      Temps:          1       0       0       0       0
  7094 ;;      Totals:        10       0       0       0       0
  7095 ;;Total ram usage:       10 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_sprintf
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function ___llmod
  7106  1E61                     ___llmod:	
  7107  1E61                     l2945:	
  7108                           ;incstack = 0
  7109                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7110                           
  7111  1E61  0873               	movf	___llmod@divisor+3,w
  7112  1E62  0472               	iorwf	___llmod@divisor+2,w
  7113  1E63  0471               	iorwf	___llmod@divisor+1,w
  7114  1E64  0470               	iorwf	___llmod@divisor,w
  7115  1E65  1903               	skipnz
  7116  1E66  2E68               	goto	u5011
  7117  1E67  2E69               	goto	u5010
  7118  1E68                     u5011:	
  7119  1E68  2EAC               	goto	l2961
  7120  1E69                     u5010:	
  7121  1E69                     l2947:	
  7122  1E69  01F9               	clrf	___llmod@counter
  7123  1E6A  0AF9               	incf	___llmod@counter,f
  7124  1E6B  2E79               	goto	l2951
  7125  1E6C                     l2949:	
  7126  1E6C  3001               	movlw	1
  7127  1E6D  00F8               	movwf	??___llmod
  7128  1E6E                     u5025:	
  7129  1E6E  1003               	clrc
  7130  1E6F  0DF0               	rlf	___llmod@divisor,f
  7131  1E70  0DF1               	rlf	___llmod@divisor+1,f
  7132  1E71  0DF2               	rlf	___llmod@divisor+2,f
  7133  1E72  0DF3               	rlf	___llmod@divisor+3,f
  7134  1E73  0BF8               	decfsz	??___llmod,f
  7135  1E74  2E6E               	goto	u5025
  7136  1E75  3001               	movlw	1
  7137  1E76  00F8               	movwf	??___llmod
  7138  1E77  0878               	movf	??___llmod,w
  7139  1E78  07F9               	addwf	___llmod@counter,f
  7140  1E79                     l2951:	
  7141  1E79  1FF3               	btfss	___llmod@divisor+3,7
  7142  1E7A  2E7C               	goto	u5031
  7143  1E7B  2E7D               	goto	u5030
  7144  1E7C                     u5031:	
  7145  1E7C  2E6C               	goto	l2949
  7146  1E7D                     u5030:	
  7147  1E7D                     l2953:	
  7148  1E7D  0873               	movf	___llmod@divisor+3,w
  7149  1E7E  0277               	subwf	___llmod@dividend+3,w
  7150  1E7F  1D03               	skipz
  7151  1E80  2E8B               	goto	u5045
  7152  1E81  0872               	movf	___llmod@divisor+2,w
  7153  1E82  0276               	subwf	___llmod@dividend+2,w
  7154  1E83  1D03               	skipz
  7155  1E84  2E8B               	goto	u5045
  7156  1E85  0871               	movf	___llmod@divisor+1,w
  7157  1E86  0275               	subwf	___llmod@dividend+1,w
  7158  1E87  1D03               	skipz
  7159  1E88  2E8B               	goto	u5045
  7160  1E89  0870               	movf	___llmod@divisor,w
  7161  1E8A  0274               	subwf	___llmod@dividend,w
  7162  1E8B                     u5045:	
  7163  1E8B  1C03               	skipc
  7164  1E8C  2E8E               	goto	u5041
  7165  1E8D  2E8F               	goto	u5040
  7166  1E8E                     u5041:	
  7167  1E8E  2E9D               	goto	l2957
  7168  1E8F                     u5040:	
  7169  1E8F                     l2955:	
  7170  1E8F  0870               	movf	___llmod@divisor,w
  7171  1E90  02F4               	subwf	___llmod@dividend,f
  7172  1E91  0871               	movf	___llmod@divisor+1,w
  7173  1E92  1C03               	skipc
  7174  1E93  0F71               	incfsz	___llmod@divisor+1,w
  7175  1E94  02F5               	subwf	___llmod@dividend+1,f
  7176  1E95  0872               	movf	___llmod@divisor+2,w
  7177  1E96  1C03               	skipc
  7178  1E97  0F72               	incfsz	___llmod@divisor+2,w
  7179  1E98  02F6               	subwf	___llmod@dividend+2,f
  7180  1E99  0873               	movf	___llmod@divisor+3,w
  7181  1E9A  1C03               	skipc
  7182  1E9B  0F73               	incfsz	___llmod@divisor+3,w
  7183  1E9C  02F7               	subwf	___llmod@dividend+3,f
  7184  1E9D                     l2957:	
  7185  1E9D  3001               	movlw	1
  7186  1E9E                     u5055:	
  7187  1E9E  1003               	clrc
  7188  1E9F  0CF3               	rrf	___llmod@divisor+3,f
  7189  1EA0  0CF2               	rrf	___llmod@divisor+2,f
  7190  1EA1  0CF1               	rrf	___llmod@divisor+1,f
  7191  1EA2  0CF0               	rrf	___llmod@divisor,f
  7192  1EA3  3EFF               	addlw	-1
  7193  1EA4  1D03               	skipz
  7194  1EA5  2E9E               	goto	u5055
  7195  1EA6                     l2959:	
  7196  1EA6  3001               	movlw	1
  7197  1EA7  02F9               	subwf	___llmod@counter,f
  7198  1EA8  1D03               	btfss	3,2
  7199  1EA9  2EAB               	goto	u5061
  7200  1EAA  2EAC               	goto	u5060
  7201  1EAB                     u5061:	
  7202  1EAB  2E7D               	goto	l2953
  7203  1EAC                     u5060:	
  7204  1EAC                     l2961:	
  7205  1EAC  0877               	movf	___llmod@dividend+3,w
  7206  1EAD  00F3               	movwf	?___llmod+3
  7207  1EAE  0876               	movf	___llmod@dividend+2,w
  7208  1EAF  00F2               	movwf	?___llmod+2
  7209  1EB0  0875               	movf	___llmod@dividend+1,w
  7210  1EB1  00F1               	movwf	?___llmod+1
  7211  1EB2  0874               	movf	___llmod@dividend,w
  7212  1EB3  00F0               	movwf	?___llmod
  7213  1EB4                     l535:	
  7214  1EB4  0008               	return
  7215  1EB5                     __end_of___llmod:	
  7216                           
  7217                           	psect	text17
  7218  1EB5                     __ptext17:	
  7219 ;; *************** function ___lldiv *****************
  7220 ;; Defined at:
  7221 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  divisor         4    0[COMMON] unsigned long 
  7224 ;;  dividend        4    4[COMMON] unsigned long 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  quotient        4    9[COMMON] unsigned long 
  7227 ;;  counter         1   13[COMMON] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  4    0[COMMON] unsigned long 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7237 ;;      Params:         8       0       0       0       0
  7238 ;;      Locals:         5       0       0       0       0
  7239 ;;      Temps:          1       0       0       0       0
  7240 ;;      Totals:        14       0       0       0       0
  7241 ;;Total ram usage:       14 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_sprintf
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           
  7251                           ;psect for function ___lldiv
  7252  1EB5                     ___lldiv:	
  7253  1EB5                     l2845:	
  7254                           ;incstack = 0
  7255                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7256                           
  7257  1EB5  3000               	movlw	0
  7258  1EB6  00FC               	movwf	___lldiv@quotient+3
  7259  1EB7  3000               	movlw	0
  7260  1EB8  00FB               	movwf	___lldiv@quotient+2
  7261  1EB9  3000               	movlw	0
  7262  1EBA  00FA               	movwf	___lldiv@quotient+1
  7263  1EBB  3000               	movlw	0
  7264  1EBC  00F9               	movwf	___lldiv@quotient
  7265  1EBD  0873               	movf	___lldiv@divisor+3,w
  7266  1EBE  0472               	iorwf	___lldiv@divisor+2,w
  7267  1EBF  0471               	iorwf	___lldiv@divisor+1,w
  7268  1EC0  0470               	iorwf	___lldiv@divisor,w
  7269  1EC1  1903               	skipnz
  7270  1EC2  2EC4               	goto	u4731
  7271  1EC3  2EC5               	goto	u4730
  7272  1EC4                     u4731:	
  7273  1EC4  2F12               	goto	l2865
  7274  1EC5                     u4730:	
  7275  1EC5                     l2847:	
  7276  1EC5  01FD               	clrf	___lldiv@counter
  7277  1EC6  0AFD               	incf	___lldiv@counter,f
  7278  1EC7  2ED5               	goto	l2851
  7279  1EC8                     l2849:	
  7280  1EC8  3001               	movlw	1
  7281  1EC9  00F8               	movwf	??___lldiv
  7282  1ECA                     u4745:	
  7283  1ECA  1003               	clrc
  7284  1ECB  0DF0               	rlf	___lldiv@divisor,f
  7285  1ECC  0DF1               	rlf	___lldiv@divisor+1,f
  7286  1ECD  0DF2               	rlf	___lldiv@divisor+2,f
  7287  1ECE  0DF3               	rlf	___lldiv@divisor+3,f
  7288  1ECF  0BF8               	decfsz	??___lldiv,f
  7289  1ED0  2ECA               	goto	u4745
  7290  1ED1  3001               	movlw	1
  7291  1ED2  00F8               	movwf	??___lldiv
  7292  1ED3  0878               	movf	??___lldiv,w
  7293  1ED4  07FD               	addwf	___lldiv@counter,f
  7294  1ED5                     l2851:	
  7295  1ED5  1FF3               	btfss	___lldiv@divisor+3,7
  7296  1ED6  2ED8               	goto	u4751
  7297  1ED7  2ED9               	goto	u4750
  7298  1ED8                     u4751:	
  7299  1ED8  2EC8               	goto	l2849
  7300  1ED9                     u4750:	
  7301  1ED9                     l2853:	
  7302  1ED9  3001               	movlw	1
  7303  1EDA  00F8               	movwf	??___lldiv
  7304  1EDB                     u4765:	
  7305  1EDB  1003               	clrc
  7306  1EDC  0DF9               	rlf	___lldiv@quotient,f
  7307  1EDD  0DFA               	rlf	___lldiv@quotient+1,f
  7308  1EDE  0DFB               	rlf	___lldiv@quotient+2,f
  7309  1EDF  0DFC               	rlf	___lldiv@quotient+3,f
  7310  1EE0  0BF8               	decfsz	??___lldiv,f
  7311  1EE1  2EDB               	goto	u4765
  7312  1EE2                     l2855:	
  7313  1EE2  0873               	movf	___lldiv@divisor+3,w
  7314  1EE3  0277               	subwf	___lldiv@dividend+3,w
  7315  1EE4  1D03               	skipz
  7316  1EE5  2EF0               	goto	u4775
  7317  1EE6  0872               	movf	___lldiv@divisor+2,w
  7318  1EE7  0276               	subwf	___lldiv@dividend+2,w
  7319  1EE8  1D03               	skipz
  7320  1EE9  2EF0               	goto	u4775
  7321  1EEA  0871               	movf	___lldiv@divisor+1,w
  7322  1EEB  0275               	subwf	___lldiv@dividend+1,w
  7323  1EEC  1D03               	skipz
  7324  1EED  2EF0               	goto	u4775
  7325  1EEE  0870               	movf	___lldiv@divisor,w
  7326  1EEF  0274               	subwf	___lldiv@dividend,w
  7327  1EF0                     u4775:	
  7328  1EF0  1C03               	skipc
  7329  1EF1  2EF3               	goto	u4771
  7330  1EF2  2EF4               	goto	u4770
  7331  1EF3                     u4771:	
  7332  1EF3  2F03               	goto	l2861
  7333  1EF4                     u4770:	
  7334  1EF4                     l2857:	
  7335  1EF4  0870               	movf	___lldiv@divisor,w
  7336  1EF5  02F4               	subwf	___lldiv@dividend,f
  7337  1EF6  0871               	movf	___lldiv@divisor+1,w
  7338  1EF7  1C03               	skipc
  7339  1EF8  0F71               	incfsz	___lldiv@divisor+1,w
  7340  1EF9  02F5               	subwf	___lldiv@dividend+1,f
  7341  1EFA  0872               	movf	___lldiv@divisor+2,w
  7342  1EFB  1C03               	skipc
  7343  1EFC  0F72               	incfsz	___lldiv@divisor+2,w
  7344  1EFD  02F6               	subwf	___lldiv@dividend+2,f
  7345  1EFE  0873               	movf	___lldiv@divisor+3,w
  7346  1EFF  1C03               	skipc
  7347  1F00  0F73               	incfsz	___lldiv@divisor+3,w
  7348  1F01  02F7               	subwf	___lldiv@dividend+3,f
  7349  1F02                     l2859:	
  7350  1F02  1479               	bsf	___lldiv@quotient,0
  7351  1F03                     l2861:	
  7352  1F03  3001               	movlw	1
  7353  1F04                     u4785:	
  7354  1F04  1003               	clrc
  7355  1F05  0CF3               	rrf	___lldiv@divisor+3,f
  7356  1F06  0CF2               	rrf	___lldiv@divisor+2,f
  7357  1F07  0CF1               	rrf	___lldiv@divisor+1,f
  7358  1F08  0CF0               	rrf	___lldiv@divisor,f
  7359  1F09  3EFF               	addlw	-1
  7360  1F0A  1D03               	skipz
  7361  1F0B  2F04               	goto	u4785
  7362  1F0C                     l2863:	
  7363  1F0C  3001               	movlw	1
  7364  1F0D  02FD               	subwf	___lldiv@counter,f
  7365  1F0E  1D03               	btfss	3,2
  7366  1F0F  2F11               	goto	u4791
  7367  1F10  2F12               	goto	u4790
  7368  1F11                     u4791:	
  7369  1F11  2ED9               	goto	l2853
  7370  1F12                     u4790:	
  7371  1F12                     l2865:	
  7372  1F12  087C               	movf	___lldiv@quotient+3,w
  7373  1F13  00F3               	movwf	?___lldiv+3
  7374  1F14  087B               	movf	___lldiv@quotient+2,w
  7375  1F15  00F2               	movwf	?___lldiv+2
  7376  1F16  087A               	movf	___lldiv@quotient+1,w
  7377  1F17  00F1               	movwf	?___lldiv+1
  7378  1F18  0879               	movf	___lldiv@quotient,w
  7379  1F19  00F0               	movwf	?___lldiv
  7380  1F1A                     l315:	
  7381  1F1A  0008               	return
  7382  1F1B                     __end_of___lldiv:	
  7383                           
  7384                           	psect	text18
  7385  1F84                     __ptext18:	
  7386 ;; *************** function ___fltol *****************
  7387 ;; Defined at:
  7388 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  f1              4   49[BANK0 ] unsigned long 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  exp1            1   59[BANK0 ] unsigned char 
  7393 ;;  sign1           1   58[BANK0 ] unsigned char 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  4   49[BANK0 ] long 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7403 ;;      Params:         0       4       0       0       0
  7404 ;;      Locals:         0       2       0       0       0
  7405 ;;      Temps:          0       5       0       0       0
  7406 ;;      Totals:         0      11       0       0       0
  7407 ;;Total ram usage:       11 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_sprintf
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function ___fltol
  7418  1F84                     ___fltol:	
  7419  1F84                     l2909:	
  7420                           ;incstack = 0
  7421                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7422                           
  7423  1F84  1003               	clrc
  7424  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  7425  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  7426  1F87  0D53               	rlf	___fltol@f1+2,w
  7427  1F88  0D54               	rlf	___fltol@f1+3,w
  7428  1F89  00D5               	movwf	??___fltol
  7429  1F8A  0855               	movf	??___fltol,w
  7430  1F8B  00DB               	movwf	___fltol@exp1
  7431  1F8C  085B               	movf	___fltol@exp1,w
  7432  1F8D  1D03               	btfss	3,2
  7433  1F8E  2F90               	goto	u4911
  7434  1F8F  2F91               	goto	u4910
  7435  1F90                     u4911:	
  7436  1F90  2F9A               	goto	l2915
  7437  1F91                     u4910:	
  7438  1F91                     l2911:	
  7439  1F91  3000               	movlw	0
  7440  1F92  00D4               	movwf	?___fltol+3
  7441  1F93  3000               	movlw	0
  7442  1F94  00D3               	movwf	?___fltol+2
  7443  1F95  3000               	movlw	0
  7444  1F96  00D2               	movwf	?___fltol+1
  7445  1F97  3000               	movlw	0
  7446  1F98  00D1               	movwf	?___fltol
  7447  1F99  2FFF               	goto	l482
  7448  1F9A                     l2915:	
  7449  1F9A  0851               	movf	___fltol@f1,w
  7450  1F9B  00D5               	movwf	??___fltol
  7451  1F9C  0852               	movf	___fltol@f1+1,w
  7452  1F9D  00D6               	movwf	??___fltol+1
  7453  1F9E  0853               	movf	___fltol@f1+2,w
  7454  1F9F  00D7               	movwf	??___fltol+2
  7455  1FA0  0854               	movf	___fltol@f1+3,w
  7456  1FA1  00D8               	movwf	??___fltol+3
  7457  1FA2  301F               	movlw	31
  7458  1FA3                     u4925:	
  7459  1FA3  1003               	clrc
  7460  1FA4  0CD8               	rrf	??___fltol+3,f
  7461  1FA5  0CD7               	rrf	??___fltol+2,f
  7462  1FA6  0CD6               	rrf	??___fltol+1,f
  7463  1FA7  0CD5               	rrf	??___fltol,f
  7464  1FA8                     u4920:	
  7465  1FA8  3EFF               	addlw	-1
  7466  1FA9  1D03               	skipz
  7467  1FAA  2FA3               	goto	u4925
  7468  1FAB  0855               	movf	??___fltol,w
  7469  1FAC  00D9               	movwf	??___fltol+4
  7470  1FAD  0859               	movf	??___fltol+4,w
  7471  1FAE  00DA               	movwf	___fltol@sign1
  7472  1FAF                     l2917:	
  7473  1FAF  17D3               	bsf	___fltol@f1+2,7
  7474  1FB0                     l2919:	
  7475  1FB0  30FF               	movlw	255
  7476  1FB1  05D1               	andwf	___fltol@f1,f
  7477  1FB2  30FF               	movlw	255
  7478  1FB3  05D2               	andwf	___fltol@f1+1,f
  7479  1FB4  30FF               	movlw	255
  7480  1FB5  05D3               	andwf	___fltol@f1+2,f
  7481  1FB6  3000               	movlw	0
  7482  1FB7  05D4               	andwf	___fltol@f1+3,f
  7483  1FB8                     l2921:	
  7484  1FB8  3096               	movlw	150
  7485  1FB9  02DB               	subwf	___fltol@exp1,f
  7486  1FBA                     l2923:	
  7487  1FBA  1FDB               	btfss	___fltol@exp1,7
  7488  1FBB  2FBD               	goto	u4931
  7489  1FBC  2FBE               	goto	u4930
  7490  1FBD                     u4931:	
  7491  1FBD  2FD8               	goto	l2933
  7492  1FBE                     u4930:	
  7493  1FBE                     l2925:	
  7494  1FBE  085B               	movf	___fltol@exp1,w
  7495  1FBF  3A80               	xorlw	128
  7496  1FC0  3E97               	addlw	151
  7497  1FC1  1803               	skipnc
  7498  1FC2  2FC4               	goto	u4941
  7499  1FC3  2FC5               	goto	u4940
  7500  1FC4                     u4941:	
  7501  1FC4  2FC6               	goto	l2931
  7502  1FC5                     u4940:	
  7503  1FC5  2F91               	goto	l2911
  7504  1FC6                     l2931:	
  7505  1FC6  3001               	movlw	1
  7506  1FC7                     u4955:	
  7507  1FC7  1003               	clrc
  7508  1FC8  0CD4               	rrf	___fltol@f1+3,f
  7509  1FC9  0CD3               	rrf	___fltol@f1+2,f
  7510  1FCA  0CD2               	rrf	___fltol@f1+1,f
  7511  1FCB  0CD1               	rrf	___fltol@f1,f
  7512  1FCC  3EFF               	addlw	-1
  7513  1FCD  1D03               	skipz
  7514  1FCE  2FC7               	goto	u4955
  7515  1FCF  3001               	movlw	1
  7516  1FD0  00D5               	movwf	??___fltol
  7517  1FD1  0855               	movf	??___fltol,w
  7518  1FD2  07DB               	addwf	___fltol@exp1,f
  7519  1FD3  1D03               	btfss	3,2
  7520  1FD4  2FD6               	goto	u4961
  7521  1FD5  2FD7               	goto	u4960
  7522  1FD6                     u4961:	
  7523  1FD6  2FC6               	goto	l2931
  7524  1FD7                     u4960:	
  7525  1FD7  2FEF               	goto	l2941
  7526  1FD8                     l2933:	
  7527  1FD8  3020               	movlw	32
  7528  1FD9  025B               	subwf	___fltol@exp1,w
  7529  1FDA  1C03               	skipc
  7530  1FDB  2FDD               	goto	u4971
  7531  1FDC  2FDE               	goto	u4970
  7532  1FDD                     u4971:	
  7533  1FDD  2FEA               	goto	l489
  7534  1FDE                     u4970:	
  7535  1FDE  2F91               	goto	l2911
  7536  1FDF                     l2939:	
  7537  1FDF  3001               	movlw	1
  7538  1FE0  00D5               	movwf	??___fltol
  7539  1FE1                     u4985:	
  7540  1FE1  1003               	clrc
  7541  1FE2  0DD1               	rlf	___fltol@f1,f
  7542  1FE3  0DD2               	rlf	___fltol@f1+1,f
  7543  1FE4  0DD3               	rlf	___fltol@f1+2,f
  7544  1FE5  0DD4               	rlf	___fltol@f1+3,f
  7545  1FE6  0BD5               	decfsz	??___fltol,f
  7546  1FE7  2FE1               	goto	u4985
  7547  1FE8  3001               	movlw	1
  7548  1FE9  02DB               	subwf	___fltol@exp1,f
  7549  1FEA                     l489:	
  7550  1FEA  085B               	movf	___fltol@exp1,w
  7551  1FEB  1D03               	btfss	3,2
  7552  1FEC  2FEE               	goto	u4991
  7553  1FED  2FEF               	goto	u4990
  7554  1FEE                     u4991:	
  7555  1FEE  2FDF               	goto	l2939
  7556  1FEF                     u4990:	
  7557  1FEF                     l2941:	
  7558  1FEF  085A               	movf	___fltol@sign1,w
  7559  1FF0  1903               	btfsc	3,2
  7560  1FF1  2FF3               	goto	u5001
  7561  1FF2  2FF4               	goto	u5000
  7562  1FF3                     u5001:	
  7563  1FF3  2FFF               	goto	l492
  7564  1FF4                     u5000:	
  7565  1FF4                     l2943:	
  7566  1FF4  09D1               	comf	___fltol@f1,f
  7567  1FF5  09D2               	comf	___fltol@f1+1,f
  7568  1FF6  09D3               	comf	___fltol@f1+2,f
  7569  1FF7  09D4               	comf	___fltol@f1+3,f
  7570  1FF8  0AD1               	incf	___fltol@f1,f
  7571  1FF9  1903               	skipnz
  7572  1FFA  0AD2               	incf	___fltol@f1+1,f
  7573  1FFB  1903               	skipnz
  7574  1FFC  0AD3               	incf	___fltol@f1+2,f
  7575  1FFD  1903               	skipnz
  7576  1FFE  0AD4               	incf	___fltol@f1+3,f
  7577  1FFF                     l492:	
  7578  1FFF                     l482:	
  7579  1FFF  0008               	return
  7580  2000                     __end_of___fltol:	
  7581                           
  7582                           	psect	text19
  7583  1C54                     __ptext19:	
  7584 ;; *************** function ___flsub *****************
  7585 ;; Defined at:
  7586 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  a               4   70[BANK0 ] long 
  7589 ;;  b               4   74[BANK0 ] long 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  4   70[BANK0 ] long 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7601 ;;      Params:         0       8       0       0       0
  7602 ;;      Locals:         0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0
  7604 ;;      Totals:         0       8       0       0       0
  7605 ;;Total ram usage:        8 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    1
  7608 ;; This function calls:
  7609 ;;		___fladd
  7610 ;; This function is called by:
  7611 ;;		_sprintf
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function ___flsub
  7617  1C54                     ___flsub:	
  7618  1C54                     l2965:	
  7619                           ;incstack = 0
  7620                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7621                           
  7622  1C54  3080               	movlw	128
  7623  1C55  1283               	bcf	3,5	;RP0=0, select bank0
  7624  1C56  1303               	bcf	3,6	;RP1=0, select bank0
  7625  1C57  06E9               	xorwf	___flsub@a+3,f
  7626  1C58                     l2967:	
  7627  1C58  086D               	movf	___flsub@b+3,w
  7628  1C59  00D5               	movwf	___fladd@b+3
  7629  1C5A  086C               	movf	___flsub@b+2,w
  7630  1C5B  00D4               	movwf	___fladd@b+2
  7631  1C5C  086B               	movf	___flsub@b+1,w
  7632  1C5D  00D3               	movwf	___fladd@b+1
  7633  1C5E  086A               	movf	___flsub@b,w
  7634  1C5F  00D2               	movwf	___fladd@b
  7635  1C60  0869               	movf	___flsub@a+3,w
  7636  1C61  00D9               	movwf	___fladd@a+3
  7637  1C62  0868               	movf	___flsub@a+2,w
  7638  1C63  00D8               	movwf	___fladd@a+2
  7639  1C64  0867               	movf	___flsub@a+1,w
  7640  1C65  00D7               	movwf	___fladd@a+1
  7641  1C66  0866               	movf	___flsub@a,w
  7642  1C67  00D6               	movwf	___fladd@a
  7643  1C68  160A  118A  2578  160A  158A  	fcall	___fladd
  7644  1C6D  1283               	bcf	3,5	;RP0=0, select bank0
  7645  1C6E  1303               	bcf	3,6	;RP1=0, select bank0
  7646  1C6F  0855               	movf	?___fladd+3,w
  7647  1C70  00E9               	movwf	?___flsub+3
  7648  1C71  0854               	movf	?___fladd+2,w
  7649  1C72  00E8               	movwf	?___flsub+2
  7650  1C73  0853               	movf	?___fladd+1,w
  7651  1C74  00E7               	movwf	?___flsub+1
  7652  1C75  0852               	movf	?___fladd,w
  7653  1C76  00E6               	movwf	?___flsub
  7654  1C77                     l652:	
  7655  1C77  0008               	return
  7656  1C78                     __end_of___flsub:	
  7657                           
  7658                           	psect	text20
  7659  1578                     __ptext20:	
  7660 ;; *************** function ___fladd *****************
  7661 ;; Defined at:
  7662 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  b               4   50[BANK0 ] long 
  7665 ;;  a               4   54[BANK0 ] long 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  grs             1   69[BANK0 ] unsigned char 
  7668 ;;  bexp            1   68[BANK0 ] unsigned char 
  7669 ;;  aexp            1   67[BANK0 ] unsigned char 
  7670 ;;  signs           1   66[BANK0 ] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  4   50[BANK0 ] unsigned char 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0, btemp+1
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7680 ;;      Params:         0       8       0       0       0
  7681 ;;      Locals:         0       4       0       0       0
  7682 ;;      Temps:          0       8       0       0       0
  7683 ;;      Totals:         0      20       0       0       0
  7684 ;;Total ram usage:       20 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_sprintf
  7690 ;;		___flsub
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function ___fladd
  7696  1578                     ___fladd:	
  7697  1578                     l2311:	
  7698                           ;incstack = 0
  7699                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7700                           
  7701  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7702  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7703  157A  0855               	movf	___fladd@b+3,w
  7704  157B  3980               	andlw	128
  7705  157C  00DA               	movwf	??___fladd
  7706  157D  085A               	movf	??___fladd,w
  7707  157E  00E2               	movwf	___fladd@signs
  7708  157F                     l2313:	
  7709  157F  0855               	movf	___fladd@b+3,w
  7710  1580  00DA               	movwf	??___fladd
  7711  1581  075A               	addwf	??___fladd,w
  7712  1582  00DB               	movwf	??___fladd+1
  7713  1583  085B               	movf	??___fladd+1,w
  7714  1584  00E4               	movwf	___fladd@bexp
  7715  1585                     l2315:	
  7716  1585  1FD4               	btfss	___fladd@b+2,7
  7717  1586  2D88               	goto	u3341
  7718  1587  2D89               	goto	u3340
  7719  1588                     u3341:	
  7720  1588  2D8A               	goto	l2319
  7721  1589                     u3340:	
  7722  1589                     l2317:	
  7723  1589  1464               	bsf	___fladd@bexp,0
  7724  158A                     l2319:	
  7725  158A  0864               	movf	___fladd@bexp,w
  7726  158B  1903               	btfsc	3,2
  7727  158C  2D8E               	goto	u3351
  7728  158D  2D8F               	goto	u3350
  7729  158E                     u3351:	
  7730  158E  2D9F               	goto	l2329
  7731  158F                     u3350:	
  7732  158F                     l2321:	
  7733  158F  0A64               	incf	___fladd@bexp,w
  7734  1590  1D03               	btfss	3,2
  7735  1591  2D93               	goto	u3361
  7736  1592  2D94               	goto	u3360
  7737  1593                     u3361:	
  7738  1593  2D9C               	goto	l2325
  7739  1594                     u3360:	
  7740  1594                     l2323:	
  7741  1594  3000               	movlw	0
  7742  1595  00D5               	movwf	___fladd@b+3
  7743  1596  3000               	movlw	0
  7744  1597  00D4               	movwf	___fladd@b+2
  7745  1598  3000               	movlw	0
  7746  1599  00D3               	movwf	___fladd@b+1
  7747  159A  3000               	movlw	0
  7748  159B  00D2               	movwf	___fladd@b
  7749  159C                     l2325:	
  7750  159C  17D4               	bsf	___fladd@b+2,7
  7751  159D                     l2327:	
  7752  159D  01D5               	clrf	___fladd@b+3
  7753  159E  2DA7               	goto	l2331
  7754  159F                     l2329:	
  7755  159F  3000               	movlw	0
  7756  15A0  00D5               	movwf	___fladd@b+3
  7757  15A1  3000               	movlw	0
  7758  15A2  00D4               	movwf	___fladd@b+2
  7759  15A3  3000               	movlw	0
  7760  15A4  00D3               	movwf	___fladd@b+1
  7761  15A5  3000               	movlw	0
  7762  15A6  00D2               	movwf	___fladd@b
  7763  15A7                     l2331:	
  7764  15A7  0859               	movf	___fladd@a+3,w
  7765  15A8  3980               	andlw	128
  7766  15A9  00DA               	movwf	??___fladd
  7767  15AA  085A               	movf	??___fladd,w
  7768  15AB  00E3               	movwf	___fladd@aexp
  7769  15AC                     l2333:	
  7770  15AC  0863               	movf	___fladd@aexp,w
  7771  15AD  0662               	xorwf	___fladd@signs,w
  7772  15AE  1903               	skipnz
  7773  15AF  2DB1               	goto	u3371
  7774  15B0  2DB2               	goto	u3370
  7775  15B1                     u3371:	
  7776  15B1  2DB3               	goto	l2337
  7777  15B2                     u3370:	
  7778  15B2                     l2335:	
  7779  15B2  1762               	bsf	___fladd@signs,6
  7780  15B3                     l2337:	
  7781  15B3  0859               	movf	___fladd@a+3,w
  7782  15B4  00DA               	movwf	??___fladd
  7783  15B5  075A               	addwf	??___fladd,w
  7784  15B6  00DB               	movwf	??___fladd+1
  7785  15B7  085B               	movf	??___fladd+1,w
  7786  15B8  00E3               	movwf	___fladd@aexp
  7787  15B9                     l2339:	
  7788  15B9  1FD8               	btfss	___fladd@a+2,7
  7789  15BA  2DBC               	goto	u3381
  7790  15BB  2DBD               	goto	u3380
  7791  15BC                     u3381:	
  7792  15BC  2DBE               	goto	l2343
  7793  15BD                     u3380:	
  7794  15BD                     l2341:	
  7795  15BD  1463               	bsf	___fladd@aexp,0
  7796  15BE                     l2343:	
  7797  15BE  0863               	movf	___fladd@aexp,w
  7798  15BF  1903               	btfsc	3,2
  7799  15C0  2DC2               	goto	u3391
  7800  15C1  2DC3               	goto	u3390
  7801  15C2                     u3391:	
  7802  15C2  2DD3               	goto	l2353
  7803  15C3                     u3390:	
  7804  15C3                     l2345:	
  7805  15C3  0A63               	incf	___fladd@aexp,w
  7806  15C4  1D03               	btfss	3,2
  7807  15C5  2DC7               	goto	u3401
  7808  15C6  2DC8               	goto	u3400
  7809  15C7                     u3401:	
  7810  15C7  2DD0               	goto	l2349
  7811  15C8                     u3400:	
  7812  15C8                     l2347:	
  7813  15C8  3000               	movlw	0
  7814  15C9  00D9               	movwf	___fladd@a+3
  7815  15CA  3000               	movlw	0
  7816  15CB  00D8               	movwf	___fladd@a+2
  7817  15CC  3000               	movlw	0
  7818  15CD  00D7               	movwf	___fladd@a+1
  7819  15CE  3000               	movlw	0
  7820  15CF  00D6               	movwf	___fladd@a
  7821  15D0                     l2349:	
  7822  15D0  17D8               	bsf	___fladd@a+2,7
  7823  15D1                     l2351:	
  7824  15D1  01D9               	clrf	___fladd@a+3
  7825  15D2  2DDB               	goto	l606
  7826  15D3                     l2353:	
  7827  15D3  3000               	movlw	0
  7828  15D4  00D9               	movwf	___fladd@a+3
  7829  15D5  3000               	movlw	0
  7830  15D6  00D8               	movwf	___fladd@a+2
  7831  15D7  3000               	movlw	0
  7832  15D8  00D7               	movwf	___fladd@a+1
  7833  15D9  3000               	movlw	0
  7834  15DA  00D6               	movwf	___fladd@a
  7835  15DB                     l606:	
  7836  15DB  0864               	movf	___fladd@bexp,w
  7837  15DC  0263               	subwf	___fladd@aexp,w
  7838  15DD  1803               	skipnc
  7839  15DE  2DE0               	goto	u3411
  7840  15DF  2DE1               	goto	u3410
  7841  15E0                     u3411:	
  7842  15E0  2E25               	goto	l2389
  7843  15E1                     u3410:	
  7844  15E1                     l2355:	
  7845  15E1  1F62               	btfss	___fladd@signs,6
  7846  15E2  2DE4               	goto	u3421
  7847  15E3  2DE5               	goto	u3420
  7848  15E4                     u3421:	
  7849  15E4  2DE9               	goto	l2359
  7850  15E5                     u3420:	
  7851  15E5                     l2357:	
  7852  15E5  3080               	movlw	128
  7853  15E6  00DA               	movwf	??___fladd
  7854  15E7  085A               	movf	??___fladd,w
  7855  15E8  06E2               	xorwf	___fladd@signs,f
  7856  15E9                     l2359:	
  7857  15E9  0864               	movf	___fladd@bexp,w
  7858  15EA  00DA               	movwf	??___fladd
  7859  15EB  085A               	movf	??___fladd,w
  7860  15EC  00E5               	movwf	___fladd@grs
  7861  15ED                     l2361:	
  7862  15ED  0863               	movf	___fladd@aexp,w
  7863  15EE  00DA               	movwf	??___fladd
  7864  15EF  085A               	movf	??___fladd,w
  7865  15F0  00E4               	movwf	___fladd@bexp
  7866  15F1                     l2363:	
  7867  15F1  0865               	movf	___fladd@grs,w
  7868  15F2  00DA               	movwf	??___fladd
  7869  15F3  085A               	movf	??___fladd,w
  7870  15F4  00E3               	movwf	___fladd@aexp
  7871  15F5                     l2365:	
  7872  15F5  0852               	movf	___fladd@b,w
  7873  15F6  00DA               	movwf	??___fladd
  7874  15F7  085A               	movf	??___fladd,w
  7875  15F8  00E5               	movwf	___fladd@grs
  7876  15F9                     l2367:	
  7877  15F9  0856               	movf	___fladd@a,w
  7878  15FA  00DA               	movwf	??___fladd
  7879  15FB  085A               	movf	??___fladd,w
  7880  15FC  00D2               	movwf	___fladd@b
  7881  15FD                     l2369:	
  7882  15FD  0865               	movf	___fladd@grs,w
  7883  15FE  00DA               	movwf	??___fladd
  7884  15FF  085A               	movf	??___fladd,w
  7885  1600  00D6               	movwf	___fladd@a
  7886  1601                     l2371:	
  7887  1601  0853               	movf	___fladd@b+1,w
  7888  1602  00DA               	movwf	??___fladd
  7889  1603  085A               	movf	??___fladd,w
  7890  1604  00E5               	movwf	___fladd@grs
  7891  1605                     l2373:	
  7892  1605  0857               	movf	___fladd@a+1,w
  7893  1606  00DA               	movwf	??___fladd
  7894  1607  085A               	movf	??___fladd,w
  7895  1608  00D3               	movwf	___fladd@b+1
  7896  1609                     l2375:	
  7897  1609  0865               	movf	___fladd@grs,w
  7898  160A  00DA               	movwf	??___fladd
  7899  160B  085A               	movf	??___fladd,w
  7900  160C  00D7               	movwf	___fladd@a+1
  7901  160D                     l2377:	
  7902  160D  0854               	movf	___fladd@b+2,w
  7903  160E  00DA               	movwf	??___fladd
  7904  160F  085A               	movf	??___fladd,w
  7905  1610  00E5               	movwf	___fladd@grs
  7906  1611                     l2379:	
  7907  1611  0858               	movf	___fladd@a+2,w
  7908  1612  00DA               	movwf	??___fladd
  7909  1613  085A               	movf	??___fladd,w
  7910  1614  00D4               	movwf	___fladd@b+2
  7911  1615                     l2381:	
  7912  1615  0865               	movf	___fladd@grs,w
  7913  1616  00DA               	movwf	??___fladd
  7914  1617  085A               	movf	??___fladd,w
  7915  1618  00D8               	movwf	___fladd@a+2
  7916  1619                     l2383:	
  7917  1619  0855               	movf	___fladd@b+3,w
  7918  161A  00DA               	movwf	??___fladd
  7919  161B  085A               	movf	??___fladd,w
  7920  161C  00E5               	movwf	___fladd@grs
  7921  161D                     l2385:	
  7922  161D  0859               	movf	___fladd@a+3,w
  7923  161E  00DA               	movwf	??___fladd
  7924  161F  085A               	movf	??___fladd,w
  7925  1620  00D5               	movwf	___fladd@b+3
  7926  1621                     l2387:	
  7927  1621  0865               	movf	___fladd@grs,w
  7928  1622  00DA               	movwf	??___fladd
  7929  1623  085A               	movf	??___fladd,w
  7930  1624  00D9               	movwf	___fladd@a+3
  7931  1625                     l2389:	
  7932  1625  01E5               	clrf	___fladd@grs
  7933  1626                     l2391:	
  7934  1626  0863               	movf	___fladd@aexp,w
  7935  1627  00DA               	movwf	??___fladd
  7936  1628  01DB               	clrf	??___fladd+1
  7937  1629  085B               	movf	??___fladd+1,w
  7938  162A  00DD               	movwf	??___fladd+3
  7939  162B  0864               	movf	___fladd@bexp,w
  7940  162C  025A               	subwf	??___fladd,w
  7941  162D  00DC               	movwf	??___fladd+2
  7942  162E  1C03               	skipc
  7943  162F  03DD               	decf	??___fladd+3,f
  7944  1630  085D               	movf	??___fladd+3,w
  7945  1631  3A80               	xorlw	128
  7946  1632  00FF               	movwf	btemp+1
  7947  1633  3080               	movlw	128
  7948  1634  027F               	subwf	btemp+1,w
  7949  1635  1D03               	skipz
  7950  1636  2E39               	goto	u3435
  7951  1637  301A               	movlw	26
  7952  1638  025C               	subwf	??___fladd+2,w
  7953  1639                     u3435:	
  7954  1639  1C03               	skipc
  7955  163A  2E3C               	goto	u3431
  7956  163B  2E3D               	goto	u3430
  7957  163C                     u3431:	
  7958  163C  2E7A               	goto	l2407
  7959  163D                     u3430:	
  7960  163D                     l2393:	
  7961  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7962  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7963  163F  0855               	movf	___fladd@b+3,w
  7964  1640  0454               	iorwf	___fladd@b+2,w
  7965  1641  0453               	iorwf	___fladd@b+1,w
  7966  1642  0452               	iorwf	___fladd@b,w
  7967  1643  1D03               	skipz
  7968  1644  2E46               	goto	u3441
  7969  1645  2E48               	goto	u3440
  7970  1646                     u3441:	
  7971  1646  3001               	movlw	1
  7972  1647  2E49               	goto	u3450
  7973  1648                     u3440:	
  7974  1648  3000               	movlw	0
  7975  1649                     u3450:	
  7976  1649  00DA               	movwf	??___fladd
  7977  164A  085A               	movf	??___fladd,w
  7978  164B  00E5               	movwf	___fladd@grs
  7979  164C  3000               	movlw	0
  7980  164D  00D5               	movwf	___fladd@b+3
  7981  164E  3000               	movlw	0
  7982  164F  00D4               	movwf	___fladd@b+2
  7983  1650  3000               	movlw	0
  7984  1651  00D3               	movwf	___fladd@b+1
  7985  1652  3000               	movlw	0
  7986  1653  00D2               	movwf	___fladd@b
  7987  1654  0863               	movf	___fladd@aexp,w
  7988  1655  00DA               	movwf	??___fladd
  7989  1656  085A               	movf	??___fladd,w
  7990  1657  00E4               	movwf	___fladd@bexp
  7991  1658  2E82               	goto	l610
  7992  1659                     l612:	
  7993  1659  1C65               	btfss	___fladd@grs,0
  7994  165A  2E5C               	goto	u3461
  7995  165B  2E5D               	goto	u3460
  7996  165C                     u3461:	
  7997  165C  2E66               	goto	l2397
  7998  165D                     u3460:	
  7999  165D                     l2395:	
  8000  165D  0865               	movf	___fladd@grs,w
  8001  165E  00DA               	movwf	??___fladd
  8002  165F  1003               	clrc
  8003  1660  0C5A               	rrf	??___fladd,w
  8004  1661  3801               	iorlw	1
  8005  1662  00DB               	movwf	??___fladd+1
  8006  1663  085B               	movf	??___fladd+1,w
  8007  1664  00E5               	movwf	___fladd@grs
  8008  1665  2E68               	goto	l2399
  8009  1666                     l2397:	
  8010  1666  1003               	clrc
  8011  1667  0CE5               	rrf	___fladd@grs,f
  8012  1668                     l2399:	
  8013  1668  1C52               	btfss	___fladd@b,0
  8014  1669  2E6B               	goto	u3471
  8015  166A  2E6C               	goto	u3470
  8016  166B                     u3471:	
  8017  166B  2E6D               	goto	l2403
  8018  166C                     u3470:	
  8019  166C                     l2401:	
  8020  166C  17E5               	bsf	___fladd@grs,7
  8021  166D                     l2403:	
  8022  166D  3001               	movlw	1
  8023  166E  00DA               	movwf	??___fladd
  8024  166F                     u3485:	
  8025  166F  0D55               	rlf	___fladd@b+3,w
  8026  1670  0CD5               	rrf	___fladd@b+3,f
  8027  1671  0CD4               	rrf	___fladd@b+2,f
  8028  1672  0CD3               	rrf	___fladd@b+1,f
  8029  1673  0CD2               	rrf	___fladd@b,f
  8030  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8031  1675  2E6F               	goto	u3485
  8032  1676                     l2405:	
  8033  1676  3001               	movlw	1
  8034  1677  00DA               	movwf	??___fladd
  8035  1678  085A               	movf	??___fladd,w
  8036  1679  07E4               	addwf	___fladd@bexp,f
  8037  167A                     l2407:	
  8038  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8039  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8040  167C  0863               	movf	___fladd@aexp,w
  8041  167D  0264               	subwf	___fladd@bexp,w
  8042  167E  1C03               	skipc
  8043  167F  2E81               	goto	u3491
  8044  1680  2E82               	goto	u3490
  8045  1681                     u3491:	
  8046  1681  2E59               	goto	l612
  8047  1682                     u3490:	
  8048  1682                     l610:	
  8049  1682  1B62               	btfsc	___fladd@signs,6
  8050  1683  2E85               	goto	u3501
  8051  1684  2E86               	goto	u3500
  8052  1685                     u3501:	
  8053  1685  2ED1               	goto	l2433
  8054  1686                     u3500:	
  8055  1686                     l2409:	
  8056  1686  0864               	movf	___fladd@bexp,w
  8057  1687  1D03               	btfss	3,2
  8058  1688  2E8A               	goto	u3511
  8059  1689  2E8B               	goto	u3510
  8060  168A                     u3511:	
  8061  168A  2E94               	goto	l2415
  8062  168B                     u3510:	
  8063  168B                     l2411:	
  8064  168B  3000               	movlw	0
  8065  168C  00D5               	movwf	?___fladd+3
  8066  168D  3000               	movlw	0
  8067  168E  00D4               	movwf	?___fladd+2
  8068  168F  3000               	movlw	0
  8069  1690  00D3               	movwf	?___fladd+1
  8070  1691  3000               	movlw	0
  8071  1692  00D2               	movwf	?___fladd
  8072  1693  2FFF               	goto	l619
  8073  1694                     l2415:	
  8074  1694  0856               	movf	___fladd@a,w
  8075  1695  07D2               	addwf	___fladd@b,f
  8076  1696  0857               	movf	___fladd@a+1,w
  8077  1697  1103               	clrz
  8078  1698  1803               	skipnc
  8079  1699  3E01               	addlw	1
  8080  169A  1903               	skipnz
  8081  169B  2E9D               	goto	u3521
  8082  169C  07D3               	addwf	___fladd@b+1,f
  8083  169D                     u3521:	
  8084  169D  0858               	movf	___fladd@a+2,w
  8085  169E  1103               	clrz
  8086  169F  1803               	skipnc
  8087  16A0  3E01               	addlw	1
  8088  16A1  1903               	skipnz
  8089  16A2  2EA4               	goto	u3522
  8090  16A3  07D4               	addwf	___fladd@b+2,f
  8091  16A4                     u3522:	
  8092  16A4  0859               	movf	___fladd@a+3,w
  8093  16A5  1103               	clrz
  8094  16A6  1803               	skipnc
  8095  16A7  3E01               	addlw	1
  8096  16A8  1903               	skipnz
  8097  16A9  2EAB               	goto	u3523
  8098  16AA  07D5               	addwf	___fladd@b+3,f
  8099  16AB                     u3523:	
  8100  16AB                     l2417:	
  8101  16AB  1C55               	btfss	___fladd@b+3,0
  8102  16AC  2EAE               	goto	u3531
  8103  16AD  2EAF               	goto	u3530
  8104  16AE                     u3531:	
  8105  16AE  2F85               	goto	l2467
  8106  16AF                     u3530:	
  8107  16AF                     l2419:	
  8108  16AF  1C65               	btfss	___fladd@grs,0
  8109  16B0  2EB2               	goto	u3541
  8110  16B1  2EB3               	goto	u3540
  8111  16B2                     u3541:	
  8112  16B2  2EBC               	goto	l2423
  8113  16B3                     u3540:	
  8114  16B3                     l2421:	
  8115  16B3  0865               	movf	___fladd@grs,w
  8116  16B4  00DA               	movwf	??___fladd
  8117  16B5  1003               	clrc
  8118  16B6  0C5A               	rrf	??___fladd,w
  8119  16B7  3801               	iorlw	1
  8120  16B8  00DB               	movwf	??___fladd+1
  8121  16B9  085B               	movf	??___fladd+1,w
  8122  16BA  00E5               	movwf	___fladd@grs
  8123  16BB  2EBE               	goto	l2425
  8124  16BC                     l2423:	
  8125  16BC  1003               	clrc
  8126  16BD  0CE5               	rrf	___fladd@grs,f
  8127  16BE                     l2425:	
  8128  16BE  1C52               	btfss	___fladd@b,0
  8129  16BF  2EC1               	goto	u3551
  8130  16C0  2EC2               	goto	u3550
  8131  16C1                     u3551:	
  8132  16C1  2EC3               	goto	l2429
  8133  16C2                     u3550:	
  8134  16C2                     l2427:	
  8135  16C2  17E5               	bsf	___fladd@grs,7
  8136  16C3                     l2429:	
  8137  16C3  3001               	movlw	1
  8138  16C4  00DA               	movwf	??___fladd
  8139  16C5                     u3565:	
  8140  16C5  0D55               	rlf	___fladd@b+3,w
  8141  16C6  0CD5               	rrf	___fladd@b+3,f
  8142  16C7  0CD4               	rrf	___fladd@b+2,f
  8143  16C8  0CD3               	rrf	___fladd@b+1,f
  8144  16C9  0CD2               	rrf	___fladd@b,f
  8145  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8146  16CB  2EC5               	goto	u3565
  8147  16CC                     l2431:	
  8148  16CC  3001               	movlw	1
  8149  16CD  00DA               	movwf	??___fladd
  8150  16CE  085A               	movf	??___fladd,w
  8151  16CF  07E4               	addwf	___fladd@bexp,f
  8152  16D0  2F85               	goto	l2467
  8153  16D1                     l2433:	
  8154  16D1  0855               	movf	___fladd@b+3,w
  8155  16D2  3A80               	xorlw	128
  8156  16D3  00FF               	movwf	btemp+1
  8157  16D4  0859               	movf	___fladd@a+3,w
  8158  16D5  3A80               	xorlw	128
  8159  16D6  027F               	subwf	btemp+1,w
  8160  16D7  1D03               	skipz
  8161  16D8  2EE3               	goto	u3573
  8162  16D9  0858               	movf	___fladd@a+2,w
  8163  16DA  0254               	subwf	___fladd@b+2,w
  8164  16DB  1D03               	skipz
  8165  16DC  2EE3               	goto	u3573
  8166  16DD  0857               	movf	___fladd@a+1,w
  8167  16DE  0253               	subwf	___fladd@b+1,w
  8168  16DF  1D03               	skipz
  8169  16E0  2EE3               	goto	u3573
  8170  16E1  0856               	movf	___fladd@a,w
  8171  16E2  0252               	subwf	___fladd@b,w
  8172  16E3                     u3573:	
  8173  16E3  1803               	skipnc
  8174  16E4  2EE6               	goto	u3571
  8175  16E5  2EE7               	goto	u3570
  8176  16E6                     u3571:	
  8177  16E6  2F3F               	goto	l2443
  8178  16E7                     u3570:	
  8179  16E7                     l2435:	
  8180  16E7  30FF               	movlw	255
  8181  16E8  00DA               	movwf	??___fladd
  8182  16E9  30FF               	movlw	255
  8183  16EA  00DB               	movwf	??___fladd+1
  8184  16EB  30FF               	movlw	255
  8185  16EC  00DC               	movwf	??___fladd+2
  8186  16ED  30FF               	movlw	255
  8187  16EE  00DD               	movwf	??___fladd+3
  8188  16EF  0856               	movf	___fladd@a,w
  8189  16F0  00DE               	movwf	??___fladd+4
  8190  16F1  0857               	movf	___fladd@a+1,w
  8191  16F2  00DF               	movwf	??___fladd+5
  8192  16F3  0858               	movf	___fladd@a+2,w
  8193  16F4  00E0               	movwf	??___fladd+6
  8194  16F5  0859               	movf	___fladd@a+3,w
  8195  16F6  00E1               	movwf	??___fladd+7
  8196  16F7  0852               	movf	___fladd@b,w
  8197  16F8  02DE               	subwf	??___fladd+4,f
  8198  16F9  0853               	movf	___fladd@b+1,w
  8199  16FA  1C03               	skipc
  8200  16FB  0F53               	incfsz	___fladd@b+1,w
  8201  16FC  2EFE               	goto	u3581
  8202  16FD  2EFF               	goto	u3582
  8203  16FE                     u3581:	
  8204  16FE  02DF               	subwf	??___fladd+5,f
  8205  16FF                     u3582:	
  8206  16FF  0854               	movf	___fladd@b+2,w
  8207  1700  1C03               	skipc
  8208  1701  0F54               	incfsz	___fladd@b+2,w
  8209  1702  2F04               	goto	u3583
  8210  1703  2F05               	goto	u3584
  8211  1704                     u3583:	
  8212  1704  02E0               	subwf	??___fladd+6,f
  8213  1705                     u3584:	
  8214  1705  0855               	movf	___fladd@b+3,w
  8215  1706  1C03               	skipc
  8216  1707  0F55               	incfsz	___fladd@b+3,w
  8217  1708  2F0A               	goto	u3585
  8218  1709  2F0B               	goto	u3586
  8219  170A                     u3585:	
  8220  170A  02E1               	subwf	??___fladd+7,f
  8221  170B                     u3586:	
  8222  170B  085E               	movf	??___fladd+4,w
  8223  170C  07DA               	addwf	??___fladd,f
  8224  170D  085F               	movf	??___fladd+5,w
  8225  170E  1803               	skipnc
  8226  170F  0F5F               	incfsz	??___fladd+5,w
  8227  1710  2F12               	goto	u3590
  8228  1711  2F13               	goto	u3591
  8229  1712                     u3590:	
  8230  1712  07DB               	addwf	??___fladd+1,f
  8231  1713                     u3591:	
  8232  1713  0860               	movf	??___fladd+6,w
  8233  1714  1803               	skipnc
  8234  1715  0F60               	incfsz	??___fladd+6,w
  8235  1716  2F18               	goto	u3592
  8236  1717  2F19               	goto	u3593
  8237  1718                     u3592:	
  8238  1718  07DC               	addwf	??___fladd+2,f
  8239  1719                     u3593:	
  8240  1719  0861               	movf	??___fladd+7,w
  8241  171A  1803               	skipnc
  8242  171B  0A61               	incf	??___fladd+7,w
  8243  171C  07DD               	addwf	??___fladd+3,f
  8244  171D  085D               	movf	??___fladd+3,w
  8245  171E  00D5               	movwf	___fladd@b+3
  8246  171F  085C               	movf	??___fladd+2,w
  8247  1720  00D4               	movwf	___fladd@b+2
  8248  1721  085B               	movf	??___fladd+1,w
  8249  1722  00D3               	movwf	___fladd@b+1
  8250  1723  085A               	movf	??___fladd,w
  8251  1724  00D2               	movwf	___fladd@b
  8252  1725                     l2437:	
  8253  1725  3080               	movlw	128
  8254  1726  00DA               	movwf	??___fladd
  8255  1727  085A               	movf	??___fladd,w
  8256  1728  06E2               	xorwf	___fladd@signs,f
  8257  1729  09E5               	comf	___fladd@grs,f
  8258  172A  0AE5               	incf	___fladd@grs,f
  8259  172B                     l2439:	
  8260  172B  0865               	movf	___fladd@grs,w
  8261  172C  1D03               	btfss	3,2
  8262  172D  2F2F               	goto	u3601
  8263  172E  2F30               	goto	u3600
  8264  172F                     u3601:	
  8265  172F  2F4D               	goto	l627
  8266  1730                     u3600:	
  8267  1730                     l2441:	
  8268  1730  3001               	movlw	1
  8269  1731  07D2               	addwf	___fladd@b,f
  8270  1732  3000               	movlw	0
  8271  1733  1803               	skipnc
  8272  1734  3001               	movlw	1
  8273  1735  07D3               	addwf	___fladd@b+1,f
  8274  1736  3000               	movlw	0
  8275  1737  1803               	skipnc
  8276  1738  3001               	movlw	1
  8277  1739  07D4               	addwf	___fladd@b+2,f
  8278  173A  3000               	movlw	0
  8279  173B  1803               	skipnc
  8280  173C  3001               	movlw	1
  8281  173D  07D5               	addwf	___fladd@b+3,f
  8282  173E  2F4D               	goto	l627
  8283  173F                     l2443:	
  8284  173F  0856               	movf	___fladd@a,w
  8285  1740  02D2               	subwf	___fladd@b,f
  8286  1741  0857               	movf	___fladd@a+1,w
  8287  1742  1C03               	skipc
  8288  1743  0F57               	incfsz	___fladd@a+1,w
  8289  1744  02D3               	subwf	___fladd@b+1,f
  8290  1745  0858               	movf	___fladd@a+2,w
  8291  1746  1C03               	skipc
  8292  1747  0F58               	incfsz	___fladd@a+2,w
  8293  1748  02D4               	subwf	___fladd@b+2,f
  8294  1749  0859               	movf	___fladd@a+3,w
  8295  174A  1C03               	skipc
  8296  174B  0F59               	incfsz	___fladd@a+3,w
  8297  174C  02D5               	subwf	___fladd@b+3,f
  8298  174D                     l627:	
  8299  174D  0855               	movf	___fladd@b+3,w
  8300  174E  0454               	iorwf	___fladd@b+2,w
  8301  174F  0453               	iorwf	___fladd@b+1,w
  8302  1750  0452               	iorwf	___fladd@b,w
  8303  1751  1D03               	skipz
  8304  1752  2F54               	goto	u3611
  8305  1753  2F55               	goto	u3610
  8306  1754                     u3611:	
  8307  1754  2F81               	goto	l2465
  8308  1755                     u3610:	
  8309  1755                     l2445:	
  8310  1755  0865               	movf	___fladd@grs,w
  8311  1756  1D03               	btfss	3,2
  8312  1757  2F59               	goto	u3621
  8313  1758  2F5A               	goto	u3620
  8314  1759                     u3621:	
  8315  1759  2F81               	goto	l2465
  8316  175A                     u3620:	
  8317  175A                     l2447:	
  8318  175A  3000               	movlw	0
  8319  175B  00D5               	movwf	?___fladd+3
  8320  175C  3000               	movlw	0
  8321  175D  00D4               	movwf	?___fladd+2
  8322  175E  3000               	movlw	0
  8323  175F  00D3               	movwf	?___fladd+1
  8324  1760  3000               	movlw	0
  8325  1761  00D2               	movwf	?___fladd
  8326  1762  2FFF               	goto	l619
  8327  1763                     l2451:	
  8328  1763  3001               	movlw	1
  8329  1764  00DA               	movwf	??___fladd
  8330  1765                     u3635:	
  8331  1765  1003               	clrc
  8332  1766  0DD2               	rlf	___fladd@b,f
  8333  1767  0DD3               	rlf	___fladd@b+1,f
  8334  1768  0DD4               	rlf	___fladd@b+2,f
  8335  1769  0DD5               	rlf	___fladd@b+3,f
  8336  176A  0BDA               	decfsz	??___fladd,f
  8337  176B  2F65               	goto	u3635
  8338  176C                     l2453:	
  8339  176C  1FE5               	btfss	___fladd@grs,7
  8340  176D  2F6F               	goto	u3641
  8341  176E  2F70               	goto	u3640
  8342  176F                     u3641:	
  8343  176F  2F71               	goto	l631
  8344  1770                     u3640:	
  8345  1770                     l2455:	
  8346  1770  1452               	bsf	___fladd@b,0
  8347  1771                     l631:	
  8348  1771  1C65               	btfss	___fladd@grs,0
  8349  1772  2F74               	goto	u3651
  8350  1773  2F75               	goto	u3650
  8351  1774                     u3651:	
  8352  1774  2F78               	goto	l2459
  8353  1775                     u3650:	
  8354  1775                     l2457:	
  8355  1775  1403               	setc
  8356  1776  0DE5               	rlf	___fladd@grs,f
  8357  1777  2F7A               	goto	l2461
  8358  1778                     l2459:	
  8359  1778  1003               	clrc
  8360  1779  0DE5               	rlf	___fladd@grs,f
  8361  177A                     l2461:	
  8362  177A  0864               	movf	___fladd@bexp,w
  8363  177B  1903               	btfsc	3,2
  8364  177C  2F7E               	goto	u3661
  8365  177D  2F7F               	goto	u3660
  8366  177E                     u3661:	
  8367  177E  2F81               	goto	l2465
  8368  177F                     u3660:	
  8369  177F                     l2463:	
  8370  177F  3001               	movlw	1
  8371  1780  02E4               	subwf	___fladd@bexp,f
  8372  1781                     l2465:	
  8373  1781  1FD4               	btfss	___fladd@b+2,7
  8374  1782  2F84               	goto	u3671
  8375  1783  2F85               	goto	u3670
  8376  1784                     u3671:	
  8377  1784  2F63               	goto	l2451
  8378  1785                     u3670:	
  8379  1785                     l2467:	
  8380  1785  01E3               	clrf	___fladd@aexp
  8381  1786                     l2469:	
  8382  1786  1FE5               	btfss	___fladd@grs,7
  8383  1787  2F89               	goto	u3681
  8384  1788  2F8A               	goto	u3680
  8385  1789                     u3681:	
  8386  1789  2F98               	goto	l2477
  8387  178A                     u3680:	
  8388  178A                     l2471:	
  8389  178A  0865               	movf	___fladd@grs,w
  8390  178B  397F               	andlw	127
  8391  178C  1903               	btfsc	3,2
  8392  178D  2F8F               	goto	u3691
  8393  178E  2F90               	goto	u3690
  8394  178F                     u3691:	
  8395  178F  2F93               	goto	l637
  8396  1790                     u3690:	
  8397  1790                     l2473:	
  8398  1790  01E3               	clrf	___fladd@aexp
  8399  1791  0AE3               	incf	___fladd@aexp,f
  8400  1792  2F98               	goto	l2477
  8401  1793                     l637:	
  8402  1793  1C52               	btfss	___fladd@b,0
  8403  1794  2F96               	goto	u3701
  8404  1795  2F97               	goto	u3700
  8405  1796                     u3701:	
  8406  1796  2F98               	goto	l2477
  8407  1797                     u3700:	
  8408  1797  2F90               	goto	l2473
  8409  1798                     l2477:	
  8410  1798  0863               	movf	___fladd@aexp,w
  8411  1799  1903               	btfsc	3,2
  8412  179A  2F9C               	goto	u3711
  8413  179B  2F9D               	goto	u3710
  8414  179C                     u3711:	
  8415  179C  2FD1               	goto	l640
  8416  179D                     u3710:	
  8417  179D                     l2479:	
  8418  179D  3001               	movlw	1
  8419  179E  07D2               	addwf	___fladd@b,f
  8420  179F  3000               	movlw	0
  8421  17A0  1803               	skipnc
  8422  17A1  3001               	movlw	1
  8423  17A2  07D3               	addwf	___fladd@b+1,f
  8424  17A3  3000               	movlw	0
  8425  17A4  1803               	skipnc
  8426  17A5  3001               	movlw	1
  8427  17A6  07D4               	addwf	___fladd@b+2,f
  8428  17A7  3000               	movlw	0
  8429  17A8  1803               	skipnc
  8430  17A9  3001               	movlw	1
  8431  17AA  07D5               	addwf	___fladd@b+3,f
  8432  17AB                     l2481:	
  8433  17AB  1C55               	btfss	___fladd@b+3,0
  8434  17AC  2FAE               	goto	u3721
  8435  17AD  2FAF               	goto	u3720
  8436  17AE                     u3721:	
  8437  17AE  2FD1               	goto	l640
  8438  17AF                     u3720:	
  8439  17AF                     l2483:	
  8440  17AF  0852               	movf	___fladd@b,w
  8441  17B0  00DA               	movwf	??___fladd
  8442  17B1  0853               	movf	___fladd@b+1,w
  8443  17B2  00DB               	movwf	??___fladd+1
  8444  17B3  0854               	movf	___fladd@b+2,w
  8445  17B4  00DC               	movwf	??___fladd+2
  8446  17B5  0855               	movf	___fladd@b+3,w
  8447  17B6  00DD               	movwf	??___fladd+3
  8448  17B7  3001               	movlw	1
  8449  17B8  00DE               	movwf	??___fladd+4
  8450  17B9                     u3735:	
  8451  17B9  0D5D               	rlf	??___fladd+3,w
  8452  17BA  0CDD               	rrf	??___fladd+3,f
  8453  17BB  0CDC               	rrf	??___fladd+2,f
  8454  17BC  0CDB               	rrf	??___fladd+1,f
  8455  17BD  0CDA               	rrf	??___fladd,f
  8456  17BE                     u3730:	
  8457  17BE  0BDE               	decfsz	??___fladd+4,f
  8458  17BF  2FB9               	goto	u3735
  8459  17C0  085D               	movf	??___fladd+3,w
  8460  17C1  00D5               	movwf	___fladd@b+3
  8461  17C2  085C               	movf	??___fladd+2,w
  8462  17C3  00D4               	movwf	___fladd@b+2
  8463  17C4  085B               	movf	??___fladd+1,w
  8464  17C5  00D3               	movwf	___fladd@b+1
  8465  17C6  085A               	movf	??___fladd,w
  8466  17C7  00D2               	movwf	___fladd@b
  8467  17C8  0A64               	incf	___fladd@bexp,w
  8468  17C9  1903               	btfsc	3,2
  8469  17CA  2FCC               	goto	u3741
  8470  17CB  2FCD               	goto	u3740
  8471  17CC                     u3741:	
  8472  17CC  2FD1               	goto	l640
  8473  17CD                     u3740:	
  8474  17CD                     l2485:	
  8475  17CD  3001               	movlw	1
  8476  17CE  00DA               	movwf	??___fladd
  8477  17CF  085A               	movf	??___fladd,w
  8478  17D0  07E4               	addwf	___fladd@bexp,f
  8479  17D1                     l640:	
  8480  17D1  0A64               	incf	___fladd@bexp,w
  8481  17D2  1903               	btfsc	3,2
  8482  17D3  2FD5               	goto	u3751
  8483  17D4  2FD6               	goto	u3750
  8484  17D5                     u3751:	
  8485  17D5  2FDB               	goto	l2489
  8486  17D6                     u3750:	
  8487  17D6                     l2487:	
  8488  17D6  0864               	movf	___fladd@bexp,w
  8489  17D7  1D03               	btfss	3,2
  8490  17D8  2FDA               	goto	u3761
  8491  17D9  2FDB               	goto	u3760
  8492  17DA                     u3761:	
  8493  17DA  2FE9               	goto	l2495
  8494  17DB                     u3760:	
  8495  17DB                     l2489:	
  8496  17DB  3000               	movlw	0
  8497  17DC  00D5               	movwf	___fladd@b+3
  8498  17DD  3000               	movlw	0
  8499  17DE  00D4               	movwf	___fladd@b+2
  8500  17DF  3000               	movlw	0
  8501  17E0  00D3               	movwf	___fladd@b+1
  8502  17E1  3000               	movlw	0
  8503  17E2  00D2               	movwf	___fladd@b
  8504  17E3                     l2491:	
  8505  17E3  0864               	movf	___fladd@bexp,w
  8506  17E4  1D03               	btfss	3,2
  8507  17E5  2FE7               	goto	u3771
  8508  17E6  2FE8               	goto	u3770
  8509  17E7                     u3771:	
  8510  17E7  2FE9               	goto	l2495
  8511  17E8                     u3770:	
  8512  17E8                     l2493:	
  8513  17E8  01E2               	clrf	___fladd@signs
  8514  17E9                     l2495:	
  8515  17E9  1C64               	btfss	___fladd@bexp,0
  8516  17EA  2FEC               	goto	u3781
  8517  17EB  2FED               	goto	u3780
  8518  17EC                     u3781:	
  8519  17EC  2FEF               	goto	l2499
  8520  17ED                     u3780:	
  8521  17ED                     l2497:	
  8522  17ED  17D4               	bsf	___fladd@b+2,7
  8523  17EE  2FF3               	goto	l648
  8524  17EF                     l2499:	
  8525  17EF  307F               	movlw	127
  8526  17F0  00DA               	movwf	??___fladd
  8527  17F1  085A               	movf	??___fladd,w
  8528  17F2  05D4               	andwf	___fladd@b+2,f
  8529  17F3                     l648:	
  8530  17F3  0864               	movf	___fladd@bexp,w
  8531  17F4  00DA               	movwf	??___fladd
  8532  17F5  1003               	clrc
  8533  17F6  0C5A               	rrf	??___fladd,w
  8534  17F7  00DB               	movwf	??___fladd+1
  8535  17F8  085B               	movf	??___fladd+1,w
  8536  17F9  00D5               	movwf	___fladd@b+3
  8537  17FA                     l2501:	
  8538  17FA  1FE2               	btfss	___fladd@signs,7
  8539  17FB  2FFD               	goto	u3791
  8540  17FC  2FFE               	goto	u3790
  8541  17FD                     u3791:	
  8542  17FD  2FFF               	goto	l649
  8543  17FE                     u3790:	
  8544  17FE                     l2503:	
  8545  17FE  17D5               	bsf	___fladd@b+3,7
  8546  17FF                     l649:	
  8547  17FF                     l619:	
  8548  17FF  0008               	return
  8549  1800                     __end_of___fladd:	
  8550                           
  8551                           	psect	text21
  8552  10B9                     __ptext21:	
  8553 ;; *************** function ___flneg *****************
  8554 ;; Defined at:
  8555 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  f1              4    0[COMMON] unsigned char 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  4    0[COMMON] unsigned char 
  8562 ;; Registers used:
  8563 ;;		wreg
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8569 ;;      Params:         4       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0
  8572 ;;      Totals:         4       0       0       0       0
  8573 ;;Total ram usage:        4 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_sprintf
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function ___flneg
  8584  10B9                     ___flneg:	
  8585  10B9                     l2901:	
  8586                           ;incstack = 0
  8587                           ; Regs used in ___flneg: [wreg]
  8588                           
  8589  10B9  0873               	movf	___flneg@f1+3,w
  8590  10BA  0472               	iorwf	___flneg@f1+2,w
  8591  10BB  0471               	iorwf	___flneg@f1+1,w
  8592  10BC  0470               	iorwf	___flneg@f1,w
  8593  10BD  1903               	skipnz
  8594  10BE  28C0               	goto	u4901
  8595  10BF  28C1               	goto	u4900
  8596  10C0                     u4901:	
  8597  10C0  28C3               	goto	l2905
  8598  10C1                     u4900:	
  8599  10C1                     l2903:	
  8600  10C1  3080               	movlw	128
  8601  10C2  06F3               	xorwf	___flneg@f1+3,f
  8602  10C3                     l2905:	
  8603  10C3                     l478:	
  8604  10C3  0008               	return
  8605  10C4                     __end_of___flneg:	
  8606                           
  8607                           	psect	text22
  8608  10C4                     __ptext22:	
  8609 ;; *************** function ___flge *****************
  8610 ;; Defined at:
  8611 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  ff1             4    0[COMMON] unsigned char 
  8614 ;;  ff2             4    4[COMMON] unsigned char 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;		None               void
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8626 ;;      Params:         8       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0
  8628 ;;      Temps:          4       0       0       0       0
  8629 ;;      Totals:        12       0       0       0       0
  8630 ;;Total ram usage:       12 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		_sprintf
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function ___flge
  8641  10C4                     ___flge:	
  8642  10C4                     l2881:	
  8643                           ;incstack = 0
  8644                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8645                           
  8646  10C4  3000               	movlw	0
  8647  10C5  0570               	andwf	___flge@ff1,w
  8648  10C6  00F8               	movwf	??___flge
  8649  10C7  3000               	movlw	0
  8650  10C8  0571               	andwf	___flge@ff1+1,w
  8651  10C9  00F9               	movwf	??___flge+1
  8652  10CA  3080               	movlw	128
  8653  10CB  0572               	andwf	___flge@ff1+2,w
  8654  10CC  00FA               	movwf	??___flge+2
  8655  10CD  307F               	movlw	127
  8656  10CE  0573               	andwf	___flge@ff1+3,w
  8657  10CF  00FB               	movwf	??___flge+3
  8658  10D0  087B               	movf	??___flge+3,w
  8659  10D1  047A               	iorwf	??___flge+2,w
  8660  10D2  0479               	iorwf	??___flge+1,w
  8661  10D3  0478               	iorwf	??___flge,w
  8662  10D4  1D03               	skipz
  8663  10D5  28D7               	goto	u4831
  8664  10D6  28D8               	goto	u4830
  8665  10D7                     u4831:	
  8666  10D7  28E0               	goto	l470
  8667  10D8                     u4830:	
  8668  10D8                     l2883:	
  8669  10D8  3000               	movlw	0
  8670  10D9  00F3               	movwf	___flge@ff1+3
  8671  10DA  3000               	movlw	0
  8672  10DB  00F2               	movwf	___flge@ff1+2
  8673  10DC  3000               	movlw	0
  8674  10DD  00F1               	movwf	___flge@ff1+1
  8675  10DE  3000               	movlw	0
  8676  10DF  00F0               	movwf	___flge@ff1
  8677  10E0                     l470:	
  8678  10E0  3000               	movlw	0
  8679  10E1  0574               	andwf	___flge@ff2,w
  8680  10E2  00F8               	movwf	??___flge
  8681  10E3  3000               	movlw	0
  8682  10E4  0575               	andwf	___flge@ff2+1,w
  8683  10E5  00F9               	movwf	??___flge+1
  8684  10E6  3080               	movlw	128
  8685  10E7  0576               	andwf	___flge@ff2+2,w
  8686  10E8  00FA               	movwf	??___flge+2
  8687  10E9  307F               	movlw	127
  8688  10EA  0577               	andwf	___flge@ff2+3,w
  8689  10EB  00FB               	movwf	??___flge+3
  8690  10EC  087B               	movf	??___flge+3,w
  8691  10ED  047A               	iorwf	??___flge+2,w
  8692  10EE  0479               	iorwf	??___flge+1,w
  8693  10EF  0478               	iorwf	??___flge,w
  8694  10F0  1D03               	skipz
  8695  10F1  28F3               	goto	u4841
  8696  10F2  28F4               	goto	u4840
  8697  10F3                     u4841:	
  8698  10F3  28FC               	goto	l2887
  8699  10F4                     u4840:	
  8700  10F4                     l2885:	
  8701  10F4  3000               	movlw	0
  8702  10F5  00F7               	movwf	___flge@ff2+3
  8703  10F6  3000               	movlw	0
  8704  10F7  00F6               	movwf	___flge@ff2+2
  8705  10F8  3000               	movlw	0
  8706  10F9  00F5               	movwf	___flge@ff2+1
  8707  10FA  3000               	movlw	0
  8708  10FB  00F4               	movwf	___flge@ff2
  8709  10FC                     l2887:	
  8710  10FC  1FF3               	btfss	___flge@ff1+3,7
  8711  10FD  28FF               	goto	u4851
  8712  10FE  2900               	goto	u4850
  8713  10FF                     u4851:	
  8714  10FF  2924               	goto	l2891
  8715  1100                     u4850:	
  8716  1100                     l2889:	
  8717  1100  3000               	movlw	0
  8718  1101  00F8               	movwf	??___flge
  8719  1102  3000               	movlw	0
  8720  1103  00F9               	movwf	??___flge+1
  8721  1104  3000               	movlw	0
  8722  1105  00FA               	movwf	??___flge+2
  8723  1106  3080               	movlw	128
  8724  1107  00FB               	movwf	??___flge+3
  8725  1108  0870               	movf	___flge@ff1,w
  8726  1109  02F8               	subwf	??___flge,f
  8727  110A  0871               	movf	___flge@ff1+1,w
  8728  110B  1C03               	skipc
  8729  110C  0F71               	incfsz	___flge@ff1+1,w
  8730  110D  290F               	goto	u4861
  8731  110E  2910               	goto	u4862
  8732  110F                     u4861:	
  8733  110F  02F9               	subwf	??___flge+1,f
  8734  1110                     u4862:	
  8735  1110  0872               	movf	___flge@ff1+2,w
  8736  1111  1C03               	skipc
  8737  1112  0F72               	incfsz	___flge@ff1+2,w
  8738  1113  2915               	goto	u4863
  8739  1114  2916               	goto	u4864
  8740  1115                     u4863:	
  8741  1115  02FA               	subwf	??___flge+2,f
  8742  1116                     u4864:	
  8743  1116  0873               	movf	___flge@ff1+3,w
  8744  1117  1C03               	skipc
  8745  1118  0F73               	incfsz	___flge@ff1+3,w
  8746  1119  291B               	goto	u4865
  8747  111A  291C               	goto	u4866
  8748  111B                     u4865:	
  8749  111B  02FB               	subwf	??___flge+3,f
  8750  111C                     u4866:	
  8751  111C  087B               	movf	??___flge+3,w
  8752  111D  00F3               	movwf	___flge@ff1+3
  8753  111E  087A               	movf	??___flge+2,w
  8754  111F  00F2               	movwf	___flge@ff1+2
  8755  1120  0879               	movf	??___flge+1,w
  8756  1121  00F1               	movwf	___flge@ff1+1
  8757  1122  0878               	movf	??___flge,w
  8758  1123  00F0               	movwf	___flge@ff1
  8759  1124                     l2891:	
  8760  1124  1FF7               	btfss	___flge@ff2+3,7
  8761  1125  2927               	goto	u4871
  8762  1126  2928               	goto	u4870
  8763  1127                     u4871:	
  8764  1127  294C               	goto	l473
  8765  1128                     u4870:	
  8766  1128                     l2893:	
  8767  1128  3000               	movlw	0
  8768  1129  00F8               	movwf	??___flge
  8769  112A  3000               	movlw	0
  8770  112B  00F9               	movwf	??___flge+1
  8771  112C  3000               	movlw	0
  8772  112D  00FA               	movwf	??___flge+2
  8773  112E  3080               	movlw	128
  8774  112F  00FB               	movwf	??___flge+3
  8775  1130  0874               	movf	___flge@ff2,w
  8776  1131  02F8               	subwf	??___flge,f
  8777  1132  0875               	movf	___flge@ff2+1,w
  8778  1133  1C03               	skipc
  8779  1134  0F75               	incfsz	___flge@ff2+1,w
  8780  1135  2937               	goto	u4881
  8781  1136  2938               	goto	u4882
  8782  1137                     u4881:	
  8783  1137  02F9               	subwf	??___flge+1,f
  8784  1138                     u4882:	
  8785  1138  0876               	movf	___flge@ff2+2,w
  8786  1139  1C03               	skipc
  8787  113A  0F76               	incfsz	___flge@ff2+2,w
  8788  113B  293D               	goto	u4883
  8789  113C  293E               	goto	u4884
  8790  113D                     u4883:	
  8791  113D  02FA               	subwf	??___flge+2,f
  8792  113E                     u4884:	
  8793  113E  0877               	movf	___flge@ff2+3,w
  8794  113F  1C03               	skipc
  8795  1140  0F77               	incfsz	___flge@ff2+3,w
  8796  1141  2943               	goto	u4885
  8797  1142  2944               	goto	u4886
  8798  1143                     u4885:	
  8799  1143  02FB               	subwf	??___flge+3,f
  8800  1144                     u4886:	
  8801  1144  087B               	movf	??___flge+3,w
  8802  1145  00F7               	movwf	___flge@ff2+3
  8803  1146  087A               	movf	??___flge+2,w
  8804  1147  00F6               	movwf	___flge@ff2+2
  8805  1148  0879               	movf	??___flge+1,w
  8806  1149  00F5               	movwf	___flge@ff2+1
  8807  114A  0878               	movf	??___flge,w
  8808  114B  00F4               	movwf	___flge@ff2
  8809  114C                     l473:	
  8810  114C  3080               	movlw	128
  8811  114D  06F3               	xorwf	___flge@ff1+3,f
  8812  114E  3080               	movlw	128
  8813  114F  06F7               	xorwf	___flge@ff2+3,f
  8814  1150  0877               	movf	___flge@ff2+3,w
  8815  1151  0273               	subwf	___flge@ff1+3,w
  8816  1152  1D03               	skipz
  8817  1153  295E               	goto	u4895
  8818  1154  0876               	movf	___flge@ff2+2,w
  8819  1155  0272               	subwf	___flge@ff1+2,w
  8820  1156  1D03               	skipz
  8821  1157  295E               	goto	u4895
  8822  1158  0875               	movf	___flge@ff2+1,w
  8823  1159  0271               	subwf	___flge@ff1+1,w
  8824  115A  1D03               	skipz
  8825  115B  295E               	goto	u4895
  8826  115C  0874               	movf	___flge@ff2,w
  8827  115D  0270               	subwf	___flge@ff1,w
  8828  115E                     u4895:	
  8829  115E  1803               	skipnc
  8830  115F  2961               	goto	u4891
  8831  1160  2962               	goto	u4890
  8832  1161                     u4891:	
  8833  1161  2964               	goto	l2897
  8834  1162                     u4890:	
  8835  1162                     l2895:	
  8836  1162  1003               	clrc
  8837  1163  2965               	goto	l474
  8838  1164                     l2897:	
  8839  1164  1403               	setc
  8840  1165                     l474:	
  8841  1165  0008               	return
  8842  1166                     __end_of___flge:	
  8843                           
  8844                           	psect	text23
  8845  1DC1                     __ptext23:	
  8846 ;; *************** function ___fleq *****************
  8847 ;; Defined at:
  8848 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  ff1             4    0[COMMON] unsigned char 
  8851 ;;  ff2             4    4[COMMON] unsigned char 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;		None               void
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8863 ;;      Params:         8       0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0
  8865 ;;      Temps:          4       0       0       0       0
  8866 ;;      Totals:        12       0       0       0       0
  8867 ;;Total ram usage:       12 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_sprintf
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function ___fleq
  8878  1DC1                     ___fleq:	
  8879  1DC1                     l2869:	
  8880                           ;incstack = 0
  8881                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8882                           
  8883  1DC1  3000               	movlw	0
  8884  1DC2  0570               	andwf	___fleq@ff1,w
  8885  1DC3  00F8               	movwf	??___fleq
  8886  1DC4  3000               	movlw	0
  8887  1DC5  0571               	andwf	___fleq@ff1+1,w
  8888  1DC6  00F9               	movwf	??___fleq+1
  8889  1DC7  3080               	movlw	128
  8890  1DC8  0572               	andwf	___fleq@ff1+2,w
  8891  1DC9  00FA               	movwf	??___fleq+2
  8892  1DCA  307F               	movlw	127
  8893  1DCB  0573               	andwf	___fleq@ff1+3,w
  8894  1DCC  00FB               	movwf	??___fleq+3
  8895  1DCD  087B               	movf	??___fleq+3,w
  8896  1DCE  047A               	iorwf	??___fleq+2,w
  8897  1DCF  0479               	iorwf	??___fleq+1,w
  8898  1DD0  0478               	iorwf	??___fleq,w
  8899  1DD1  1D03               	skipz
  8900  1DD2  2DD4               	goto	u4801
  8901  1DD3  2DD5               	goto	u4800
  8902  1DD4                     u4801:	
  8903  1DD4  2DDD               	goto	l465
  8904  1DD5                     u4800:	
  8905  1DD5                     l2871:	
  8906  1DD5  3000               	movlw	0
  8907  1DD6  00F3               	movwf	___fleq@ff1+3
  8908  1DD7  3000               	movlw	0
  8909  1DD8  00F2               	movwf	___fleq@ff1+2
  8910  1DD9  3000               	movlw	0
  8911  1DDA  00F1               	movwf	___fleq@ff1+1
  8912  1DDB  3000               	movlw	0
  8913  1DDC  00F0               	movwf	___fleq@ff1
  8914  1DDD                     l465:	
  8915  1DDD  3000               	movlw	0
  8916  1DDE  0574               	andwf	___fleq@ff2,w
  8917  1DDF  00F8               	movwf	??___fleq
  8918  1DE0  3000               	movlw	0
  8919  1DE1  0575               	andwf	___fleq@ff2+1,w
  8920  1DE2  00F9               	movwf	??___fleq+1
  8921  1DE3  3080               	movlw	128
  8922  1DE4  0576               	andwf	___fleq@ff2+2,w
  8923  1DE5  00FA               	movwf	??___fleq+2
  8924  1DE6  307F               	movlw	127
  8925  1DE7  0577               	andwf	___fleq@ff2+3,w
  8926  1DE8  00FB               	movwf	??___fleq+3
  8927  1DE9  087B               	movf	??___fleq+3,w
  8928  1DEA  047A               	iorwf	??___fleq+2,w
  8929  1DEB  0479               	iorwf	??___fleq+1,w
  8930  1DEC  0478               	iorwf	??___fleq,w
  8931  1DED  1D03               	skipz
  8932  1DEE  2DF0               	goto	u4811
  8933  1DEF  2DF1               	goto	u4810
  8934  1DF0                     u4811:	
  8935  1DF0  2DF9               	goto	l466
  8936  1DF1                     u4810:	
  8937  1DF1                     l2873:	
  8938  1DF1  3000               	movlw	0
  8939  1DF2  00F7               	movwf	___fleq@ff2+3
  8940  1DF3  3000               	movlw	0
  8941  1DF4  00F6               	movwf	___fleq@ff2+2
  8942  1DF5  3000               	movlw	0
  8943  1DF6  00F5               	movwf	___fleq@ff2+1
  8944  1DF7  3000               	movlw	0
  8945  1DF8  00F4               	movwf	___fleq@ff2
  8946  1DF9                     l466:	
  8947  1DF9  0877               	movf	___fleq@ff2+3,w
  8948  1DFA  0673               	xorwf	___fleq@ff1+3,w
  8949  1DFB  1D03               	skipz
  8950  1DFC  2E07               	goto	u4825
  8951  1DFD  0876               	movf	___fleq@ff2+2,w
  8952  1DFE  0672               	xorwf	___fleq@ff1+2,w
  8953  1DFF  1D03               	skipz
  8954  1E00  2E07               	goto	u4825
  8955  1E01  0875               	movf	___fleq@ff2+1,w
  8956  1E02  0671               	xorwf	___fleq@ff1+1,w
  8957  1E03  1D03               	skipz
  8958  1E04  2E07               	goto	u4825
  8959  1E05  0874               	movf	___fleq@ff2,w
  8960  1E06  0670               	xorwf	___fleq@ff1,w
  8961  1E07                     u4825:	
  8962  1E07  1903               	skipnz
  8963  1E08  2E0A               	goto	u4821
  8964  1E09  2E0B               	goto	u4820
  8965  1E0A                     u4821:	
  8966  1E0A  2E0D               	goto	l2877
  8967  1E0B                     u4820:	
  8968  1E0B                     l2875:	
  8969  1E0B  1003               	clrc
  8970  1E0C  2E0E               	goto	l467
  8971  1E0D                     l2877:	
  8972  1E0D  1403               	setc
  8973  1E0E                     l467:	
  8974  1E0E  0008               	return
  8975  1E0F                     __end_of___fleq:	
  8976                           
  8977                           	psect	text24
  8978  139B                     __ptext24:	
  8979 ;; *************** function ___fldiv *****************
  8980 ;; Defined at:
  8981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  a               4   30[BANK0 ] unsigned char 
  8984 ;;  b               4   34[BANK0 ] unsigned char 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  grs             4   50[BANK0 ] unsigned long 
  8987 ;;  rem             4   43[BANK0 ] unsigned long 
  8988 ;;  new_exp         2   48[BANK0 ] int 
  8989 ;;  aexp            1   55[BANK0 ] unsigned char 
  8990 ;;  bexp            1   54[BANK0 ] unsigned char 
  8991 ;;  sign            1   47[BANK0 ] unsigned char 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  4   30[BANK0 ] unsigned char 
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0, btemp+1
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9001 ;;      Params:         0       8       0       0       0
  9002 ;;      Locals:         0      13       0       0       0
  9003 ;;      Temps:          0       5       0       0       0
  9004 ;;      Totals:         0      26       0       0       0
  9005 ;;Total ram usage:       26 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_ADC_Read
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function ___fldiv
  9016  139B                     ___fldiv:	
  9017  139B                     l3217:	
  9018                           ;incstack = 0
  9019                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9020                           
  9021  139B  1283               	bcf	3,5	;RP0=0, select bank0
  9022  139C  1303               	bcf	3,6	;RP1=0, select bank0
  9023  139D  0845               	movf	___fldiv@b+3,w
  9024  139E  3980               	andlw	128
  9025  139F  00C6               	movwf	??___fldiv
  9026  13A0  0846               	movf	??___fldiv,w
  9027  13A1  00CF               	movwf	___fldiv@sign
  9028  13A2                     l3219:	
  9029  13A2  0845               	movf	___fldiv@b+3,w
  9030  13A3  00C6               	movwf	??___fldiv
  9031  13A4  0746               	addwf	??___fldiv,w
  9032  13A5  00C7               	movwf	??___fldiv+1
  9033  13A6  0847               	movf	??___fldiv+1,w
  9034  13A7  00D6               	movwf	___fldiv@bexp
  9035  13A8                     l3221:	
  9036  13A8  1FC4               	btfss	___fldiv@b+2,7
  9037  13A9  2BAB               	goto	u5551
  9038  13AA  2BAC               	goto	u5550
  9039  13AB                     u5551:	
  9040  13AB  2BAD               	goto	l3225
  9041  13AC                     u5550:	
  9042  13AC                     l3223:	
  9043  13AC  1456               	bsf	___fldiv@bexp,0
  9044  13AD                     l3225:	
  9045  13AD  0856               	movf	___fldiv@bexp,w
  9046  13AE  1903               	btfsc	3,2
  9047  13AF  2BB1               	goto	u5561
  9048  13B0  2BB2               	goto	u5560
  9049  13B1                     u5561:	
  9050  13B1  2BC2               	goto	l3235
  9051  13B2                     u5560:	
  9052  13B2                     l3227:	
  9053  13B2  0A56               	incf	___fldiv@bexp,w
  9054  13B3  1D03               	btfss	3,2
  9055  13B4  2BB6               	goto	u5571
  9056  13B5  2BB7               	goto	u5570
  9057  13B6                     u5571:	
  9058  13B6  2BBF               	goto	l3231
  9059  13B7                     u5570:	
  9060  13B7                     l3229:	
  9061  13B7  3000               	movlw	0
  9062  13B8  00C5               	movwf	___fldiv@b+3
  9063  13B9  3000               	movlw	0
  9064  13BA  00C4               	movwf	___fldiv@b+2
  9065  13BB  3000               	movlw	0
  9066  13BC  00C3               	movwf	___fldiv@b+1
  9067  13BD  3000               	movlw	0
  9068  13BE  00C2               	movwf	___fldiv@b
  9069  13BF                     l3231:	
  9070  13BF  17C4               	bsf	___fldiv@b+2,7
  9071  13C0                     l3233:	
  9072  13C0  01C5               	clrf	___fldiv@b+3
  9073  13C1  2BCA               	goto	l3237
  9074  13C2                     l3235:	
  9075  13C2  3000               	movlw	0
  9076  13C3  00C5               	movwf	___fldiv@b+3
  9077  13C4  3000               	movlw	0
  9078  13C5  00C4               	movwf	___fldiv@b+2
  9079  13C6  3000               	movlw	0
  9080  13C7  00C3               	movwf	___fldiv@b+1
  9081  13C8  3000               	movlw	0
  9082  13C9  00C2               	movwf	___fldiv@b
  9083  13CA                     l3237:	
  9084  13CA  0841               	movf	___fldiv@a+3,w
  9085  13CB  3980               	andlw	128
  9086  13CC  00C6               	movwf	??___fldiv
  9087  13CD  0846               	movf	??___fldiv,w
  9088  13CE  06CF               	xorwf	___fldiv@sign,f
  9089  13CF                     l3239:	
  9090  13CF  0841               	movf	___fldiv@a+3,w
  9091  13D0  00C6               	movwf	??___fldiv
  9092  13D1  0746               	addwf	??___fldiv,w
  9093  13D2  00C7               	movwf	??___fldiv+1
  9094  13D3  0847               	movf	??___fldiv+1,w
  9095  13D4  00D7               	movwf	___fldiv@aexp
  9096  13D5                     l3241:	
  9097  13D5  1FC0               	btfss	___fldiv@a+2,7
  9098  13D6  2BD8               	goto	u5581
  9099  13D7  2BD9               	goto	u5580
  9100  13D8                     u5581:	
  9101  13D8  2BDA               	goto	l3245
  9102  13D9                     u5580:	
  9103  13D9                     l3243:	
  9104  13D9  1457               	bsf	___fldiv@aexp,0
  9105  13DA                     l3245:	
  9106  13DA  0857               	movf	___fldiv@aexp,w
  9107  13DB  1903               	btfsc	3,2
  9108  13DC  2BDE               	goto	u5591
  9109  13DD  2BDF               	goto	u5590
  9110  13DE                     u5591:	
  9111  13DE  2BEF               	goto	l3255
  9112  13DF                     u5590:	
  9113  13DF                     l3247:	
  9114  13DF  0A57               	incf	___fldiv@aexp,w
  9115  13E0  1D03               	btfss	3,2
  9116  13E1  2BE3               	goto	u5601
  9117  13E2  2BE4               	goto	u5600
  9118  13E3                     u5601:	
  9119  13E3  2BEC               	goto	l3251
  9120  13E4                     u5600:	
  9121  13E4                     l3249:	
  9122  13E4  3000               	movlw	0
  9123  13E5  00C1               	movwf	___fldiv@a+3
  9124  13E6  3000               	movlw	0
  9125  13E7  00C0               	movwf	___fldiv@a+2
  9126  13E8  3000               	movlw	0
  9127  13E9  00BF               	movwf	___fldiv@a+1
  9128  13EA  3000               	movlw	0
  9129  13EB  00BE               	movwf	___fldiv@a
  9130  13EC                     l3251:	
  9131  13EC  17C0               	bsf	___fldiv@a+2,7
  9132  13ED                     l3253:	
  9133  13ED  01C1               	clrf	___fldiv@a+3
  9134  13EE  2BF7               	goto	l662
  9135  13EF                     l3255:	
  9136  13EF  3000               	movlw	0
  9137  13F0  00C1               	movwf	___fldiv@a+3
  9138  13F1  3000               	movlw	0
  9139  13F2  00C0               	movwf	___fldiv@a+2
  9140  13F3  3000               	movlw	0
  9141  13F4  00BF               	movwf	___fldiv@a+1
  9142  13F5  3000               	movlw	0
  9143  13F6  00BE               	movwf	___fldiv@a
  9144  13F7                     l662:	
  9145  13F7  0841               	movf	___fldiv@a+3,w
  9146  13F8  0440               	iorwf	___fldiv@a+2,w
  9147  13F9  043F               	iorwf	___fldiv@a+1,w
  9148  13FA  043E               	iorwf	___fldiv@a,w
  9149  13FB  1D03               	skipz
  9150  13FC  2BFE               	goto	u5611
  9151  13FD  2BFF               	goto	u5610
  9152  13FE                     u5611:	
  9153  13FE  2C18               	goto	l3265
  9154  13FF                     u5610:	
  9155  13FF                     l3257:	
  9156  13FF  3000               	movlw	0
  9157  1400  00C5               	movwf	___fldiv@b+3
  9158  1401  3000               	movlw	0
  9159  1402  00C4               	movwf	___fldiv@b+2
  9160  1403  3000               	movlw	0
  9161  1404  00C3               	movwf	___fldiv@b+1
  9162  1405  3000               	movlw	0
  9163  1406  00C2               	movwf	___fldiv@b
  9164  1407  3080               	movlw	128
  9165  1408  04C4               	iorwf	___fldiv@b+2,f
  9166  1409  307F               	movlw	127
  9167  140A  04C5               	iorwf	___fldiv@b+3,f
  9168  140B                     l3259:	
  9169  140B  084F               	movf	___fldiv@sign,w
  9170  140C  00C6               	movwf	??___fldiv
  9171  140D  0846               	movf	??___fldiv,w
  9172  140E  04C5               	iorwf	___fldiv@b+3,f
  9173  140F                     l3261:	
  9174  140F  0845               	movf	___fldiv@b+3,w
  9175  1410  00C1               	movwf	?___fldiv+3
  9176  1411  0844               	movf	___fldiv@b+2,w
  9177  1412  00C0               	movwf	?___fldiv+2
  9178  1413  0843               	movf	___fldiv@b+1,w
  9179  1414  00BF               	movwf	?___fldiv+1
  9180  1415  0842               	movf	___fldiv@b,w
  9181  1416  00BE               	movwf	?___fldiv
  9182  1417  2D77               	goto	l664
  9183  1418                     l3265:	
  9184  1418  0856               	movf	___fldiv@bexp,w
  9185  1419  1D03               	btfss	3,2
  9186  141A  2C1C               	goto	u5621
  9187  141B  2C1D               	goto	u5620
  9188  141C                     u5621:	
  9189  141C  2C26               	goto	l3271
  9190  141D                     u5620:	
  9191  141D                     l3267:	
  9192  141D  3000               	movlw	0
  9193  141E  00C1               	movwf	?___fldiv+3
  9194  141F  3000               	movlw	0
  9195  1420  00C0               	movwf	?___fldiv+2
  9196  1421  3000               	movlw	0
  9197  1422  00BF               	movwf	?___fldiv+1
  9198  1423  3000               	movlw	0
  9199  1424  00BE               	movwf	?___fldiv
  9200  1425  2D77               	goto	l664
  9201  1426                     l3271:	
  9202  1426  0856               	movf	___fldiv@bexp,w
  9203  1427  00C6               	movwf	??___fldiv
  9204  1428  01C7               	clrf	??___fldiv+1
  9205  1429  0847               	movf	??___fldiv+1,w
  9206  142A  00C9               	movwf	??___fldiv+3
  9207  142B  0857               	movf	___fldiv@aexp,w
  9208  142C  0246               	subwf	??___fldiv,w
  9209  142D  00C8               	movwf	??___fldiv+2
  9210  142E  1C03               	skipc
  9211  142F  03C9               	decf	??___fldiv+3,f
  9212  1430  0848               	movf	??___fldiv+2,w
  9213  1431  3E7F               	addlw	127
  9214  1432  00D0               	movwf	___fldiv@new_exp
  9215  1433  0849               	movf	??___fldiv+3,w
  9216  1434  1803               	skipnc
  9217  1435  3E01               	addlw	1
  9218  1436  3E00               	addlw	0
  9219  1437  00D1               	movwf	___fldiv@new_exp+1
  9220  1438                     l3273:	
  9221  1438  0845               	movf	___fldiv@b+3,w
  9222  1439  00CE               	movwf	___fldiv@rem+3
  9223  143A  0844               	movf	___fldiv@b+2,w
  9224  143B  00CD               	movwf	___fldiv@rem+2
  9225  143C  0843               	movf	___fldiv@b+1,w
  9226  143D  00CC               	movwf	___fldiv@rem+1
  9227  143E  0842               	movf	___fldiv@b,w
  9228  143F  00CB               	movwf	___fldiv@rem
  9229  1440                     l3275:	
  9230  1440  3000               	movlw	0
  9231  1441  00C5               	movwf	___fldiv@b+3
  9232  1442  3000               	movlw	0
  9233  1443  00C4               	movwf	___fldiv@b+2
  9234  1444  3000               	movlw	0
  9235  1445  00C3               	movwf	___fldiv@b+1
  9236  1446  3000               	movlw	0
  9237  1447  00C2               	movwf	___fldiv@b
  9238  1448                     l3277:	
  9239  1448  3000               	movlw	0
  9240  1449  00D5               	movwf	___fldiv@grs+3
  9241  144A  3000               	movlw	0
  9242  144B  00D4               	movwf	___fldiv@grs+2
  9243  144C  3000               	movlw	0
  9244  144D  00D3               	movwf	___fldiv@grs+1
  9245  144E  3000               	movlw	0
  9246  144F  00D2               	movwf	___fldiv@grs
  9247  1450                     l3279:	
  9248  1450  01D7               	clrf	___fldiv@aexp
  9249  1451  2C9C               	goto	l3299
  9250  1452                     l3281:	
  9251  1452  0857               	movf	___fldiv@aexp,w
  9252  1453  1903               	btfsc	3,2
  9253  1454  2C56               	goto	u5631
  9254  1455  2C57               	goto	u5630
  9255  1456                     u5631:	
  9256  1456  2C77               	goto	l3291
  9257  1457                     u5630:	
  9258  1457                     l3283:	
  9259  1457  3001               	movlw	1
  9260  1458  00C6               	movwf	??___fldiv
  9261  1459                     u5645:	
  9262  1459  1003               	clrc
  9263  145A  0DCB               	rlf	___fldiv@rem,f
  9264  145B  0DCC               	rlf	___fldiv@rem+1,f
  9265  145C  0DCD               	rlf	___fldiv@rem+2,f
  9266  145D  0DCE               	rlf	___fldiv@rem+3,f
  9267  145E  0BC6               	decfsz	??___fldiv,f
  9268  145F  2C59               	goto	u5645
  9269  1460  3001               	movlw	1
  9270  1461  00C6               	movwf	??___fldiv
  9271  1462                     u5655:	
  9272  1462  1003               	clrc
  9273  1463  0DC2               	rlf	___fldiv@b,f
  9274  1464  0DC3               	rlf	___fldiv@b+1,f
  9275  1465  0DC4               	rlf	___fldiv@b+2,f
  9276  1466  0DC5               	rlf	___fldiv@b+3,f
  9277  1467  0BC6               	decfsz	??___fldiv,f
  9278  1468  2C62               	goto	u5655
  9279  1469                     l3285:	
  9280  1469  1FD5               	btfss	___fldiv@grs+3,7
  9281  146A  2C6C               	goto	u5661
  9282  146B  2C6D               	goto	u5660
  9283  146C                     u5661:	
  9284  146C  2C6E               	goto	l3289
  9285  146D                     u5660:	
  9286  146D                     l3287:	
  9287  146D  1442               	bsf	___fldiv@b,0
  9288  146E                     l3289:	
  9289  146E  3001               	movlw	1
  9290  146F  00C6               	movwf	??___fldiv
  9291  1470                     u5675:	
  9292  1470  1003               	clrc
  9293  1471  0DD2               	rlf	___fldiv@grs,f
  9294  1472  0DD3               	rlf	___fldiv@grs+1,f
  9295  1473  0DD4               	rlf	___fldiv@grs+2,f
  9296  1474  0DD5               	rlf	___fldiv@grs+3,f
  9297  1475  0BC6               	decfsz	??___fldiv,f
  9298  1476  2C70               	goto	u5675
  9299  1477                     l3291:	
  9300  1477  0841               	movf	___fldiv@a+3,w
  9301  1478  024E               	subwf	___fldiv@rem+3,w
  9302  1479  1D03               	skipz
  9303  147A  2C85               	goto	u5685
  9304  147B  0840               	movf	___fldiv@a+2,w
  9305  147C  024D               	subwf	___fldiv@rem+2,w
  9306  147D  1D03               	skipz
  9307  147E  2C85               	goto	u5685
  9308  147F  083F               	movf	___fldiv@a+1,w
  9309  1480  024C               	subwf	___fldiv@rem+1,w
  9310  1481  1D03               	skipz
  9311  1482  2C85               	goto	u5685
  9312  1483  083E               	movf	___fldiv@a,w
  9313  1484  024B               	subwf	___fldiv@rem,w
  9314  1485                     u5685:	
  9315  1485  1C03               	skipc
  9316  1486  2C88               	goto	u5681
  9317  1487  2C89               	goto	u5680
  9318  1488                     u5681:	
  9319  1488  2C98               	goto	l3297
  9320  1489                     u5680:	
  9321  1489                     l3293:	
  9322  1489  1755               	bsf	___fldiv@grs+3,6
  9323  148A                     l3295:	
  9324  148A  083E               	movf	___fldiv@a,w
  9325  148B  02CB               	subwf	___fldiv@rem,f
  9326  148C  083F               	movf	___fldiv@a+1,w
  9327  148D  1C03               	skipc
  9328  148E  0F3F               	incfsz	___fldiv@a+1,w
  9329  148F  02CC               	subwf	___fldiv@rem+1,f
  9330  1490  0840               	movf	___fldiv@a+2,w
  9331  1491  1C03               	skipc
  9332  1492  0F40               	incfsz	___fldiv@a+2,w
  9333  1493  02CD               	subwf	___fldiv@rem+2,f
  9334  1494  0841               	movf	___fldiv@a+3,w
  9335  1495  1C03               	skipc
  9336  1496  0F41               	incfsz	___fldiv@a+3,w
  9337  1497  02CE               	subwf	___fldiv@rem+3,f
  9338  1498                     l3297:	
  9339  1498  3001               	movlw	1
  9340  1499  00C6               	movwf	??___fldiv
  9341  149A  0846               	movf	??___fldiv,w
  9342  149B  07D7               	addwf	___fldiv@aexp,f
  9343  149C                     l3299:	
  9344  149C  301A               	movlw	26
  9345  149D  0257               	subwf	___fldiv@aexp,w
  9346  149E  1C03               	skipc
  9347  149F  2CA1               	goto	u5691
  9348  14A0  2CA2               	goto	u5690
  9349  14A1                     u5691:	
  9350  14A1  2C52               	goto	l3281
  9351  14A2                     u5690:	
  9352  14A2                     l3301:	
  9353  14A2  084E               	movf	___fldiv@rem+3,w
  9354  14A3  044D               	iorwf	___fldiv@rem+2,w
  9355  14A4  044C               	iorwf	___fldiv@rem+1,w
  9356  14A5  044B               	iorwf	___fldiv@rem,w
  9357  14A6  1903               	skipnz
  9358  14A7  2CA9               	goto	u5701
  9359  14A8  2CAA               	goto	u5700
  9360  14A9                     u5701:	
  9361  14A9  2CC9               	goto	l3315
  9362  14AA                     u5700:	
  9363  14AA                     l3303:	
  9364  14AA  1452               	bsf	___fldiv@grs,0
  9365  14AB  2CC9               	goto	l3315
  9366  14AC                     l3305:	
  9367  14AC  3001               	movlw	1
  9368  14AD  00C6               	movwf	??___fldiv
  9369  14AE                     u5715:	
  9370  14AE  1003               	clrc
  9371  14AF  0DC2               	rlf	___fldiv@b,f
  9372  14B0  0DC3               	rlf	___fldiv@b+1,f
  9373  14B1  0DC4               	rlf	___fldiv@b+2,f
  9374  14B2  0DC5               	rlf	___fldiv@b+3,f
  9375  14B3  0BC6               	decfsz	??___fldiv,f
  9376  14B4  2CAE               	goto	u5715
  9377  14B5                     l3307:	
  9378  14B5  1FD5               	btfss	___fldiv@grs+3,7
  9379  14B6  2CB8               	goto	u5721
  9380  14B7  2CB9               	goto	u5720
  9381  14B8                     u5721:	
  9382  14B8  2CBA               	goto	l3311
  9383  14B9                     u5720:	
  9384  14B9                     l3309:	
  9385  14B9  1442               	bsf	___fldiv@b,0
  9386  14BA                     l3311:	
  9387  14BA  3001               	movlw	1
  9388  14BB  00C6               	movwf	??___fldiv
  9389  14BC                     u5735:	
  9390  14BC  1003               	clrc
  9391  14BD  0DD2               	rlf	___fldiv@grs,f
  9392  14BE  0DD3               	rlf	___fldiv@grs+1,f
  9393  14BF  0DD4               	rlf	___fldiv@grs+2,f
  9394  14C0  0DD5               	rlf	___fldiv@grs+3,f
  9395  14C1  0BC6               	decfsz	??___fldiv,f
  9396  14C2  2CBC               	goto	u5735
  9397  14C3                     l3313:	
  9398  14C3  30FF               	movlw	255
  9399  14C4  07D0               	addwf	___fldiv@new_exp,f
  9400  14C5  1803               	skipnc
  9401  14C6  0AD1               	incf	___fldiv@new_exp+1,f
  9402  14C7  30FF               	movlw	255
  9403  14C8  07D1               	addwf	___fldiv@new_exp+1,f
  9404  14C9                     l3315:	
  9405  14C9  1FC4               	btfss	___fldiv@b+2,7
  9406  14CA  2CCC               	goto	u5741
  9407  14CB  2CCD               	goto	u5740
  9408  14CC                     u5741:	
  9409  14CC  2CAC               	goto	l3305
  9410  14CD                     u5740:	
  9411  14CD                     l3317:	
  9412  14CD  01D7               	clrf	___fldiv@aexp
  9413  14CE                     l3319:	
  9414  14CE  1FD5               	btfss	___fldiv@grs+3,7
  9415  14CF  2CD1               	goto	u5751
  9416  14D0  2CD2               	goto	u5750
  9417  14D1                     u5751:	
  9418  14D1  2CEE               	goto	l3327
  9419  14D2                     u5750:	
  9420  14D2                     l3321:	
  9421  14D2  30FF               	movlw	255
  9422  14D3  0552               	andwf	___fldiv@grs,w
  9423  14D4  00C6               	movwf	??___fldiv
  9424  14D5  30FF               	movlw	255
  9425  14D6  0553               	andwf	___fldiv@grs+1,w
  9426  14D7  00C7               	movwf	??___fldiv+1
  9427  14D8  30FF               	movlw	255
  9428  14D9  0554               	andwf	___fldiv@grs+2,w
  9429  14DA  00C8               	movwf	??___fldiv+2
  9430  14DB  307F               	movlw	127
  9431  14DC  0555               	andwf	___fldiv@grs+3,w
  9432  14DD  00C9               	movwf	??___fldiv+3
  9433  14DE  0849               	movf	??___fldiv+3,w
  9434  14DF  0448               	iorwf	??___fldiv+2,w
  9435  14E0  0447               	iorwf	??___fldiv+1,w
  9436  14E1  0446               	iorwf	??___fldiv,w
  9437  14E2  1903               	skipnz
  9438  14E3  2CE5               	goto	u5761
  9439  14E4  2CE6               	goto	u5760
  9440  14E5                     u5761:	
  9441  14E5  2CE9               	goto	l678
  9442  14E6                     u5760:	
  9443  14E6                     l3323:	
  9444  14E6  01D7               	clrf	___fldiv@aexp
  9445  14E7  0AD7               	incf	___fldiv@aexp,f
  9446  14E8  2CEE               	goto	l3327
  9447  14E9                     l678:	
  9448  14E9  1C42               	btfss	___fldiv@b,0
  9449  14EA  2CEC               	goto	u5771
  9450  14EB  2CED               	goto	u5770
  9451  14EC                     u5771:	
  9452  14EC  2CEE               	goto	l3327
  9453  14ED                     u5770:	
  9454  14ED  2CE6               	goto	l3323
  9455  14EE                     l3327:	
  9456  14EE  0857               	movf	___fldiv@aexp,w
  9457  14EF  1903               	btfsc	3,2
  9458  14F0  2CF2               	goto	u5781
  9459  14F1  2CF3               	goto	u5780
  9460  14F2                     u5781:	
  9461  14F2  2D24               	goto	l3337
  9462  14F3                     u5780:	
  9463  14F3                     l3329:	
  9464  14F3  3001               	movlw	1
  9465  14F4  07C2               	addwf	___fldiv@b,f
  9466  14F5  3000               	movlw	0
  9467  14F6  1803               	skipnc
  9468  14F7  3001               	movlw	1
  9469  14F8  07C3               	addwf	___fldiv@b+1,f
  9470  14F9  3000               	movlw	0
  9471  14FA  1803               	skipnc
  9472  14FB  3001               	movlw	1
  9473  14FC  07C4               	addwf	___fldiv@b+2,f
  9474  14FD  3000               	movlw	0
  9475  14FE  1803               	skipnc
  9476  14FF  3001               	movlw	1
  9477  1500  07C5               	addwf	___fldiv@b+3,f
  9478  1501                     l3331:	
  9479  1501  1C45               	btfss	___fldiv@b+3,0
  9480  1502  2D04               	goto	u5791
  9481  1503  2D05               	goto	u5790
  9482  1504                     u5791:	
  9483  1504  2D24               	goto	l3337
  9484  1505                     u5790:	
  9485  1505                     l3333:	
  9486  1505  0842               	movf	___fldiv@b,w
  9487  1506  00C6               	movwf	??___fldiv
  9488  1507  0843               	movf	___fldiv@b+1,w
  9489  1508  00C7               	movwf	??___fldiv+1
  9490  1509  0844               	movf	___fldiv@b+2,w
  9491  150A  00C8               	movwf	??___fldiv+2
  9492  150B  0845               	movf	___fldiv@b+3,w
  9493  150C  00C9               	movwf	??___fldiv+3
  9494  150D  3001               	movlw	1
  9495  150E  00CA               	movwf	??___fldiv+4
  9496  150F                     u5805:	
  9497  150F  0D49               	rlf	??___fldiv+3,w
  9498  1510  0CC9               	rrf	??___fldiv+3,f
  9499  1511  0CC8               	rrf	??___fldiv+2,f
  9500  1512  0CC7               	rrf	??___fldiv+1,f
  9501  1513  0CC6               	rrf	??___fldiv,f
  9502  1514                     u5800:	
  9503  1514  0BCA               	decfsz	??___fldiv+4,f
  9504  1515  2D0F               	goto	u5805
  9505  1516  0849               	movf	??___fldiv+3,w
  9506  1517  00C5               	movwf	___fldiv@b+3
  9507  1518  0848               	movf	??___fldiv+2,w
  9508  1519  00C4               	movwf	___fldiv@b+2
  9509  151A  0847               	movf	??___fldiv+1,w
  9510  151B  00C3               	movwf	___fldiv@b+1
  9511  151C  0846               	movf	??___fldiv,w
  9512  151D  00C2               	movwf	___fldiv@b
  9513  151E                     l3335:	
  9514  151E  3001               	movlw	1
  9515  151F  07D0               	addwf	___fldiv@new_exp,f
  9516  1520  1803               	skipnc
  9517  1521  0AD1               	incf	___fldiv@new_exp+1,f
  9518  1522  3000               	movlw	0
  9519  1523  07D1               	addwf	___fldiv@new_exp+1,f
  9520  1524                     l3337:	
  9521  1524  0851               	movf	___fldiv@new_exp+1,w
  9522  1525  3A80               	xorlw	128
  9523  1526  00FF               	movwf	btemp+1
  9524  1527  3080               	movlw	128
  9525  1528  027F               	subwf	btemp+1,w
  9526  1529  1D03               	skipz
  9527  152A  2D2D               	goto	u5815
  9528  152B  30FF               	movlw	255
  9529  152C  0250               	subwf	___fldiv@new_exp,w
  9530  152D                     u5815:	
  9531  152D  1C03               	skipc
  9532  152E  2D30               	goto	u5811
  9533  152F  2D31               	goto	u5810
  9534  1530                     u5811:	
  9535  1530  2D3F               	goto	l3341
  9536  1531                     u5810:	
  9537  1531                     l3339:	
  9538  1531  30FF               	movlw	255
  9539  1532  1283               	bcf	3,5	;RP0=0, select bank0
  9540  1533  1303               	bcf	3,6	;RP1=0, select bank0
  9541  1534  00D0               	movwf	___fldiv@new_exp
  9542  1535  3000               	movlw	0
  9543  1536  00D1               	movwf	___fldiv@new_exp+1
  9544  1537  3000               	movlw	0
  9545  1538  00C5               	movwf	___fldiv@b+3
  9546  1539  3000               	movlw	0
  9547  153A  00C4               	movwf	___fldiv@b+2
  9548  153B  3000               	movlw	0
  9549  153C  00C3               	movwf	___fldiv@b+1
  9550  153D  3000               	movlw	0
  9551  153E  00C2               	movwf	___fldiv@b
  9552  153F                     l3341:	
  9553  153F  1283               	bcf	3,5	;RP0=0, select bank0
  9554  1540  1303               	bcf	3,6	;RP1=0, select bank0
  9555  1541  0851               	movf	___fldiv@new_exp+1,w
  9556  1542  3A80               	xorlw	128
  9557  1543  00FF               	movwf	btemp+1
  9558  1544  3080               	movlw	128
  9559  1545  027F               	subwf	btemp+1,w
  9560  1546  1D03               	skipz
  9561  1547  2D4A               	goto	u5825
  9562  1548  3001               	movlw	1
  9563  1549  0250               	subwf	___fldiv@new_exp,w
  9564  154A                     u5825:	
  9565  154A  1803               	skipnc
  9566  154B  2D4D               	goto	u5821
  9567  154C  2D4E               	goto	u5820
  9568  154D                     u5821:	
  9569  154D  2D5B               	goto	l684
  9570  154E                     u5820:	
  9571  154E                     l3343:	
  9572  154E  1283               	bcf	3,5	;RP0=0, select bank0
  9573  154F  1303               	bcf	3,6	;RP1=0, select bank0
  9574  1550  01D0               	clrf	___fldiv@new_exp
  9575  1551  01D1               	clrf	___fldiv@new_exp+1
  9576  1552                     l3345:	
  9577  1552  3000               	movlw	0
  9578  1553  00C5               	movwf	___fldiv@b+3
  9579  1554  3000               	movlw	0
  9580  1555  00C4               	movwf	___fldiv@b+2
  9581  1556  3000               	movlw	0
  9582  1557  00C3               	movwf	___fldiv@b+1
  9583  1558  3000               	movlw	0
  9584  1559  00C2               	movwf	___fldiv@b
  9585  155A                     l3347:	
  9586  155A  01CF               	clrf	___fldiv@sign
  9587  155B                     l684:	
  9588  155B  1283               	bcf	3,5	;RP0=0, select bank0
  9589  155C  1303               	bcf	3,6	;RP1=0, select bank0
  9590  155D  0850               	movf	___fldiv@new_exp,w
  9591  155E  00C6               	movwf	??___fldiv
  9592  155F  0846               	movf	??___fldiv,w
  9593  1560  00D6               	movwf	___fldiv@bexp
  9594  1561                     l3349:	
  9595  1561  1C56               	btfss	___fldiv@bexp,0
  9596  1562  2D64               	goto	u5831
  9597  1563  2D65               	goto	u5830
  9598  1564                     u5831:	
  9599  1564  2D67               	goto	l3353
  9600  1565                     u5830:	
  9601  1565                     l3351:	
  9602  1565  17C4               	bsf	___fldiv@b+2,7
  9603  1566  2D6B               	goto	l686
  9604  1567                     l3353:	
  9605  1567  307F               	movlw	127
  9606  1568  00C6               	movwf	??___fldiv
  9607  1569  0846               	movf	??___fldiv,w
  9608  156A  05C4               	andwf	___fldiv@b+2,f
  9609  156B                     l686:	
  9610  156B  0856               	movf	___fldiv@bexp,w
  9611  156C  00C6               	movwf	??___fldiv
  9612  156D  1003               	clrc
  9613  156E  0C46               	rrf	??___fldiv,w
  9614  156F  00C7               	movwf	??___fldiv+1
  9615  1570  0847               	movf	??___fldiv+1,w
  9616  1571  00C5               	movwf	___fldiv@b+3
  9617  1572  084F               	movf	___fldiv@sign,w
  9618  1573  00C6               	movwf	??___fldiv
  9619  1574  0846               	movf	??___fldiv,w
  9620  1575  04C5               	iorwf	___fldiv@b+3,f
  9621  1576  2C0F               	goto	l3261
  9622  1577                     l664:	
  9623  1577  0008               	return
  9624  1578                     __end_of___fldiv:	
  9625                           
  9626                           	psect	text25
  9627  1E0F                     __ptext25:	
  9628 ;; *************** function _Lcd_Set_Cursor *****************
  9629 ;; Defined at:
  9630 ;;		line 53 in file "LCD_driver.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  row             1    wreg     unsigned char 
  9633 ;;  column          1    2[COMMON] unsigned char 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;  row             1    5[COMMON] unsigned char 
  9636 ;;  temp            1    8[COMMON] unsigned char 
  9637 ;;  y               1    7[COMMON] unsigned char 
  9638 ;;  z               1    6[COMMON] unsigned char 
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      void 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0, pclath, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9648 ;;      Params:         1       0       0       0       0
  9649 ;;      Locals:         4       0       0       0       0
  9650 ;;      Temps:          2       0       0       0       0
  9651 ;;      Totals:         7       0       0       0       0
  9652 ;;Total ram usage:        7 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    2
  9655 ;; This function calls:
  9656 ;;		_Lcd_Cmd
  9657 ;; This function is called by:
  9658 ;;		_ADC_Read
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           
  9663                           ;psect for function _Lcd_Set_Cursor
  9664  1E0F                     _Lcd_Set_Cursor:	
  9665                           
  9666                           ;incstack = 0
  9667                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9668                           ;Lcd_Set_Cursor@row stored from wreg
  9669  1E0F  00F5               	movwf	Lcd_Set_Cursor@row
  9670  1E10                     l3189:	
  9671                           
  9672                           ;LCD_driver.c: 54:     char temp,z,y;;LCD_driver.c: 55:     if(row == 1)
  9673  1E10  0375               	decf	Lcd_Set_Cursor@row,w
  9674  1E11  1D03               	btfss	3,2
  9675  1E12  2E14               	goto	u5481
  9676  1E13  2E15               	goto	u5480
  9677  1E14                     u5481:	
  9678  1E14  2E38               	goto	l3199
  9679  1E15                     u5480:	
  9680  1E15                     l3191:	
  9681                           
  9682                           ;LCD_driver.c: 56:     {;LCD_driver.c: 57:         temp = 0x80 + column - 1;
  9683  1E15  0872               	movf	Lcd_Set_Cursor@column,w
  9684  1E16  3E7F               	addlw	127
  9685  1E17  00F3               	movwf	??_Lcd_Set_Cursor
  9686  1E18  0873               	movf	??_Lcd_Set_Cursor,w
  9687  1E19  00F8               	movwf	Lcd_Set_Cursor@temp
  9688                           
  9689                           ;LCD_driver.c: 58:         z = temp>>4;
  9690  1E1A  0878               	movf	Lcd_Set_Cursor@temp,w
  9691  1E1B  00F3               	movwf	??_Lcd_Set_Cursor
  9692  1E1C  3004               	movlw	4
  9693  1E1D                     u5495:	
  9694  1E1D  1003               	clrc
  9695  1E1E  0CF3               	rrf	??_Lcd_Set_Cursor,f
  9696  1E1F  3EFF               	addlw	-1
  9697  1E20  1D03               	skipz
  9698  1E21  2E1D               	goto	u5495
  9699  1E22  0873               	movf	??_Lcd_Set_Cursor,w
  9700  1E23  00F4               	movwf	??_Lcd_Set_Cursor+1
  9701  1E24  0874               	movf	??_Lcd_Set_Cursor+1,w
  9702  1E25  00F6               	movwf	Lcd_Set_Cursor@z
  9703  1E26                     l3193:	
  9704                           
  9705                           ;LCD_driver.c: 59:         y = temp & 0x0F;
  9706  1E26  0878               	movf	Lcd_Set_Cursor@temp,w
  9707  1E27  390F               	andlw	15
  9708  1E28  00F3               	movwf	??_Lcd_Set_Cursor
  9709  1E29  0873               	movf	??_Lcd_Set_Cursor,w
  9710  1E2A  00F7               	movwf	Lcd_Set_Cursor@y
  9711  1E2B                     l3195:	
  9712                           
  9713                           ;LCD_driver.c: 60:         Lcd_Cmd(z);
  9714  1E2B  0876               	movf	Lcd_Set_Cursor@z,w
  9715  1E2C  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  9716  1E31                     l3197:	
  9717                           
  9718                           ;LCD_driver.c: 61:         Lcd_Cmd(y);
  9719  1E31  0877               	movf	Lcd_Set_Cursor@y,w
  9720  1E32  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  9721                           
  9722                           ;LCD_driver.c: 62:     }
  9723  1E37  2E60               	goto	l94
  9724  1E38                     l3199:	
  9725  1E38  3002               	movlw	2
  9726  1E39  0675               	xorwf	Lcd_Set_Cursor@row,w
  9727  1E3A  1D03               	btfss	3,2
  9728  1E3B  2E3D               	goto	u5501
  9729  1E3C  2E3E               	goto	u5500
  9730  1E3D                     u5501:	
  9731  1E3D  2E60               	goto	l94
  9732  1E3E                     u5500:	
  9733  1E3E                     l3201:	
  9734                           
  9735                           ;LCD_driver.c: 64:     {;LCD_driver.c: 65:         temp = 0xC0 + column - 1;
  9736  1E3E  0872               	movf	Lcd_Set_Cursor@column,w
  9737  1E3F  3EBF               	addlw	191
  9738  1E40  00F3               	movwf	??_Lcd_Set_Cursor
  9739  1E41  0873               	movf	??_Lcd_Set_Cursor,w
  9740  1E42  00F8               	movwf	Lcd_Set_Cursor@temp
  9741                           
  9742                           ;LCD_driver.c: 66:         z = temp>>4;
  9743  1E43  0878               	movf	Lcd_Set_Cursor@temp,w
  9744  1E44  00F3               	movwf	??_Lcd_Set_Cursor
  9745  1E45  3004               	movlw	4
  9746  1E46                     u5515:	
  9747  1E46  1003               	clrc
  9748  1E47  0CF3               	rrf	??_Lcd_Set_Cursor,f
  9749  1E48  3EFF               	addlw	-1
  9750  1E49  1D03               	skipz
  9751  1E4A  2E46               	goto	u5515
  9752  1E4B  0873               	movf	??_Lcd_Set_Cursor,w
  9753  1E4C  00F4               	movwf	??_Lcd_Set_Cursor+1
  9754  1E4D  0874               	movf	??_Lcd_Set_Cursor+1,w
  9755  1E4E  00F6               	movwf	Lcd_Set_Cursor@z
  9756  1E4F                     l3203:	
  9757                           
  9758                           ;LCD_driver.c: 67:         y = temp & 0x0F;
  9759  1E4F  0878               	movf	Lcd_Set_Cursor@temp,w
  9760  1E50  390F               	andlw	15
  9761  1E51  00F3               	movwf	??_Lcd_Set_Cursor
  9762  1E52  0873               	movf	??_Lcd_Set_Cursor,w
  9763  1E53  00F7               	movwf	Lcd_Set_Cursor@y
  9764  1E54                     l3205:	
  9765                           
  9766                           ;LCD_driver.c: 68:         Lcd_Cmd(z);
  9767  1E54  0876               	movf	Lcd_Set_Cursor@z,w
  9768  1E55  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  9769  1E5A                     l3207:	
  9770                           
  9771                           ;LCD_driver.c: 69:         Lcd_Cmd(y);
  9772  1E5A  0877               	movf	Lcd_Set_Cursor@y,w
  9773  1E5B  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
  9774  1E60                     l94:	
  9775  1E60  0008               	return
  9776  1E61                     __end_of_Lcd_Set_Cursor:	
  9777                           
  9778                           	psect	text26
  9779  1D3B                     __ptext26:	
  9780 ;; *************** function _Lcd_Print_String *****************
  9781 ;; Defined at:
  9782 ;;		line 100 in file "LCD_driver.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  a               2    5[COMMON] PTR unsigned char 
  9785 ;;		 -> STR_2(15), char_data(16), 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  i               2   10[COMMON] int 
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9797 ;;      Params:         2       0       0       0       0
  9798 ;;      Locals:         2       0       0       0       0
  9799 ;;      Temps:          3       0       0       0       0
  9800 ;;      Totals:         7       0       0       0       0
  9801 ;;Total ram usage:        7 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:    2
  9804 ;; This function calls:
  9805 ;;		_Lcd_Print_Char
  9806 ;; This function is called by:
  9807 ;;		_ADC_Read
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           
  9812                           ;psect for function _Lcd_Print_String
  9813  1D3B                     _Lcd_Print_String:	
  9814  1D3B                     l3209:	
  9815                           ;incstack = 0
  9816                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9817                           
  9818                           
  9819                           ;LCD_driver.c: 101:     int i;;LCD_driver.c: 102:     for(i = 0; a[i] != '\0'; i++){
  9820  1D3B  01FA               	clrf	Lcd_Print_String@i
  9821  1D3C  01FB               	clrf	Lcd_Print_String@i+1
  9822  1D3D  2D60               	goto	l3215
  9823  1D3E                     l3211:	
  9824                           
  9825                           ;LCD_driver.c: 103:        Lcd_Print_Char(a[i]);
  9826  1D3E  087A               	movf	Lcd_Print_String@i,w
  9827  1D3F  0775               	addwf	Lcd_Print_String@a,w
  9828  1D40  00F8               	movwf	??_Lcd_Print_String+1
  9829  1D41  0876               	movf	Lcd_Print_String@a+1,w
  9830  1D42  00F7               	movwf	??_Lcd_Print_String
  9831  1D43  1803               	skipnc
  9832  1D44  0AF7               	incf	??_Lcd_Print_String,f
  9833  1D45  1FFA               	btfss	Lcd_Print_String@i,7
  9834  1D46  2D48               	goto	u5520
  9835  1D47  03F7               	decf	??_Lcd_Print_String,f
  9836  1D48                     u5520:	
  9837  1D48  0877               	movf	??_Lcd_Print_String,w
  9838  1D49  00F9               	movwf	??_Lcd_Print_String+2
  9839  1D4A  0879               	movf	??_Lcd_Print_String+2,w
  9840  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  9841  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  9842  1D4D  00FF               	movwf	btemp+1
  9843  1D4E  0878               	movf	??_Lcd_Print_String+1,w
  9844  1D4F  0084               	movwf	4
  9845  1D50  160A  118A  2000  160A  158A  	fcall	stringtab
  9846  1D55  120A  118A  2003  160A  158A  	fcall	_Lcd_Print_Char
  9847  1D5A                     l3213:	
  9848                           
  9849                           ;LCD_driver.c: 104:     }
  9850  1D5A  3001               	movlw	1
  9851  1D5B  07FA               	addwf	Lcd_Print_String@i,f
  9852  1D5C  1803               	skipnc
  9853  1D5D  0AFB               	incf	Lcd_Print_String@i+1,f
  9854  1D5E  3000               	movlw	0
  9855  1D5F  07FB               	addwf	Lcd_Print_String@i+1,f
  9856  1D60                     l3215:	
  9857  1D60  087A               	movf	Lcd_Print_String@i,w
  9858  1D61  0775               	addwf	Lcd_Print_String@a,w
  9859  1D62  00F8               	movwf	??_Lcd_Print_String+1
  9860  1D63  0876               	movf	Lcd_Print_String@a+1,w
  9861  1D64  00F7               	movwf	??_Lcd_Print_String
  9862  1D65  1803               	skipnc
  9863  1D66  0AF7               	incf	??_Lcd_Print_String,f
  9864  1D67  1FFA               	btfss	Lcd_Print_String@i,7
  9865  1D68  2D6A               	goto	u5530
  9866  1D69  03F7               	decf	??_Lcd_Print_String,f
  9867  1D6A                     u5530:	
  9868  1D6A  0877               	movf	??_Lcd_Print_String,w
  9869  1D6B  00F9               	movwf	??_Lcd_Print_String+2
  9870  1D6C  0879               	movf	??_Lcd_Print_String+2,w
  9871  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  9872  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  9873  1D6F  00FF               	movwf	btemp+1
  9874  1D70  0878               	movf	??_Lcd_Print_String+1,w
  9875  1D71  0084               	movwf	4
  9876  1D72  160A  118A  2000  160A  158A  	fcall	stringtab
  9877  1D77  3A00               	xorlw	0
  9878  1D78  1D03               	skipz
  9879  1D79  2D7B               	goto	u5541
  9880  1D7A  2D7C               	goto	u5540
  9881  1D7B                     u5541:	
  9882  1D7B  2D3E               	goto	l3211
  9883  1D7C                     u5540:	
  9884  1D7C                     l106:	
  9885  1D7C  0008               	return
  9886  1D7D                     __end_of_Lcd_Print_String:	
  9887                           
  9888                           	psect	text27
  9889  0003                     __ptext27:	
  9890 ;; *************** function _Lcd_Print_Char *****************
  9891 ;; Defined at:
  9892 ;;		line 87 in file "LCD_driver.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;  data            1    wreg     unsigned char 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;  data            1    4[COMMON] unsigned char 
  9897 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  9898 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0, pclath, cstack
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9908 ;;      Params:         0       0       0       0       0
  9909 ;;      Locals:         3       0       0       0       0
  9910 ;;      Temps:          1       0       0       0       0
  9911 ;;      Totals:         4       0       0       0       0
  9912 ;;Total ram usage:        4 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:    1
  9915 ;; This function calls:
  9916 ;;		_Lcd_SetBit
  9917 ;; This function is called by:
  9918 ;;		_Lcd_Print_String
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function _Lcd_Print_Char
  9924  0003                     _Lcd_Print_Char:	
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
  9928                           ;Lcd_Print_Char@data stored from wreg
  9929  0003  00F4               	movwf	Lcd_Print_Char@data
  9930  0004                     l2653:	
  9931                           
  9932                           ;LCD_driver.c: 88:    char Lower_Nibble,Upper_Nibble;;LCD_driver.c: 89:    Lower_Nibble 
      +                          = data&0x0F;
  9933  0004  0874               	movf	Lcd_Print_Char@data,w
  9934  0005  390F               	andlw	15
  9935  0006  00F1               	movwf	??_Lcd_Print_Char
  9936  0007  0871               	movf	??_Lcd_Print_Char,w
  9937  0008  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  9938                           
  9939                           ;LCD_driver.c: 90:    Upper_Nibble = data&0xF0;
  9940  0009  0874               	movf	Lcd_Print_Char@data,w
  9941  000A  39F0               	andlw	240
  9942  000B  00F1               	movwf	??_Lcd_Print_Char
  9943  000C  0871               	movf	??_Lcd_Print_Char,w
  9944  000D  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  9945  000E                     l2655:	
  9946                           
  9947                           ;LCD_driver.c: 91:    PORTDbits.RD2 = 1;
  9948  000E  1283               	bcf	3,5	;RP0=0, select bank0
  9949  000F  1303               	bcf	3,6	;RP1=0, select bank0
  9950  0010  1508               	bsf	8,2	;volatile
  9951  0011                     l2657:	
  9952                           
  9953                           ;LCD_driver.c: 92:    Lcd_SetBit(Upper_Nibble>>4);
  9954  0011  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  9955  0012  00F1               	movwf	??_Lcd_Print_Char
  9956  0013  3004               	movlw	4
  9957  0014                     u4175:	
  9958  0014  1003               	clrc
  9959  0015  0CF1               	rrf	??_Lcd_Print_Char,f
  9960  0016  3EFF               	addlw	-1
  9961  0017  1D03               	skipz
  9962  0018  2814               	goto	u4175
  9963  0019  0871               	movf	??_Lcd_Print_Char,w
  9964  001A  160A  158A  2432  120A  118A  	fcall	_Lcd_SetBit
  9965  001F                     l2659:	
  9966                           
  9967                           ;LCD_driver.c: 93:    PORTDbits.RD3 = 1;
  9968  001F  1283               	bcf	3,5	;RP0=0, select bank0
  9969  0020  1303               	bcf	3,6	;RP1=0, select bank0
  9970  0021  1588               	bsf	8,3	;volatile
  9971  0022                     l2661:	
  9972                           
  9973                           ;LCD_driver.c: 94:    PORTDbits.RD3 = 0;
  9974  0022  1188               	bcf	8,3	;volatile
  9975  0023                     l2663:	
  9976                           
  9977                           ;LCD_driver.c: 95:    Lcd_SetBit(Lower_Nibble);
  9978  0023  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  9979  0024  160A  158A  2432  120A  118A  	fcall	_Lcd_SetBit
  9980  0029                     l2665:	
  9981                           
  9982                           ;LCD_driver.c: 96:    PORTDbits.RD3 = 1;
  9983  0029  1283               	bcf	3,5	;RP0=0, select bank0
  9984  002A  1303               	bcf	3,6	;RP1=0, select bank0
  9985  002B  1588               	bsf	8,3	;volatile
  9986  002C                     l2667:	
  9987                           
  9988                           ;LCD_driver.c: 97:    PORTDbits.RD3 = 0;
  9989  002C  1188               	bcf	8,3	;volatile
  9990  002D                     l100:	
  9991  002D  0008               	return
  9992  002E                     __end_of_Lcd_Print_Char:	
  9993                           
  9994                           	psect	text28
  9995  1BD0                     __ptext28:	
  9996 ;; *************** function _Lcd_Clear *****************
  9997 ;; Defined at:
  9998 ;;		line 47 in file "LCD_driver.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;		None
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;		None
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0, pclath, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10012 ;;      Params:         0       0       0       0       0
 10013 ;;      Locals:         0       0       0       0       0
 10014 ;;      Temps:          0       0       0       0       0
 10015 ;;      Totals:         0       0       0       0       0
 10016 ;;Total ram usage:        0 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:    2
 10019 ;; This function calls:
 10020 ;;		_Lcd_Cmd
 10021 ;; This function is called by:
 10022 ;;		_main
 10023 ;;		_ADC_Read
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           
 10028                           ;psect for function _Lcd_Clear
 10029  1BD0                     _Lcd_Clear:	
 10030  1BD0                     l3015:	
 10031                           ;incstack = 0
 10032                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10033                           
 10034                           
 10035                           ;LCD_driver.c: 48:     Lcd_Cmd(0x00);
 10036  1BD0  3000               	movlw	0
 10037  1BD1  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
 10038                           
 10039                           ;LCD_driver.c: 49:     Lcd_Cmd(0x01);
 10040  1BD6  3001               	movlw	1
 10041  1BD7  160A  158A  2401  160A  158A  	fcall	_Lcd_Cmd
 10042  1BDC                     l88:	
 10043  1BDC  0008               	return
 10044  1BDD                     __end_of_Lcd_Clear:	
 10045                           
 10046                           	psect	text29
 10047  1C01                     __ptext29:	
 10048 ;; *************** function _Lcd_Cmd *****************
 10049 ;; Defined at:
 10050 ;;		line 39 in file "LCD_driver.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  a               1    wreg     unsigned char 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  a               1    1[COMMON] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0, pclath, cstack
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10064 ;;      Params:         0       0       0       0       0
 10065 ;;      Locals:         1       0       0       0       0
 10066 ;;      Temps:          0       0       0       0       0
 10067 ;;      Totals:         1       0       0       0       0
 10068 ;;Total ram usage:        1 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    1
 10071 ;; This function calls:
 10072 ;;		_Lcd_SetBit
 10073 ;;		_Timer_Delay
 10074 ;; This function is called by:
 10075 ;;		_Lcd_Clear
 10076 ;;		_Lcd_Set_Cursor
 10077 ;;		_Lcd_Start
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           
 10082                           ;psect for function _Lcd_Cmd
 10083  1C01                     _Lcd_Cmd:	
 10084                           
 10085                           ;incstack = 0
 10086                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10087                           ;Lcd_Cmd@a stored from wreg
 10088  1C01  00F1               	movwf	Lcd_Cmd@a
 10089  1C02                     l2645:	
 10090                           
 10091                           ;LCD_driver.c: 40:     PORTDbits.RD2 = 0;
 10092  1C02  1283               	bcf	3,5	;RP0=0, select bank0
 10093  1C03  1303               	bcf	3,6	;RP1=0, select bank0
 10094  1C04  1108               	bcf	8,2	;volatile
 10095  1C05                     l2647:	
 10096                           
 10097                           ;LCD_driver.c: 41:     Lcd_SetBit(a);
 10098  1C05  0871               	movf	Lcd_Cmd@a,w
 10099  1C06  160A  158A  2432  160A  158A  	fcall	_Lcd_SetBit
 10100  1C0B                     l2649:	
 10101                           
 10102                           ;LCD_driver.c: 42:     PORTDbits.RD3 = 1;
 10103  1C0B  1283               	bcf	3,5	;RP0=0, select bank0
 10104  1C0C  1303               	bcf	3,6	;RP1=0, select bank0
 10105  1C0D  1588               	bsf	8,3	;volatile
 10106                           
 10107                           ;LCD_driver.c: 43:    Timer_Delay();
 10108  1C0E  160A  158A  23EE  160A  158A  	fcall	_Timer_Delay
 10109  1C13                     l2651:	
 10110                           
 10111                           ;LCD_driver.c: 44:     PORTDbits.RD3 = 0;
 10112  1C13  1283               	bcf	3,5	;RP0=0, select bank0
 10113  1C14  1303               	bcf	3,6	;RP1=0, select bank0
 10114  1C15  1188               	bcf	8,3	;volatile
 10115  1C16                     l85:	
 10116  1C16  0008               	return
 10117  1C17                     __end_of_Lcd_Cmd:	
 10118                           
 10119                           	psect	text30
 10120  1BEE                     __ptext30:	
 10121 ;; *************** function _Timer_Delay *****************
 10122 ;; Defined at:
 10123 ;;		line 107 in file "LCD_driver.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      void 
 10130 ;; Registers used:
 10131 ;;		wreg, status,2, status,0
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10137 ;;      Params:         0       0       0       0       0
 10138 ;;      Locals:         0       0       0       0       0
 10139 ;;      Temps:          1       0       0       0       0
 10140 ;;      Totals:         1       0       0       0       0
 10141 ;;Total ram usage:        1 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		_ADC_Read
 10147 ;;		_Lcd_Cmd
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           
 10152                           ;psect for function _Timer_Delay
 10153  1BEE                     _Timer_Delay:	
 10154  1BEE                     l2163:	
 10155                           ;incstack = 0
 10156                           ; Regs used in _Timer_Delay: [wreg+status,2+status,0]
 10157                           
 10158                           
 10159                           ;LCD_driver.c: 110:     PIE1 &= (unsigned char)0x1;
 10160  1BEE  3001               	movlw	1
 10161  1BEF  00F0               	movwf	??_Timer_Delay
 10162  1BF0  0870               	movf	??_Timer_Delay,w
 10163  1BF1  1683               	bsf	3,5	;RP0=1, select bank1
 10164  1BF2  1303               	bcf	3,6	;RP1=0, select bank1
 10165  1BF3  058C               	andwf	12,f	;volatile
 10166  1BF4                     l2165:	
 10167                           
 10168                           ;LCD_driver.c: 112:     TMR1L = (unsigned char)0x60;
 10169  1BF4  3060               	movlw	96
 10170  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
 10171  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
 10172  1BF7  008E               	movwf	14	;volatile
 10173  1BF8                     l2167:	
 10174                           
 10175                           ;LCD_driver.c: 113:     TMR1H = (unsigned char)0xF0;
 10176  1BF8  30F0               	movlw	240
 10177  1BF9  008F               	movwf	15	;volatile
 10178  1BFA                     l2169:	
 10179                           
 10180                           ;LCD_driver.c: 116:     T1CON |= (unsigned char)0x1;
 10181  1BFA  1410               	bsf	16,0	;volatile
 10182  1BFB                     l109:	
 10183                           ;LCD_driver.c: 117:     while(PIR1bits.TMR1IF == 0){};
 10184                           
 10185  1BFB  1C0C               	btfss	12,0	;volatile
 10186  1BFC  2BFE               	goto	u2971
 10187  1BFD  2BFF               	goto	u2970
 10188  1BFE                     u2971:	
 10189  1BFE  2BFB               	goto	l109
 10190  1BFF                     u2970:	
 10191  1BFF                     l111:	
 10192                           
 10193                           ;LCD_driver.c: 118:     PIR1bits.TMR1IF = 0;
 10194  1BFF  100C               	bcf	12,0	;volatile
 10195  1C00                     l112:	
 10196  1C00  0008               	return
 10197  1C01                     __end_of_Timer_Delay:	
 10198                           
 10199                           	psect	text31
 10200  1C32                     __ptext31:	
 10201 ;; *************** function _Lcd_SetBit *****************
 10202 ;; Defined at:
 10203 ;;		line 12 in file "LCD_driver.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  data_bit        1    wreg     unsigned char 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  data_bit        1    0[COMMON] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10217 ;;      Params:         0       0       0       0       0
 10218 ;;      Locals:         1       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0
 10220 ;;      Totals:         1       0       0       0       0
 10221 ;;Total ram usage:        1 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_Lcd_Cmd
 10227 ;;		_Lcd_Start
 10228 ;;		_Lcd_Print_Char
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _Lcd_SetBit
 10234  1C32                     _Lcd_SetBit:	
 10235                           
 10236                           ;incstack = 0
 10237                           ; Regs used in _Lcd_SetBit: [wreg]
 10238                           ;Lcd_SetBit@data_bit stored from wreg
 10239  1C32  00F0               	movwf	Lcd_SetBit@data_bit
 10240  1C33                     l2171:	
 10241                           
 10242                           ;LCD_driver.c: 13:     if(data_bit & 1){
 10243  1C33  1C70               	btfss	Lcd_SetBit@data_bit,0
 10244  1C34  2C36               	goto	u2981
 10245  1C35  2C37               	goto	u2980
 10246  1C36                     u2981:	
 10247  1C36  2C3B               	goto	l74
 10248  1C37                     u2980:	
 10249  1C37                     l2173:	
 10250                           
 10251                           ;LCD_driver.c: 14:         PORTDbits.RD4 = 1;
 10252  1C37  1283               	bcf	3,5	;RP0=0, select bank0
 10253  1C38  1303               	bcf	3,6	;RP1=0, select bank0
 10254  1C39  1608               	bsf	8,4	;volatile
 10255                           
 10256                           ;LCD_driver.c: 15:     }
 10257  1C3A  2C3E               	goto	l75
 10258  1C3B                     l74:	
 10259                           ;LCD_driver.c: 16:     else{
 10260                           
 10261                           
 10262                           ;LCD_driver.c: 17:         PORTDbits.RD4 = 0;
 10263  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
 10264  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
 10265  1C3D  1208               	bcf	8,4	;volatile
 10266  1C3E                     l75:	
 10267                           ;LCD_driver.c: 18:     }
 10268                           
 10269                           
 10270                           ;LCD_driver.c: 19:     if(data_bit & 2){
 10271  1C3E  1CF0               	btfss	Lcd_SetBit@data_bit,1
 10272  1C3F  2C41               	goto	u2991
 10273  1C40  2C42               	goto	u2990
 10274  1C41                     u2991:	
 10275  1C41  2C44               	goto	l76
 10276  1C42                     u2990:	
 10277  1C42                     l2175:	
 10278                           
 10279                           ;LCD_driver.c: 20:         PORTDbits.RD5 = 1;
 10280  1C42  1688               	bsf	8,5	;volatile
 10281                           
 10282                           ;LCD_driver.c: 21:     }
 10283  1C43  2C45               	goto	l77
 10284  1C44                     l76:	
 10285                           ;LCD_driver.c: 22:     else{
 10286                           
 10287                           
 10288                           ;LCD_driver.c: 23:         PORTDbits.RD5 = 0;
 10289  1C44  1288               	bcf	8,5	;volatile
 10290  1C45                     l77:	
 10291                           ;LCD_driver.c: 24:     }
 10292                           
 10293                           
 10294                           ;LCD_driver.c: 25:     if(data_bit & 4){
 10295  1C45  1D70               	btfss	Lcd_SetBit@data_bit,2
 10296  1C46  2C48               	goto	u3001
 10297  1C47  2C49               	goto	u3000
 10298  1C48                     u3001:	
 10299  1C48  2C4B               	goto	l78
 10300  1C49                     u3000:	
 10301  1C49                     l2177:	
 10302                           
 10303                           ;LCD_driver.c: 26:         PORTDbits.RD6 = 1;
 10304  1C49  1708               	bsf	8,6	;volatile
 10305                           
 10306                           ;LCD_driver.c: 27:     }
 10307  1C4A  2C4C               	goto	l79
 10308  1C4B                     l78:	
 10309                           ;LCD_driver.c: 28:     else{
 10310                           
 10311                           
 10312                           ;LCD_driver.c: 29:         PORTDbits.RD6 = 0;
 10313  1C4B  1308               	bcf	8,6	;volatile
 10314  1C4C                     l79:	
 10315                           ;LCD_driver.c: 30:     }
 10316                           
 10317                           
 10318                           ;LCD_driver.c: 31:     if(data_bit & 8){
 10319  1C4C  1DF0               	btfss	Lcd_SetBit@data_bit,3
 10320  1C4D  2C4F               	goto	u3011
 10321  1C4E  2C50               	goto	u3010
 10322  1C4F                     u3011:	
 10323  1C4F  2C52               	goto	l80
 10324  1C50                     u3010:	
 10325  1C50                     l2179:	
 10326                           
 10327                           ;LCD_driver.c: 32:         PORTDbits.RD7 = 1;
 10328  1C50  1788               	bsf	8,7	;volatile
 10329                           
 10330                           ;LCD_driver.c: 33:     }
 10331  1C51  2C53               	goto	l82
 10332  1C52                     l80:	
 10333                           ;LCD_driver.c: 34:     else{
 10334                           
 10335                           
 10336                           ;LCD_driver.c: 35:         PORTDbits.RD7 = 0;
 10337  1C52  1388               	bcf	8,7	;volatile
 10338  1C53                     l82:	
 10339  1C53  0008               	return
 10340  1C54                     __end_of_Lcd_SetBit:	
 10341                           
 10342                           	psect	text32
 10343  1BDD                     __ptext32:	
 10344 ;; *************** function _ADC_Init *****************
 10345 ;; Defined at:
 10346 ;;		line 58 in file "main.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10360 ;;      Params:         0       0       0       0       0
 10361 ;;      Locals:         0       0       0       0       0
 10362 ;;      Temps:          0       0       0       0       0
 10363 ;;      Totals:         0       0       0       0       0
 10364 ;;Total ram usage:        0 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_main
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _ADC_Init
 10375  1BDD                     _ADC_Init:	
 10376  1BDD                     l2059:	
 10377                           ;incstack = 0
 10378                           ; Regs used in _ADC_Init: [wreg]
 10379                           
 10380                           
 10381                           ;main.c: 61:     TRISA = 0x1;
 10382  1BDD  3001               	movlw	1
 10383  1BDE  1683               	bsf	3,5	;RP0=1, select bank1
 10384  1BDF  1303               	bcf	3,6	;RP1=0, select bank1
 10385  1BE0  0085               	movwf	5	;volatile
 10386                           
 10387                           ;main.c: 64:     ANSEL = 0x1;
 10388  1BE1  3001               	movlw	1
 10389  1BE2  1683               	bsf	3,5	;RP0=1, select bank3
 10390  1BE3  1703               	bsf	3,6	;RP1=1, select bank3
 10391  1BE4  0088               	movwf	8	;volatile
 10392                           
 10393                           ;main.c: 67:     ADCON0 = 0x1;
 10394  1BE5  3001               	movlw	1
 10395  1BE6  1283               	bcf	3,5	;RP0=0, select bank0
 10396  1BE7  1303               	bcf	3,6	;RP1=0, select bank0
 10397  1BE8  009F               	movwf	31	;volatile
 10398                           
 10399                           ;main.c: 68:     ADCON1 = 0x80;
 10400  1BE9  3080               	movlw	128
 10401  1BEA  1683               	bsf	3,5	;RP0=1, select bank1
 10402  1BEB  1303               	bcf	3,6	;RP1=0, select bank1
 10403  1BEC  009F               	movwf	31	;volatile
 10404  1BED                     l47:	
 10405  1BED  0008               	return
 10406  1BEE                     __end_of_ADC_Init:	
 10407  007E                     btemp	set	126	;btemp
 10408  007E                     wtemp0	set	126


Data Sizes:
    Strings     24
    Constant    144
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     39      61
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> char_data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[15]), char_data(BANK1[16]), 


Critical Paths under _main in COMMON

    _Lcd_Start->_Lcd_Cmd
    _ADC_Read->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Lcd_Cmd->_Timer_Delay

Critical Paths under _main in BANK0

    _main->_ADC_Read
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_ADC_Read
    _ADC_Read->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   38191
                           _ADC_Init
                           _ADC_Read
                          _Lcd_Clear
                          _Lcd_Start
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            0     0      0     198
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     5      0   37883
                                             78 BANK0      1     1      0
                                             35 BANK1      4     4      0
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                        _Timer_Delay
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   30437
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     532
                                              2 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Print_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              1     1      0     110
                                              1 COMMON     1     1      0
                         _Lcd_SetBit
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (3) _Timer_Delay                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_SetBit
         _Timer_Delay
     _Lcd_Print_String
       _Lcd_Print_Char
         _Lcd_SetBit
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_SetBit
         _Timer_Delay
     _Timer_Delay
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
     _Lcd_SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3D       7       76.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 11 15:47:04 2019

              ___fldiv@aexp 0057                ___fldiv@bexp 0056                           pc 0002  
              ___fldiv@sign 004F                          l51 0881                          l52 0884  
                        l47 1BED                          l80 1C52                          l57 093F  
                        l82 1C53                          l74 1C3B                          l75 1C3E  
                        l76 1C44                          l77 1C45                          l85 1C16  
                        l78 1C4B                          l94 1E60                          l79 1C4C  
                        l88 1BDC                          l97 1D3A                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
                       l100 002D                         l111 1BFF                         l112 1C00  
                       l106 1D7C                         l212 0238                         l109 1BFB  
                       l233 0256                         l315 1F1A                         l219 0C9E  
                       l500 129F                         l432 1F83                         l281 1C9C  
                       l265 0675                         l610 1682                         l450 12FF  
                       l258 0631                         l507 12CF                         l275 07F2  
                       l612 1659                         l460 138D                         l453 135D  
                       l445 0862                         l470 10E0                         l606 15DB  
                       l702 0FFF                         l631 1771                         l535 1EB4  
                       l279 1C84                         l640 17D1                         l465 1DDD  
                       l473 114C                         l449 139A                         l466 1DF9  
                       l474 1165                         l482 1FFF                         l714 0FF3  
                       l467 1E0E                         l627 174D                         l619 17FF  
                       l652 1C77                         l492 1FFF                         l740 1188  
                       l708 0F6B                         l637 1793                         l662 13F7  
                       l478 10C3                         l742 121F                         l664 1577  
                       l648 17F3                         l496 12DC                         l649 17FF  
                       l489 1FEA                         l753 11E9                         l497 124E  
                       l585 1DC0                         l754 11F5                         l746 11CD  
                       l763 1CB1                         l595 1CFD                         l684 155B  
                       l765 1CC3                         l686 156B                         l678 14E9  
                       fsr0 0004                         indf 0000                ___awmod@sign 0076  
              ___flmul@aexp 0036                ___flmul@bexp 0037                 _sprintf$840 00AA  
              ___flmul@sign 0031                ___flmul@temp 003C                ___flmul@prod 0038  
              ___fltol@exp1 005B                        l3001 11ED                        l2201 1F41  
                      l3011 1217                        l3003 11F7                        l2211 1F67  
                      l2203 1F48                        l3005 120D                        l2301 1CE6  
                      l2221 1F7F                        l2213 1F68                        l2205 1F4C  
                      l3101 0521                        l3021 0247                        l3015 1BD0  
                      l2311 1578                        l3007 1212                        l2151 1CA0  
                      l2303 1CEC                        l2215 1F6F                        l2207 1F50  
                      l2231 0814                        l3111 0572                        l3103 056E  
                      l3031 0272                        l3023 024E                        l3201 1E3E  
                      l2401 166C                        l2321 158F                        l2313 157F  
                      l3009 1216                        l2153 1CA7                        l2305 1CF3  
                      l2209 1F61                        l2217 1F75                        l2241 0828  
                      l2233 0816                        l2225 080A                        l3121 05C6  
                      l3105 0570                        l3041 02AD                        l3033 027E  
                      l3025 0253                        l3017 023C                        l2059 1BDD  
                      l2171 1C33                        l2163 1BEE                        l3211 1D3E  
                      l3203 1E4F                        l2411 168B                        l2403 166D  
                      l2331 15A7                        l2323 1594                        l2315 1585  
                      l2155 1CAB                        l2307 1CF9                        l2219 1F7A  
                      l2251 0847                        l2243 082F                        l2235 081A  
                      l2227 080B                        l3131 0642                        l3123 05CB  
                      l3115 05A9                        l3051 02F2                        l3043 02C6  
                      l3035 0282                        l3019 0241                        l2173 1C37  
                      l2165 1BF4                        l3213 1D5A                        l3205 1E54  
                      l3301 14A2                        l3221 13A8                        l2501 17FA  
                      l2421 16B3                        l2405 1676                        l2341 15BD  
                      l2333 15AC                        l2325 159C                        l2317 1589  
                      l2157 1CBA                        l2149 1C9E                        l2181 1F1B  
                      l2253 084E                        l2245 0833                        l2237 081F  
                      l2229 080F                        l3141 066F                        l3133 0646  
                      l3125 0606                        l3117 05B3                        l3061 0328  
                      l3053 02F8                        l3045 02CA                        l3037 0290  
                      l3029 0258                        l2175 1C42                        l2167 1BF8  
                      l3215 1D60                        l3207 1E5A                        l3311 14BA  
                      l3303 14AA                        l3231 13BF                        l3223 13AC  
                      l2503 17FE                        l2431 16CC                        l2423 16BC  
                      l2415 1694                        l2407 167A                        l2351 15D1  
                      l2343 15BE                        l2335 15B2                        l2327 159D  
                      l2319 158A                        l2159 1CBF                        l2511 0CB0  
                      l2271 1D8F                        l2263 1D7D                        l2191 1F2D  
                      l2183 1F1E                        l2247 0837                        l2239 0825  
                      l2255 0854                        l3151 06AC                        l3143 067E  
                      l3135 064C                        l3127 0625                        l3119 05BF  
                      l3071 03CF                        l3063 0347                        l3055 030B  
                      l3047 02CE                        l3039 0294                        l2177 1C49  
                      l2169 1BFA                        l3209 1D3B                        l3321 14D2  
                      l3313 14C3                        l3305 14AC                        l3241 13D5  
                      l3233 13C0                        l3225 13AD                        l3217 139B  
                      l2441 1730                        l2425 16BE                        l2417 16AB  
                      l2409 1686                        l2433 16D1                        l2361 15ED  
                      l2345 15C3                        l2353 15D3                        l2337 15B3  
                      l2329 159F                        l2601 0F4B                        l2521 0CC5  
                      l2513 0CB1                        l2505 0C9F                        l2281 1DAF  
                      l2273 1D93                        l2265 1D7F                        l2193 1F32  
                      l2185 1F22                        l2257 0859                        l2249 0841  
                      l3153 0707                        l3161 07A8                        l3145 0683  
                      l3137 0659                        l3129 0639                        l3081 0444  
                      l3065 0392                        l3057 031E                        l3049 02E7  
                      l3073 03D7                        l3401 1C17                        l2179 1C50  
                      l3331 1501                        l3323 14E6                        l3307 14B5  
                      l3315 14C9                        l3251 13EC                        l3243 13D9  
                      l3227 13B2                        l3235 13C2                        l3219 13A2  
                      l2451 1763                        l2435 16E7                        l2443 173F  
                      l2427 16C2                        l2419 16AF                        l2371 1601  
                      l2363 15F1                        l2355 15E1                        l2347 15C8  
                      l2339 15B9                        l2603 0F4F                        l2531 0CDD  
                      l2523 0CCD                        l2515 0CB6                        l2507 0CA6  
                      l2283 1DB6                        l2275 1D97                        l2267 1D85  
                      l2291 1CCA                        l2195 1F36                        l2187 1F27  
                      l2259 085E                        l3163 07B0                        l3155 0742  
                      l3147 068A                        l3139 0668                        l3091 04A6  
                      l3083 046B                        l3075 03D7                        l3067 03AB  
                      l3059 0322                        l3171 07C8                        l3403 1C1A  
                      l3341 153F                        l3333 1505                        l3317 14CD  
                      l3309 14B9                        l3261 140F                        l3253 13ED  
                      l3245 13DA                        l3237 13CA                        l3229 13B7  
                      l2461 177A                        l2453 176C                        l2445 1755  
                      l2437 1725                        l2429 16C3                        l2381 1615  
                      l2373 1605                        l2365 15F5                        l2357 15E5  
                      l2349 15D0                        l2621 0FA0                        l2613 0F70  
                      l2605 0F50                        l2541 0CF9                        l2533 0CE2  
                      l2525 0CD2                        l2517 0CBB                        l2509 0CAC  
                      l2277 1DA8                        l2269 1D88                        l2285 1DBC  
                      l2293 1CCD                        l2197 1F38                        l2189 1F29  
                      l2701 0A3F                        l3173 07D4                        l3165 07B7  
                      l3157 0761                        l3149 068E                        l3093 04C4  
                      l3085 047A                        l3077 041C                        l3069 03B4  
                      l3405 1C1F                        l3191 1E15                        l3351 1565  
                      l3343 154E                        l3335 151E                        l3327 14EE  
                      l3319 14CE                        l3271 1426                        l3247 13DF  
                      l3255 13EF                        l3239 13CF                        l2471 178A  
                      l2463 177F                        l2455 1770                        l2447 175A  
                      l2439 172B                        l2391 1626                        l2383 1619  
                      l2375 1609                        l2367 15F9                        l2359 15E9  
                      l2631 0FD7                        l2615 0F75                        l2623 0FA6  
                      l2607 0F54                        l2551 0D1C                        l2543 0CFE  
                      l2535 0CE7                        l2527 0CD8                        l2519 0CC3  
                      l2279 1DAE                        l2295 1CD4                        l2199 1F3E  
                      l2711 0AFB                        l3167 07BB                        l3159 076D  
                      l3087 0495                        l3079 0429                        l3407 1C24  
                      l3193 1E26                        l3353 1567                        l3345 1552  
                      l3329 14F3                        l3337 1524                        l3281 1452  
                      l3273 1438                        l3257 13FF                        l3265 1418  
                      l3249 13E4                        l2481 17AB                        l2473 1790  
                      l2457 1775                        l2465 1781                        l2393 163D  
                      l2385 161D                        l2377 160D                        l2369 15FD  
                      l2801 132D                        l2641 0FF7                        l2633 0FD9  
                      l2625 0FB3                        l2617 0F83                        l2609 0F68  
                      l2561 0DAA                        l2553 0D29                        l2545 0D03  
                      l2537 0CEF                        l2529 0CDC                        l2297 1CD8  
                      l2289 1CC4                        l2705 0AC7                        l3169 07C1  
                      l3097 04E3                        l3089 049E                        l3441 026A  
                      l3177 07DC                        l3361 0863                        l3409 1C29  
                      l2651 1C13                        l3195 1E2B                        l3347 155A  
                      l3339 1531                        l3283 1457                        l3291 1477  
                      l3275 1440                        l3267 141D                        l3259 140B  
                      l2491 17E3                        l2483 17AF                        l2459 1778  
                      l2467 1785                        l2395 165D                        l2387 1621  
                      l2379 1611                        l2811 1361                        l2803 133F  
                      l2635 0FE7                        l2627 0FBE                        l2619 0F87  
                      l2571 0E0C                        l2563 0DC6                        l2555 0D46  
                      l2539 0CF1                        l2299 1CDC                        l2723 0C72  
                      l3099 04EC                        l3179 07EE                        l3371 0874  
                      l2645 1C02                        l2661 0022                        l2653 0004  
                      l3197 1E31                        l3189 1E10                        l3349 1561  
                      l3293 1489                        l3285 1469                        l3277 1448  
                      l2901 10B9                        l2493 17E8                        l2485 17CD  
                      l2477 1798                        l2469 1786                        l2397 1666  
                      l2389 1625                        l2805 134D                        l2741 1255  
                      l2733 123C                        l2637 0FEB                        l2629 0FCD  
                      l2581 0E9C                        l2573 0E29                        l2565 0DCF  
                      l2557 0D62                        l2549 0D0C                        l2717 0BE3  
                      l2709 0AF4                        l3381 08FF                        l3373 0888  
                      l2647 1C05                        l2663 0023                        l2655 000E  
                      l3199 1E38                        l3295 148A                        l3287 146D  
                      l3279 1450                        l2903 10C1                        l2495 17E9  
                      l2487 17D6                        l2479 179D                        l2399 1668  
                      l2911 1F91                        l2831 1C78                        l2807 134E  
                      l2751 1286                        l2743 1264                        l2727 1220  
                      l2639 0FEC                        l2591 0F2E                        l2583 0EC9  
                      l2575 0E42                        l2567 0DDF                        l2559 0D8E  
                      l2671 0037                        l2719 0BEA                        l3383 0907  
                      l3375 088E                        l3367 0867                        l3359 1CFE  
                      l2649 1C0B                        l2665 0029                        l2657 0011  
                      l3297 1498                        l3289 146E                        l2905 10C3  
                      l2497 17ED                        l2489 17DB                        l2921 1FB8  
                      l2841 1C98                        l2833 1C7A                        l2825 1382  
                      l2817 1369                        l2809 1357                        l2753 1290  
                      l2745 1266                        l2729 1233                        l2593 0F37  
                      l2585 0EEF                        l2577 0E5F                        l2569 0DFC  
                      l3385 0910                        l3377 08E4                        l3369 086C  
                      l2667 002C                        l2659 001F                        l3299 149C  
                      l2499 17EF                        l2931 1FC6                        l2923 1FBA  
                      l2915 1F9A                        l2851 1ED5                        l2835 1C7E  
                      l2827 1392                        l2819 137B                        l2755 1291  
                      l2747 126F                        l2739 124F                        l2595 0F3B  
                      l2587 0F17                        l2579 0E8C                        l2683 01F5  
                      l2691 0949                        l3395 0925                        l3387 0918  
                      l3379 08FA                        l2941 1FEF                        l2925 1FBE  
                      l2933 1FD8                        l2917 1FAF                        l2909 1F84  
                      l2861 1F03                        l2853 1ED9                        l2845 1EB5  
                      l2837 1C8B                        l2781 12EA                        l2773 12C4  
                      l2765 12AB                        l2757 1299                        l2749 1278  
                      l2597 0F3C                        l2589 0F20                        l2677 0144  
                      l2669 0031                        l2693 0950                        l3397 092A  
                      l3389 0921                        l2871 1DD5                        l2943 1FF4  
                      l2919 1FB0                        l2863 1F0C                        l2855 1EE2  
                      l2847 1EC5                        l2951 1E79                        l2839 1C92  
                      l2791 1300                        l2775 12D4                        l2759 12A3  
                      l2767 12BD                        l2599 0F45                        l2679 014A  
                      l2687 0943                        l3399 0932                        l2873 1DF1  
                      l2881 10C4                        l2857 1EF4                        l2849 1EC8  
                      l2865 1F12                        l2953 1E7D                        l2961 1EAC  
                      l2945 1E61                        l2793 1308                        l2785 12F3  
                      l2689 0947                        l2875 1E0B                        l2891 1124  
                      l2883 10D8                        l2939 1FDF                        l2859 1F02  
                      l2955 1E8F                        l2947 1E69                        l2971 1167  
                      l2795 1319                        l2779 12DD                        l2699 0A38  
                      l2877 1E0D                        l2869 1DC1                        l2893 1128  
                      l2885 10F4                        l2965 1C54                        l2957 1E9D  
                      l2949 1E6C                        l2973 116C                        l2797 131B  
                      l2895 1162                        l2887 10FC                        l2967 1C58  
                      l2959 1EA6                        l2991 11B6                        l2983 1199  
                      l2975 1170                        l2799 1324                        l2897 1164  
                      l2889 1100                        l2993 11C4                        l2985 119E  
                      l2977 1180                        l2995 11D4                        l2987 11AB  
                      l2979 1190                        l2997 11DF                        l2989 11B2  
                      l2999 11E3                        STR_1 10AF                        STR_2 10A0  
                      u3000 1C49                        u3001 1C48                        u3010 1C50  
                      u3011 1C4F                        u3100 1F75                        u3020 1F22  
                      u3101 1F74                        u3021 1F21                        u3110 1F7A  
                      u3030 1F2D                        u3111 1F79                        u3031 1F2C  
                      u3040 1F3E                        u3200 0859                        u3120 080F  
                      u4001 0EE1                        u3041 1F3D                        u3201 0858  
                      u3121 080E                        u4010 0EFD                        u4002 0EE8  
                      u3210 1D85                        u3130 081A                        u4003 0EEF  
                      u3211 1D84                        u3131 0819                        u4100 0F6F  
                      u3300 1CDC                        u3060 1F50                        u3140 0825  
                      u4101 0F6E                        u4021 0F09                        u3301 1CDB  
                      u3061 1F4F                        u3141 0824                        u4110 0F75  
                      u4022 0F10                        u3230 1D97                        u3310 1CE6  
                      u4111 0F74                        u4023 0F17                        u4015 0EF8  
                      u3231 1D96                        u3311 1CE5                        u3055 1F42  
                      u3400 15C8                        u5000 1FF4                        u4120 0F87  
                      u3080 1F61                        u3160 0837                        u3401 15C7  
                      u5001 1FF3                        u4121 0F86                        u3225 1D89  
                      u3081 1F60                        u3161 0836                        u3410 15E1  
                      u5010 1E69                        u4130 0F96                        u4050 0F3B  
                      u3250 1DA8                        u3330 1CF9                        u3170 0841  
                      u3411 15E0                        u5011 1E68                        u4051 0F3A  
                      u4035 0F19                        u3251 1DA7                        u3331 1CF8  
                      u3315 1CE2                        u3075 1F51                        u3171 0840  
                      u3155 0829                        u3500 1686                        u3420 15E5  
                      u3340 1589                        u4140 0FB3                        u4220 014A  
                      u3501 1685                        u3421 15E4                        u3341 1588  
                      u4141 0FB2                        u4045 0F30                        u3245 1D98  
                      u3325 1CED                        u4221 0149                        u4205 00AE  
                      u3085 1F5D                        u3510 168B                        u3430 163D  
                      u3350 158F                        u5030 1E7D                        u5110 11B1  
                      u4150 0FCD                        u4070 0F4F                        u3270 1DBC  
                      u3190 0854                        u4310 0A3F                        u3511 168A  
                      u3431 163C                        u3351 158E                        u5031 1E7C  
                      u5111 11B0                        u4151 0FCC                        u4135 0F91  
                      u4071 0F4E                        u3271 1DBB                        u3255 1DA4  
                      u4215 0103                        u3095 1F69                        u3191 0853  
                      u3175 083D                        u4311 0A3E                        _PIE1 008C  
                      u3600 1730                        u3440 1648                        u3360 1594  
                      u5040 1E8F                        u5200 1216                        u4160 0FEB  
                      u4080 0F54                        u3280 1CCA                        u3601 172F  
                      u3521 169D                        u3441 1646                        u3361 1593  
                      u5041 1E8E                        u5025 1E6E                        u5201 1215  
                      u5105 11A3                        u4161 0FEA                        u4145 0FAF  
                      u4081 0F53                        u4065 0F3E                        u3265 1DB0  
                      u3281 1CC9                        u3185 0848                        u4305 09F7  
                      u3610 1755                        u3530 16AF                        u3522 16A4  
                      u3450 1649                        u3370 15B2                        u5130 11D3  
                      u4090 0F68                        u5210 0247                        u3611 1754  
                      u3531 16AE                        u3523 16AB                        u3435 1639  
                      u3371 15B1                        u5131 11D2                        u4155 0FC9  
                      u4091 0F67                        u4235 0167                        u5211 0246  
                      u3700 1797                        u3620 175A                        u3540 16B3  
                      u3460 165D                        u3380 15BD                        u5060 1EAC  
                      u4500 12AA                        u4180 0037                        u4260 0947  
                      u5300 046B                        u5220 027E                        u3701 1796  
                      u3621 1759                        u3541 16B2                        u3461 165C  
                      u3381 15BC                        u5061 1EAB                        u5045 1E8B  
                      u5125 11C5                        u4501 12A9                        u4245 01B4  
                      u4181 0036                        u4405 0BFD                        u4325 0A52  
                      u4261 0946                        u5301 046A                        u5221 027D  
                      u3710 179D                        u3550 16C2                        u3470 166C  
                      u3390 15C3                        u5150 11E3                        u5070 116C  
                      u4430 1233                        u4350 0AFB                        u4270 0950  
                      u5310 047A                        u5230 02AD                        u4175 0014  
                      u3711 179C                        u3551 16C1                        u3471 166B  
                      u3391 15C2                        u5055 1E9E                        u5151 11E2  
                      u5071 116B                        u4431 1232                        u3295 1CCE  
                      u4255 0200                        u4415 0C39                        u4351 0AFA  
                      u4335 0A8E                        u4271 094F                        u5311 0479  
                      u5231 02AC                        u3720 17AF                        u3640 1770  
                      u5160 11E9                        u5080 1170                        u4520 12BC  
                      u4440 124D                        u3800 0CB0                        u5400 0668  
                      u5320 0495                        u5240 02E7                        u3721 17AE  
                      u3641 176F                        u5161 11E8                        u5145 11D8  
                      u5081 116F                        u4521 12BB                        u4441 124C  
                      u3801 0CAF                        u4425 0C75                        u4345 0ACA  
                      u5401 0667                        u5321 0494                        u5241 02E6  
                      u3730 17BE                        u3650 1775                        u3570 16E7  
                      u3490 1682                        u5170 11ED                        u5090 1190  
                      u4610 135D                        u4530 12C3                        u3810 0CB6  
                      u5410 0683                        u5250 0322                        u3651 1774  
                      u3635 1765                        u3571 16E6                        u3491 1681  
                      u5171 11EC                        u5091 118F                        u4611 135C  
                      u4531 12C2                        u4515 12AC                        u3811 0CB5  
                      u4195 0054                        u5411 0682                        u5315 0476  
                      u5251 0321                        u5500 1E3E                        u3740 17CD  
                      u3660 177F                        u5180 1202                        u4620 1361  
                      u4460 1286                        u2940 1CAB                        u3820 0CBB  
                      u5340 05A8                        u5260 03AB                        u5501 1E3D  
                      u3741 17CC                        u3661 177E                        u3581 16FE  
                      u3573 16E3                        u3565 16C5                        u3485 166F  
                      u4621 1360                        u4605 1350                        u4461 1285  
                      u2941 1CAA                        u3901 0D9C                        u3821 0CBA  
                      u4365 0B1B                        u4285 0970                        u5405 0664  
                      u5341 05A7                        u5261 03AA                        u3750 17D6  
                      u3670 1785                        u3590 1712                        u3582 16FF  
                      u5190 1212                        u4630 1368                        u4550 12D4  
                      u3902 0DA3                        u3830 0CDC                        u4390 0BEA  
                      u5350 05B3                        u5270 03CF                        u3751 17D5  
                      u3735 17B9                        u3671 1784                        u3591 1713  
                      u3583 1704                        u5191 1211                        u4631 1367  
                      u4551 12D3                        u4455 1271                        u3911 0DB8  
                      u3903 0DAA                        u3831 0CDB                        u4391 0BE9  
                      u4375 0B57                        u4295 09AC                        u5351 05B2  
                      u5335 0575                        u5271 03CE                        u5520 1D48  
                      u5600 13E4                        u4800 1DD5                        u3760 17DB  
                      u3680 178A                        u3592 1718                        u3584 1705  
                      u4720 1C98                        u4560 12EA                        u4480 129F  
                      u2960 1CBF                        u3912 0DBF                        u3840 0CE2  
                      u5440 07AF                        u5360 05BF                        u5280 0429  
                      u5601 13E3                        u4801 1DD4                        u3761 17DA  
                      u3681 1789                        u3593 1719                        u3585 170A  
                      u4721 1C97                        u4705 1C85                        u5185 11FD  
                      u4561 12E9                        u4545 12C6                        u4481 129E  
                      u4465 1282                        u2961 1CBE                        u3913 0DC6  
                      u3841 0CE1                        u4385 0BA2                        u5441 07AE  
                      u5425 070A                        u5361 05BE                        u5345 05A4  
                      u5281 0428                        u2970 1BFF                        u5530 1D6A  
                      u5610 13FF                        u4810 1DF1                        u3770 17E8  
                      u3690 1790                        u3586 170B                        u4730 1EC5  
                      u4650 137A                        u4570 12FE                        u4490 12A3  
                      u3850 0CE7                        u5450 07C7                        u5290 0444  
                      u2971 1BFE                        u5515 1E46                        u5611 13FE  
                      u4811 1DF0                        u3771 17E7                        u3691 178F  
                      u4731 1EC4                        u4715 1C8C                        u4651 1379  
                      u4571 12FD                        u4491 12A2                        u4475 1292  
                      u2955 1CB2                        u3931 0DEE                        u3851 0CE6  
                      u5451 07C6                        u5435 0770                        u5291 0443  
                      u2980 1C37                        u5540 1D7C                        u5700 14AA  
                      u5620 141D                        u4820 1E0B                        u4900 10C1  
                      u3780 17ED                        u4660 1381                        u3932 0DF5  
                      u3860 0CFE                        u5460 07D4                        u5380 0638  
                      u2981 1C36                        u5541 1D7B                        u5701 14A9  
                      u5621 141C                        u4821 1E0A                        u4901 10C0  
                      u3781 17EC                        u4661 1380                        u4645 136A  
                      u3941 0E1B                        u3933 0DFC                        u3925 0DC8  
                      u3861 0CFD                        u5461 07D3                        u5381 0637  
                      u5285 0425                        u2990 1C42                        u5630 1457  
                      u5550 13AC                        u4830 10D8                        u3790 17FE  
                      u4910 1F91                        u4750 1ED9                        u4590 133F  
                      u3942 0E22                        u3870 0D03                        u5470 07EE  
                      u5390 0659                        u2991 1C41                        u5631 1456  
                      u5551 13AB                        u4831 10D7                        u3791 17FD  
                      u4911 1F90                        u4751 1ED8                        u4591 133E  
                      u3943 0E29                        u3871 0D02                        u5471 07ED  
                      u5391 0658                        u5375 05CE                        u5480 1E15  
                      u5800 1514                        u5720 14B9                        u5560 13B2  
                      u4840 10F4                        u4920 1FA8                        u4680 1392  
                      u5481 1E14                        u5721 14B8                        u5561 13B1  
                      u4825 1E07                        u4841 10F3                        u4745 1ECA  
                      u4681 1391                        u4585 1326                        u3961 0E51  
                      u3881 0D54                        u5810 1531                        u5570 13B7  
                      u4850 1100                        u4930 1FBE                        u4770 1EF4  
                      u4690 1C7E                        u3962 0E58                        u3882 0D5B  
                      u5811 1530                        u5715 14AE                        u5571 13B6  
                      u4851 10FF                        u4931 1FBD                        u4771 1EF3  
                      u4691 1C7D                        u4675 1384                        u4595 133B  
                      u3971 0E7E                        u3963 0E5F                        u3955 0E2B  
                      u3891 0D70                        u3883 0D62                        u5395 0655  
                      u5820 154E                        u5740 14CD                        u5660 146D  
                      u5580 13D9                        u4940 1FC5                        u3972 0E85  
                      u3892 0D77                        u5821 154D                        u5805 150F  
                      u5741 14CC                        u5661 146C                        u5645 1459  
                      u5581 13D8                        u4861 110F                        u4941 1FC4  
                      u4925 1FA3                        u4765 1EDB                        u3981 0EAB  
                      u3973 0E8C                        u3893 0D7E                        u5830 1565  
                      u5750 14D2                        u5590 13DF                        u4870 1128  
                      u4862 1110                        u4790 1F12                        u3990 0ED5  
                      u3982 0EB2                        u5495 1E1D                        u5831 1564  
                      u5815 152D                        u5751 14D1                        u5735 14BC  
                      u5655 1462                        u5591 13DE                        u4871 1127  
                      u4863 1115                        u4791 1F11                        u4775 1EF0  
                      u3983 0EB9                        u5760 14E6                        u5680 1489  
                      u4864 1116                        u4960 1FD7                        u5840 0881  
                      u5825 154A                        u5761 14E5                        u5681 1488  
                      u4881 1137                        u4865 111B                        u4961 1FD6  
                      u4785 1F04                        u5841 0880                        u5770 14ED  
                      u5690 14A2                        u4890 1162                        u4882 1138  
                      u4866 111C                        u4970 1FDE                        u5850 0888  
                      u5771 14EC                        u5691 14A1                        u5675 1470  
                      u4891 1161                        u4883 113D                        u4971 1FDD  
                      u4955 1FC7                        u3995 0ED0                        u5851 0887  
                      u5780 14F3                        u4884 113E                        u5860 093F  
                      u5781 14F2                        u5685 1485                        u4885 1143  
                      u5861 093E                        u5845 087D                        u5790 1505  
                      u4886 1144                        u4990 1FEF                        u5791 1504  
                      u4895 115E                        u4991 1FEE                        u4985 1FE1  
                      u5865 093B                        _main 1C17                        btemp 007E  
          __end_of_ADC_Init 1BEE            __end_of_ADC_Read 0940                        start 0000  
           ___fldiv@new_exp 0050          Lcd_Print_Char@data 0074             __end_of_Lcd_Cmd 1C17  
                _Lcd_SetBit 1C32               ___fltol@sign1 005A             __end_of___fladd 1800  
                     ?_main 0070             __end_of___fldiv 1578             __end_of___awdiv 1F84  
           __end_of___flneg 10C4               __CFG_WDTE$OFF 0000             __end_of___awmod 0863  
           __end_of___flmul 1000             __end_of___flsub 1C78             __end_of___fltol 2000  
                     _ANSEL 0188             __end_of___lldiv 1F1B             ___awdiv@divisor 0077  
                     _T1CON 0010             __end_of___llmod 1EB5             __end_of___lwdiv 1DC1  
           __end_of___lwmod 1CFE             ___awdiv@counter 0020                       _TMR1H 000F  
                     _TMR1L 000E     __size_of_Lcd_Set_Cursor 0052                       _TRISA 0085  
                     _TRISD 0088             __end_of_dpowers 10A0                       _scale 0940  
                     pclath 000A   __size_of_Lcd_Print_String 0042                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07F3     __size_of_Lcd_Print_Char 002B  
           __initialization 07F3                __end_of_main 1C32                      ??_main 007E  
        __size_of_Lcd_Clear 000D        __size_of__tdiv_to_l_ 00BD          __size_of_Lcd_Start 003D  
                    _ADCON0 001F                      _ADCON1 009F            ___llmod@dividend 0074  
                    ?_scale 003E                      _ADRESH 001E                      _ADRESL 009E  
          ___awdiv@dividend 0079                   ADC_Read@i 00C3                   ??_Lcd_Cmd 0071  
          __end_of___xxtofl 1220            __end_of__powers_ 1044                      ___flge 10C4  
                    ___fleq 1DC1                   ??___fladd 005A                      ___wmul 1C78  
                 ??___fldiv 0046                   ??___awdiv 007B                   ??___flneg 0074  
                 ??___awmod 0074                   ??___flmul 002C                   ??___flsub 007E  
                 ??___fltol 0055                   ??___lldiv 0078                   ??___llmod 0078  
                 ??___lwdiv 007A                   ??___lwmod 0074                 ?_Lcd_SetBit 0070  
                    _fround 002E            ___awdiv@quotient 0022               ??_Timer_Delay 0070  
           ___awmod@divisor 0070             ___awmod@counter 0075          __size_of__Umul8_16 0027  
                 ?_ADC_Init 0070                   ?_ADC_Read 0070                   ??_sprintf 00A5  
           Lcd_Set_Cursor@y 0077             Lcd_Set_Cursor@z 0076                  ___flge@ff1 0070  
                ___flge@ff2 0074                ___xxtofl@arg 007A                ___xxtofl@exp 0079  
              ___xxtofl@val 0070                  ___fleq@ff1 0070                  ___fleq@ff2 0074  
   __end_of__initialization 07FC                  ___flneg@f1 0070           __end_of_Lcd_Clear 1BDD  
                ___fltol@f1 0051           __end_of_Lcd_Start 1D3B              __pcstackCOMMON 0070  
             __end_of_scale 0C9F              _Lcd_Set_Cursor 1E0F                  __div_to_l_ 12DD  
                ??_ADC_Init 0070                  ??_ADC_Read 006E         __end_of_Timer_Delay 1C01  
           __div_to_l_@exp1 0025             __div_to_l_@cntr 0024                     ??_scale 0042  
           __div_to_l_@quot 0020                  __pbssBANK1 00C7            _Lcd_Print_String 1D3B  
       __size_of_Lcd_SetBit 0022               __div_to_l_@f1 0070               __div_to_l_@f2 0074  
            _Lcd_Print_Char 0003           __end_of__Umul8_16 1CC4                  __pmaintext 1C17  
                   ?___flge 0070                     ?___fleq 0070                     ?___wmul 0070  
                   ?_fround 003E          Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 1E61  
                 ?___xxtofl 0070                  __stringtab 1000                     _Lcd_Cmd 1C01  
    __end_of_Lcd_Print_Char 002E           __end_of__npowers_ 1078                ADC_Read@i_79 00C5  
           __size_of___flge 00A2             __size_of___fleq 004E                     ___fladd 1578  
                   ___fldiv 139B                     ___awdiv 1F1B                     ___flneg 10B9  
                   ___awmod 080A                     ___flmul 0C9F                     ___flsub 1C54  
                   ___fltol 1F84                     ___lldiv 1EB5             __size_of___wmul 0025  
                   ___llmod 1E61                     ___lwdiv 1D7D                  _fround$837 004D  
                _fround$838 0049                     ___lwmod 1CC4             __size_of_fround 020B  
           ?_Lcd_Set_Cursor 0072                 _Timer_Delay 1BEE                     __ptext1 1CFE  
                   __ptext2 0863                     __ptext3 0239                     __ptext4 0940  
                   __ptext5 080A                     __ptext6 1F1B                     __ptext7 002E  
                   __ptext8 1CC4                     __ptext9 1D7D                 ?__div_to_l_ 0070  
                   _dpowers 1078                  ??___xxtofl 0074            ___awmod@dividend 0072  
                   _sprintf 0239                     clrloop0 0803        end_of_initialization 07FC  
           ?_Lcd_Print_Char 0070             ___lldiv@divisor 0070             ___lldiv@counter 007D  
            __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0074                ??_Lcd_SetBit 0070  
             ??__tdiv_to_l_ 0078                   _PORTDbits 0008                 ___fladd@grs 0065  
             ___xxtofl@sign 0078                 ___fldiv@grs 0052                 ___fldiv@rem 004B  
         __size_of_ADC_Init 0011           __size_of_ADC_Read 00DD                 ___flmul@grs 0032  
        __end_of_Lcd_SetBit 1C54         __size_of__div_to_l_ 00BE                   _Lcd_Clear 1BD0  
                 _Lcd_Start 1CFE              __end_of___flge 1166              __end_of___fleq 1E0F  
            __end_of___wmul 1C9D    __end_of_Lcd_Print_String 1D7D           _scaled_float_data 00C7  
            __end_of_fround 0239         start_initialization 07F3         __end_of__tdiv_to_l_ 12DD  
           ___llmod@divisor 0070           Lcd_Print_String@a 0075           Lcd_Print_String@i 007A  
           ___llmod@counter 0079                  ?_Lcd_Clear 0070                    ??___flge 0078  
                  ??___fleq 0078                    ??___wmul 0074                  ?_Lcd_Start 0070  
                 __Umul8_16 1C9D                    ??_fround 0042  Lcd_Print_Char@Lower_Nibble 0072  
             sprintf@tmpval 00B9                   ___fladd@a 0056                   ___fladd@b 0052  
                fround@prec 0051                   ___fldiv@a 003E                   ___fldiv@b 0042  
                 ___flmul@a 0028                   ___flmul@b 0024                   ___flsub@a 0066  
                 ___flsub@b 006A                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0           __size_of___xxtofl 00BA                    ?_Lcd_Cmd 0070  
               sprintf@flag 00AF                 sprintf@eexp 00B7                 sprintf@fval 00BE  
               sprintf@prec 00B1                   _char_data 00CD            ___lwdiv@dividend 0078  
          ??_Lcd_Set_Cursor 0073                    ?___fladd 0052                    ?___fldiv 003E  
                  ?___awdiv 0077                    ?___flneg 0070                    ?___awmod 0070  
                  ?___flmul 0024                    ?___flsub 0066                    ?___fltol 0051  
                  ?___lldiv 0070                    ?___llmod 0070                   __npowers_ 1044  
                ?__Umul8_16 0070                    ?___lwdiv 0076                    ?___lwmod 0070  
              ?_Timer_Delay 0070                   __pstrings 1000                 __tdiv_to_l_ 1220  
              ??__div_to_l_ 0078                    _ADC_Init 1BDD                    _ADC_Read 0863  
                 _scale$839 004C            ??_Lcd_Print_Char 0071            ___lwdiv@quotient 007B  
                  ?_sprintf 00A0              __size_of_scale 035F              ___wmul@product 0074  
                 clear_ram0 0802                    Lcd_Cmd@a 0071                    _PIR1bits 000C  
        __end_of__div_to_l_ 139B                 ??_Lcd_Clear 0072                 ??_Lcd_Start 0072  
               __stringbase 100F           ___wmul@multiplier 0070        Lcd_Set_Cursor@column 0072  
          __size_of_Lcd_Cmd 0016                 ??__Umul8_16 0072            __size_of___fladd 0288  
          __size_of___fldiv 01DD            __size_of___awdiv 0069            __size_of___flneg 000B  
          __size_of___awmod 0059            __size_of___flmul 0361            __size_of___flsub 0024  
          __size_of___fltol 007C            __size_of___lldiv 0066            __size_of___llmod 0054  
          __size_of___lwdiv 0044            __size_of___lwmod 003A          __end_of__stringtab 1010  
         ?_Lcd_Print_String 0075                  sprintf@val 00B3                    ___xxtofl 1166  
        ??_Lcd_Print_String 0077             ___lwdiv@divisor 0076             ___lwdiv@counter 007D  
                  __ptext10 0C9F                    __ptext11 1C9D                    __ptext20 1578  
                  __ptext12 1220                    __ptext21 10B9                    __ptext13 12DD  
                  __ptext30 1BEE                    __ptext22 10C4                    __ptext14 1166  
                  __ptext31 1C32                    __ptext23 1DC1                    __ptext15 1C78  
                  __ptext32 1BDD                    __ptext24 139B                    __ptext16 1E61  
                  __ptext25 1E0F                    __ptext17 1EB5                    __ptext26 1D3B  
                  __ptext18 1F84                    __ptext27 0003                    __ptext19 1C54  
                  __ptext28 1BD0                    __ptext29 1C01                    __powers_ 1010  
          __size_of_sprintf 05BA               __size_of_main 001B                    _int_data 00CB  
Lcd_Print_Char@Upper_Nibble 0073        __size_of_Timer_Delay 0013                    scale@scl 0050  
                 sprintf@ap 00AE            __tdiv_to_l_@exp1 0025            __tdiv_to_l_@cntr 0024  
                 sprintf@sp 00BD            __tdiv_to_l_@quot 0020            ___lwmod@dividend 0072  
          ___lldiv@dividend 0074                   stringcode 100A          Lcd_Set_Cursor@temp 0078  
              ?__tdiv_to_l_ 0070      __Umul8_16@multiplicand 0070                    sprintf@c 00C2  
                  sprintf@f 00A0            ___lldiv@quotient 0079             ___lwmod@divisor 0070  
           ___lwmod@counter 0075                    stringdir 100A                    stringtab 1000  
         Lcd_Set_Cursor@row 0075               ___fladd@signs 0062                ___fladd@aexp 0063  
              ___fladd@bexp 0064        __Umul8_16@multiplier 0078           __Umul8_16@product 0074  
