

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 11 09:12:28 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	idataBANK0
   206  0714                     __pidataBANK0:	
   207                           
   208                           ;initializer for main@F1269
   209  0714  343F               	retlw	63
   210  0715  3400               	retlw	0
   211  0716  3406               	retlw	6
   212  0717  3400               	retlw	0
   213  0718  345B               	retlw	91
   214  0719  3400               	retlw	0
   215  071A  344F               	retlw	79
   216  071B  3400               	retlw	0
   217  071C  3466               	retlw	102
   218  071D  3400               	retlw	0
   219  071E  346D               	retlw	109
   220  071F  3400               	retlw	0
   221  0720  347D               	retlw	125
   222  0721  3400               	retlw	0
   223  0722  3407               	retlw	7
   224  0723  3400               	retlw	0
   225  0724  347F               	retlw	127
   226  0725  3400               	retlw	0
   227  0726  346F               	retlw	111
   228  0727  3400               	retlw	0
   229  000C                     _PIR1bits	set	12
   230  0010                     _T1CON	set	16
   231  000F                     _TMR1H	set	15
   232  000E                     _TMR1L	set	14
   233  0005                     _PORTAbits	set	5
   234  0007                     _PORTC	set	7
   235  008C                     _PIE1	set	140
   236  0085                     _TRISAbits	set	133
   237  0087                     _TRISC	set	135
   238  0189                     _ANSELH	set	393
   239  0188                     _ANSEL	set	392
   240                           
   241                           ; #config settings
   242  0000                     
   243                           	psect	cinit
   244  07EE                     start_initialization:	
   245  07EE                     __initialization:	
   246                           
   247                           ; Initialize objects allocated to BANK0
   248  07EE  1383               	bcf	3,7	;select IRP bank0
   249  07EF  3052               	movlw	low (__pdataBANK0+20)
   250  07F0  00FD               	movwf	btemp+-1
   251  07F1  3007               	movlw	high __pidataBANK0
   252  07F2  00FE               	movwf	btemp
   253  07F3  3014               	movlw	low __pidataBANK0
   254  07F4  00FF               	movwf	btemp+1
   255  07F5  303E               	movlw	low __pdataBANK0
   256  07F6  0084               	movwf	4
   257  07F7  120A  118A  2705  120A  118A  	fcall	init_ram0
   258  07FC                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  07FC                     __end_of__initialization:	
   262  07FC  0183               	clrf	3
   263  07FD  120A  118A  2F28   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	dataBANK0
   266  003E                     __pdataBANK0:	
   267  003E                     main@F1269:	
   268  003E                     	ds	20
   269                           
   270                           	psect	inittext
   271  0701                     init_fetch0:	
   272                           ;	Called with low address in FSR and high address in W
   273                           
   274  0701  087E               	movf	btemp,w
   275  0702  008A               	movwf	10
   276  0703  087F               	movf	btemp+1,w
   277  0704  0082               	movwf	2
   278  0705                     init_ram0:	
   279                           ;Called with:
   280                           ;	high address of idata address in btemp 
   281                           ;	low address of idata address in btemp+1 
   282                           ;	low address of data in FSR
   283                           ;	high address + 1 of data in btemp-1
   284                           
   285  0705  120A  118A  2701  120A  118A  	fcall	init_fetch0
   286  070A  0080               	movwf	0
   287  070B  0A84               	incf	4,f
   288  070C  0804               	movf	4,w
   289  070D  067D               	xorwf	btemp+-1,w
   290  070E  1903               	btfsc	3,2
   291  070F  3400               	retlw	0
   292  0710  0AFF               	incf	btemp+1,f
   293  0711  1903               	btfsc	3,2
   294  0712  0AFE               	incf	btemp,f
   295  0713  2F05               	goto	init_ram0
   296                           
   297                           	psect	cstackCOMMON
   298  0070                     __pcstackCOMMON:	
   299  0070                     ?_Timer_Delay:	
   300  0070                     ??_Timer_Delay:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	1
   309  0071                     ??_main:	
   310                           
   311                           ; 1 bytes @ 0x1
   312  0071                     	ds	4
   313                           
   314                           	psect	cstackBANK0
   315  0020                     __pcstackBANK0:	
   316  0020                     main@number:	
   317                           
   318                           ; 20 bytes @ 0x0
   319  0020                     	ds	20
   320  0034                     main@anti_blink:	
   321                           
   322                           ; 2 bytes @ 0x14
   323  0034                     	ds	2
   324  0036                     main@count:	
   325                           
   326                           ; 2 bytes @ 0x16
   327  0036                     	ds	2
   328  0038                     main@count_122:	
   329                           
   330                           ; 2 bytes @ 0x18
   331  0038                     	ds	2
   332  003A                     main@units:	
   333                           
   334                           ; 2 bytes @ 0x1A
   335  003A                     	ds	2
   336  003C                     main@tens:	
   337                           
   338                           ; 2 bytes @ 0x1C
   339  003C                     	ds	2
   340                           
   341                           	psect	maintext
   342  0728                     __pmaintext:	
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 27 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  count           2   24[BANK0 ] short 
   353 ;;  count           2   22[BANK0 ] short 
   354 ;;  number         20    0[BANK0 ] short [10]
   355 ;;  tens            2   28[BANK0 ] short 
   356 ;;  units           2   26[BANK0 ] short 
   357 ;;  anti_blink      2   20[BANK0 ] short 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : B00/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0      30       0       0       0
   369 ;;      Temps:          4       0       0       0       0
   370 ;;      Totals:         4      30       0       0       0
   371 ;;Total ram usage:       34 bytes
   372 ;; Hardware stack levels required when called:    1
   373 ;; This function calls:
   374 ;;		_Timer_Delay
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           
   381                           ;psect for function _main
   382  0728                     _main:	
   383  0728                     l721:	
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   386                           
   387                           
   388                           ;main.c: 29:     short units = 0;
   389  0728  1283               	bcf	3,5	;RP0=0, select bank0
   390  0729  1303               	bcf	3,6	;RP1=0, select bank0
   391  072A  01BA               	clrf	main@units
   392  072B  01BB               	clrf	main@units+1
   393                           
   394                           ;main.c: 30:     short tens = 0;
   395  072C  01BC               	clrf	main@tens
   396  072D  01BD               	clrf	main@tens+1
   397                           
   398                           ;main.c: 31:     short anti_blink = 0;
   399  072E  01B4               	clrf	main@anti_blink
   400  072F  01B5               	clrf	main@anti_blink+1
   401  0730                     l723:	
   402                           
   403                           ;main.c: 32:     short number[ ] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7
      +                          F, 0x6F };
   404  0730  3020               	movlw	main@number& (0+255)
   405  0731  0084               	movwf	4
   406  0732  303E               	movlw	low main@F1269
   407  0733  00F1               	movwf	??_main
   408  0734  0804               	movf	4,w
   409  0735  00F2               	movwf	??_main+1
   410  0736  3014               	movlw	20
   411  0737  00F3               	movwf	??_main+2
   412  0738                     u90:	
   413  0738  0871               	movf	??_main,w
   414  0739  0084               	movwf	4
   415  073A  1383               	bcf	3,7	;select IRP bank0
   416  073B  0800               	movf	0,w
   417  073C  00F4               	movwf	??_main+3
   418  073D  0AF1               	incf	??_main,f
   419  073E  0872               	movf	??_main+1,w
   420  073F  0084               	movwf	4
   421  0740  0874               	movf	??_main+3,w
   422  0741  0080               	movwf	0
   423  0742  0AF2               	incf	??_main+1,f
   424  0743  0BF3               	decfsz	??_main+2,f
   425  0744  2F38               	goto	u90
   426  0745                     l725:	
   427                           
   428                           ;main.c: 34:     ANSEL &= 0x0;
   429  0745  1683               	bsf	3,5	;RP0=1, select bank3
   430  0746  1703               	bsf	3,6	;RP1=1, select bank3
   431  0747  0188               	clrf	8	;volatile
   432  0748                     l727:	
   433                           
   434                           ;main.c: 35:     ANSELH &=0x0;
   435  0748  0189               	clrf	9	;volatile
   436  0749                     l729:	
   437                           
   438                           ;main.c: 36:     TRISC = 0x0;
   439  0749  1683               	bsf	3,5	;RP0=1, select bank1
   440  074A  1303               	bcf	3,6	;RP1=0, select bank1
   441  074B  0187               	clrf	7	;volatile
   442  074C                     l731:	
   443                           
   444                           ;main.c: 37:     TRISAbits.TRISA2 = 0;
   445  074C  1105               	bcf	5,2	;volatile
   446  074D                     l733:	
   447                           
   448                           ;main.c: 38:     TRISAbits.TRISA3 = 0;
   449  074D  1185               	bcf	5,3	;volatile
   450  074E                     l735:	
   451                           
   452                           ;main.c: 39:     PORTC &= 0x0;
   453  074E  1283               	bcf	3,5	;RP0=0, select bank0
   454  074F  1303               	bcf	3,6	;RP1=0, select bank0
   455  0750  0187               	clrf	7	;volatile
   456  0751                     l737:	
   457                           
   458                           ;main.c: 46:         PORTC= number[units];
   459  0751  1283               	bcf	3,5	;RP0=0, select bank0
   460  0752  1303               	bcf	3,6	;RP1=0, select bank0
   461  0753  083A               	movf	main@units,w
   462  0754  00F1               	movwf	??_main
   463  0755  0771               	addwf	??_main,w
   464  0756  3E20               	addlw	(low (main@number| 0))& (0+255)
   465  0757  0084               	movwf	4
   466  0758  1383               	bcf	3,7	;select IRP bank0
   467  0759  0800               	movf	0,w
   468  075A  0087               	movwf	7	;volatile
   469  075B                     l739:	
   470                           
   471                           ;main.c: 47:         PORTAbits.RA3 = 1;
   472  075B  1585               	bsf	5,3	;volatile
   473  075C                     l741:	
   474                           
   475                           ;main.c: 48:         for(short count = 0; count < 10; count++){
   476  075C  01B6               	clrf	main@count
   477  075D  01B7               	clrf	main@count+1
   478  075E                     l747:	
   479                           
   480                           ;main.c: 49:             Timer_Delay();
   481  075E  120A  118A  26EE  120A  118A  	fcall	_Timer_Delay
   482  0763                     l749:	
   483                           
   484                           ;main.c: 50:         }
   485  0763  3001               	movlw	1
   486  0764  1283               	bcf	3,5	;RP0=0, select bank0
   487  0765  1303               	bcf	3,6	;RP1=0, select bank0
   488  0766  07B6               	addwf	main@count,f
   489  0767  1803               	skipnc
   490  0768  0AB7               	incf	main@count+1,f
   491  0769  3000               	movlw	0
   492  076A  07B7               	addwf	main@count+1,f
   493  076B                     l751:	
   494  076B  0837               	movf	main@count+1,w
   495  076C  3A80               	xorlw	128
   496  076D  00FF               	movwf	btemp+1
   497  076E  3080               	movlw	128
   498  076F  027F               	subwf	btemp+1,w
   499  0770  1D03               	skipz
   500  0771  2F74               	goto	u105
   501  0772  300A               	movlw	10
   502  0773  0236               	subwf	main@count,w
   503  0774                     u105:	
   504  0774  1C03               	skipc
   505  0775  2F77               	goto	u101
   506  0776  2F78               	goto	u100
   507  0777                     u101:	
   508  0777  2F5E               	goto	l747
   509  0778                     u100:	
   510  0778                     l33:	
   511                           
   512                           ;main.c: 51:         PORTAbits.RA3 = 0;
   513  0778  1283               	bcf	3,5	;RP0=0, select bank0
   514  0779  1303               	bcf	3,6	;RP1=0, select bank0
   515  077A  1185               	bcf	5,3	;volatile
   516  077B                     l753:	
   517                           
   518                           ;main.c: 54:         PORTC = number[tens];
   519  077B  083C               	movf	main@tens,w
   520  077C  00F1               	movwf	??_main
   521  077D  0771               	addwf	??_main,w
   522  077E  3E20               	addlw	(low (main@number| 0))& (0+255)
   523  077F  0084               	movwf	4
   524  0780  1383               	bcf	3,7	;select IRP bank0
   525  0781  0800               	movf	0,w
   526  0782  0087               	movwf	7	;volatile
   527  0783                     l755:	
   528                           
   529                           ;main.c: 55:         PORTAbits.RA2 = 1;
   530  0783  1505               	bsf	5,2	;volatile
   531  0784                     l757:	
   532                           
   533                           ;main.c: 56:         for(short count = 0; count < 10; count++){
   534  0784  01B8               	clrf	main@count_122
   535  0785  01B9               	clrf	main@count_122+1
   536  0786                     l763:	
   537                           
   538                           ;main.c: 57:             Timer_Delay();
   539  0786  120A  118A  26EE  120A  118A  	fcall	_Timer_Delay
   540  078B                     l765:	
   541                           
   542                           ;main.c: 58:         }
   543  078B  3001               	movlw	1
   544  078C  1283               	bcf	3,5	;RP0=0, select bank0
   545  078D  1303               	bcf	3,6	;RP1=0, select bank0
   546  078E  07B8               	addwf	main@count_122,f
   547  078F  1803               	skipnc
   548  0790  0AB9               	incf	main@count_122+1,f
   549  0791  3000               	movlw	0
   550  0792  07B9               	addwf	main@count_122+1,f
   551  0793                     l767:	
   552  0793  0839               	movf	main@count_122+1,w
   553  0794  3A80               	xorlw	128
   554  0795  00FF               	movwf	btemp+1
   555  0796  3080               	movlw	128
   556  0797  027F               	subwf	btemp+1,w
   557  0798  1D03               	skipz
   558  0799  2F9C               	goto	u115
   559  079A  300A               	movlw	10
   560  079B  0238               	subwf	main@count_122,w
   561  079C                     u115:	
   562  079C  1C03               	skipc
   563  079D  2F9F               	goto	u111
   564  079E  2FA0               	goto	u110
   565  079F                     u111:	
   566  079F  2F86               	goto	l763
   567  07A0                     u110:	
   568  07A0                     l35:	
   569                           
   570                           ;main.c: 59:         PORTAbits.RA2 = 0;
   571  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   572  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   573  07A2  1105               	bcf	5,2	;volatile
   574  07A3                     l769:	
   575                           
   576                           ;main.c: 61:         anti_blink++;
   577  07A3  3001               	movlw	1
   578  07A4  07B4               	addwf	main@anti_blink,f
   579  07A5  1803               	skipnc
   580  07A6  0AB5               	incf	main@anti_blink+1,f
   581  07A7  3000               	movlw	0
   582  07A8  07B5               	addwf	main@anti_blink+1,f
   583  07A9                     l771:	
   584                           
   585                           ;main.c: 62:         if(anti_blink>20) {
   586  07A9  0835               	movf	main@anti_blink+1,w
   587  07AA  3A80               	xorlw	128
   588  07AB  00FF               	movwf	btemp+1
   589  07AC  3080               	movlw	128
   590  07AD  027F               	subwf	btemp+1,w
   591  07AE  1D03               	skipz
   592  07AF  2FB2               	goto	u125
   593  07B0  3015               	movlw	21
   594  07B1  0234               	subwf	main@anti_blink,w
   595  07B2                     u125:	
   596  07B2  1C03               	skipc
   597  07B3  2FB5               	goto	u121
   598  07B4  2FB6               	goto	u120
   599  07B5                     u121:	
   600  07B5  2FC0               	goto	l777
   601  07B6                     u120:	
   602  07B6                     l773:	
   603                           
   604                           ;main.c: 63:             anti_blink=0;
   605  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   606  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   607  07B8  01B4               	clrf	main@anti_blink
   608  07B9  01B5               	clrf	main@anti_blink+1
   609  07BA                     l775:	
   610                           
   611                           ;main.c: 64:            units++;
   612  07BA  3001               	movlw	1
   613  07BB  07BA               	addwf	main@units,f
   614  07BC  1803               	skipnc
   615  07BD  0ABB               	incf	main@units+1,f
   616  07BE  3000               	movlw	0
   617  07BF  07BB               	addwf	main@units+1,f
   618  07C0                     l777:	
   619                           
   620                           ;main.c: 67:         if(units > 9){
   621  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   622  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   623  07C2  083B               	movf	main@units+1,w
   624  07C3  3A80               	xorlw	128
   625  07C4  00FF               	movwf	btemp+1
   626  07C5  3080               	movlw	128
   627  07C6  027F               	subwf	btemp+1,w
   628  07C7  1D03               	skipz
   629  07C8  2FCB               	goto	u135
   630  07C9  300A               	movlw	10
   631  07CA  023A               	subwf	main@units,w
   632  07CB                     u135:	
   633  07CB  1C03               	skipc
   634  07CC  2FCE               	goto	u131
   635  07CD  2FCF               	goto	u130
   636  07CE                     u131:	
   637  07CE  2F51               	goto	l737
   638  07CF                     u130:	
   639  07CF                     l779:	
   640                           
   641                           ;main.c: 68:             units = 0;
   642  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   643  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   644  07D1  01BA               	clrf	main@units
   645  07D2  01BB               	clrf	main@units+1
   646  07D3                     l781:	
   647                           
   648                           ;main.c: 69:             tens++;
   649  07D3  3001               	movlw	1
   650  07D4  07BC               	addwf	main@tens,f
   651  07D5  1803               	skipnc
   652  07D6  0ABD               	incf	main@tens+1,f
   653  07D7  3000               	movlw	0
   654  07D8  07BD               	addwf	main@tens+1,f
   655  07D9                     l783:	
   656                           
   657                           ;main.c: 70:             if(tens >9){
   658  07D9  083D               	movf	main@tens+1,w
   659  07DA  3A80               	xorlw	128
   660  07DB  00FF               	movwf	btemp+1
   661  07DC  3080               	movlw	128
   662  07DD  027F               	subwf	btemp+1,w
   663  07DE  1D03               	skipz
   664  07DF  2FE2               	goto	u145
   665  07E0  300A               	movlw	10
   666  07E1  023C               	subwf	main@tens,w
   667  07E2                     u145:	
   668  07E2  1C03               	skipc
   669  07E3  2FE5               	goto	u141
   670  07E4  2FE6               	goto	u140
   671  07E5                     u141:	
   672  07E5  2F51               	goto	l737
   673  07E6                     u140:	
   674  07E6                     l785:	
   675                           
   676                           ;main.c: 71:                  tens = 0;
   677  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   678  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   679  07E8  01BC               	clrf	main@tens
   680  07E9  01BD               	clrf	main@tens+1
   681  07EA  2F51               	goto	l737
   682  07EB  120A  118A  2800   	ljmp	start
   683  07EE                     __end_of_main:	
   684                           
   685                           	psect	text1
   686  06EE                     __ptext1:	
   687 ;; *************** function _Timer_Delay *****************
   688 ;; Defined at:
   689 ;;		line 79 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          1       0       0       0       0
   706 ;;      Totals:         1       0       0       0       0
   707 ;;Total ram usage:        1 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _Timer_Delay
   718  06EE                     _Timer_Delay:	
   719  06EE                     l713:	
   720                           ;incstack = 0
   721                           ; Regs used in _Timer_Delay: [wreg+status,2+status,0]
   722                           
   723                           
   724                           ;main.c: 82:     PIE1 &= 0x1;
   725  06EE  3001               	movlw	1
   726  06EF  00F0               	movwf	??_Timer_Delay
   727  06F0  0870               	movf	??_Timer_Delay,w
   728  06F1  1683               	bsf	3,5	;RP0=1, select bank1
   729  06F2  1303               	bcf	3,6	;RP1=0, select bank1
   730  06F3  058C               	andwf	12,f	;volatile
   731  06F4                     l715:	
   732                           
   733                           ;main.c: 83:     TMR1L = 0x90;
   734  06F4  3090               	movlw	144
   735  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   736  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   737  06F7  008E               	movwf	14	;volatile
   738  06F8                     l717:	
   739                           
   740                           ;main.c: 84:     TMR1H = 0xFD;
   741  06F8  30FD               	movlw	253
   742  06F9  008F               	movwf	15	;volatile
   743  06FA                     l719:	
   744                           
   745                           ;main.c: 85:     T1CON |= 0x1;
   746  06FA  1410               	bsf	16,0	;volatile
   747  06FB                     l44:	
   748                           ;main.c: 86:     while(PIR1bits.TMR1IF == 0);
   749                           
   750  06FB  1C0C               	btfss	12,0	;volatile
   751  06FC  2EFE               	goto	u81
   752  06FD  2EFF               	goto	u80
   753  06FE                     u81:	
   754  06FE  2EFB               	goto	l44
   755  06FF                     u80:	
   756  06FF                     l46:	
   757                           
   758                           ;main.c: 87:     PIR1bits.TMR1IF = 0;
   759  06FF  100C               	bcf	12,0	;volatile
   760  0700                     l47:	
   761  0700  0008               	return
   762  0701                     __end_of_Timer_Delay:	
   763  007E                     btemp	set	126	;btemp
   764  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80     30      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Timer_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0     258
                                              1 COMMON     4     4      0
                                              0 BANK0     30    30      0
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (1) _Timer_Delay                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 11 09:12:28 2019

                      pc 0002                       l33 0778                       l35 07A0  
                     l44 06FB                       l46 06FF                       l47 0700  
                     u80 06FF                       u81 06FE                       u90 0738  
                     fsr 0004              __CFG_LVP$ON 0000                      l713 06EE  
                    l721 0728                      l715 06F4                      l731 074C  
                    l723 0730                      l717 06F8                      l741 075C  
                    l733 074D                      l725 0745                      l719 06FA  
                    l751 076B                      l735 074E                      l727 0748  
                    l753 077B                      l737 0751                      l729 0749  
                    l771 07A9                      l763 0786                      l755 0783  
                    l747 075E                      l739 075B                      l781 07D3  
                    l773 07B6                      l765 078B                      l757 0784  
                    l749 0763                      l783 07D9                      l775 07BA  
                    l767 0793                      l785 07E6                      l777 07C0  
                    l769 07A3                      l779 07CF                      u100 0778  
                    u101 0777                      u110 07A0                      u111 079F  
                    u120 07B6                      u121 07B5                      u105 0774  
                    u130 07CF                      u131 07CE                      u115 079C  
                    u140 07E6                      u141 07E5                      u125 07B2  
                    u135 07CB                      u145 07E2                      fsr0 0004  
                    indf 0000                     _PIE1 008C             __CFG_WRT$OFF 0000  
                   _main 0728                     btemp 007E                     start 0000  
          __CFG_IESO$OFF 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _ANSEL 0188                    _T1CON 0010                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTC 0007                    _TRISC 0087  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0071            main@count_122 0038                   _ANSELH 0189  
         __CFG_PWRTE$OFF 0000            ??_Timer_Delay 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0714      __end_of_Timer_Delay 0701  
         main@anti_blink 0034               __pmaintext 0728              _Timer_Delay 06EE  
                __ptext1 06EE     end_of_initialization 07FC                _PORTAbits 0005  
              _TRISAbits 0085               main@number 0020      start_initialization 07EE  
             init_fetch0 0701              __pdataBANK0 003E                ___latbits 0002  
          __pcstackBANK0 0020   __CFG_FOSC$INTRC_CLKOUT 0000             ?_Timer_Delay 0070  
               _PIR1bits 000C                main@F1269 003E                main@count 0036  
              main@units 003A        __CFG_BOR4V$BOR40V 0000            __size_of_main 00C6  
               main@tens 003C     __size_of_Timer_Delay 0013                 init_ram0 0705  
