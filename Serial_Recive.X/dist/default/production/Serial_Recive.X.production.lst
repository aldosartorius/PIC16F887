

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 12:48:22 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0010                     _T1CON	set	16
   292  000F                     _TMR1H	set	15
   293  000E                     _TMR1L	set	14
   294  0008                     _PORTDbits	set	8
   295  000C                     _PIR1bits	set	12
   296  0018                     _RCSTAbits	set	24
   297  001A                     _RCREG	set	26
   298  000B                     _INTCONbits	set	11
   299  008C                     _PIE1	set	140
   300  008C                     _PIE1bits	set	140
   301  0098                     _TXSTAbits	set	152
   302  0099                     _SPBRG	set	153
   303  008F                     _OSCCON	set	143
   304  0087                     _TRISCbits	set	135
   305  0088                     _TRISD	set	136
   306  0187                     _BAUDCTLbits	set	391
   307                           
   308                           	psect	strings
   309  0003                     __pstrings:	
   310  0003                     stringtab:	
   311  0003                     __stringtab:	
   312  0003                     stringcode:	
   313                           ;	String table - string pointers are 1 byte each
   314                           
   315  0003                     stringdir:	
   316  0003  3000               	movlw	high stringdir
   317  0004  008A               	movwf	10
   318  0005  0804               	movf	4,w
   319  0006  0A84               	incf	4,f
   320  0007  0782               	addwf	2,f
   321  0008                     __stringbase:	
   322  0008  3400               	retlw	0
   323  0009                     __end_of__stringtab:	
   324  0009                     STR_1:	
   325  0009  3444               	retlw	68	;'D'
   326  000A  3461               	retlw	97	;'a'
   327  000B  3474               	retlw	116	;'t'
   328  000C  346F               	retlw	111	;'o'
   329  000D  3420               	retlw	32	;' '
   330  000E  3472               	retlw	114	;'r'
   331  000F  3465               	retlw	101	;'e'
   332  0010  3463               	retlw	99	;'c'
   333  0011  3469               	retlw	105	;'i'
   334  0012  3462               	retlw	98	;'b'
   335  0013  3469               	retlw	105	;'i'
   336  0014  3464               	retlw	100	;'d'
   337  0015  346F               	retlw	111	;'o'
   338  0016  3400               	retlw	0
   339                           
   340                           ; #config settings
   341  0000                     
   342                           	psect	cinit
   343  07F7                     start_initialization:	
   344  07F7                     __initialization:	
   345                           
   346                           ; Clear objects allocated to COMMON
   347  07F7  01FC               	clrf	__pbssCOMMON& (0+127)
   348                           
   349                           ; Clear objects allocated to BANK0
   350  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   351  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   352  07FA  01A0               	clrf	__pbssBANK0& (0+127)
   353  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   354  07FC                     end_of_initialization:	
   355                           ;End of C runtime variable initialization code
   356                           
   357  07FC                     __end_of__initialization:	
   358  07FC  0183               	clrf	3
   359  07FD  120A  118A  2F97   	ljmp	_main	;jump to C main() function
   360                           
   361                           	psect	bssCOMMON
   362  007C                     __pbssCOMMON:	
   363  007C                     _rc_data_char:	
   364  007C                     	ds	1
   365                           
   366                           	psect	bssBANK0
   367  0020                     __pbssBANK0:	
   368  0020                     _i:	
   369  0020                     	ds	2
   370                           
   371                           	psect	cstackCOMMON
   372  0070                     __pcstackCOMMON:	
   373  0070                     ?_Init_Clock:	
   374  0070                     ??_Init_Clock:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_Init_USART:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_Init_USART:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_Lcd_Start:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_Lcd_Clear:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_Lcd_Print_String:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_receive_char:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_receive_char:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_Lcd_Print_Char:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_Timer_Delay:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_Timer_Delay:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_Lcd_SetBit:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_Lcd_SetBit:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Cmd:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     Lcd_SetBit@data_bit:	
   420                           ; 2 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424  0070                     	ds	1
   425  0071                     ??_Lcd_Print_Char:	
   426  0071                     ??_Lcd_Cmd:	
   427                           ; 1 bytes @ 0x1
   428                           
   429  0071                     Lcd_Cmd@a:	
   430                           ; 1 bytes @ 0x1
   431                           
   432                           
   433                           ; 1 bytes @ 0x1
   434  0071                     	ds	1
   435  0072                     ??_Lcd_Start:	
   436  0072                     ??_Lcd_Clear:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ?_Lcd_Set_Cursor:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     Lcd_Set_Cursor@column:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     Lcd_Print_Char@Lower_Nibble:	
   446                           ; 1 bytes @ 0x2
   447                           
   448                           
   449                           ; 1 bytes @ 0x2
   450  0072                     	ds	1
   451  0073                     ??_Lcd_Set_Cursor:	
   452  0073                     Lcd_Print_Char@Upper_Nibble:	
   453                           ; 1 bytes @ 0x3
   454                           
   455                           
   456                           ; 1 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     Lcd_Print_Char@data:	
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     ??_Lcd_Print_String:	
   463  0075                     Lcd_Set_Cursor@row:	
   464                           ; 1 bytes @ 0x5
   465                           
   466  0075                     Lcd_Print_String@i:	
   467                           ; 1 bytes @ 0x5
   468                           
   469                           
   470                           ; 2 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     Lcd_Set_Cursor@z:	
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     Lcd_Set_Cursor@y:	
   477  0077                     Lcd_Print_String@a:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           ; 1 bytes @ 0x7
   482  0077                     	ds	1
   483  0078                     Lcd_Set_Cursor@temp:	
   484                           
   485                           ; 1 bytes @ 0x8
   486  0078                     	ds	1
   487  0079                     ??_main:	
   488                           
   489                           ; 1 bytes @ 0x9
   490  0079                     	ds	1
   491  007A                     main@count:	
   492                           
   493                           ; 2 bytes @ 0xA
   494  007A                     	ds	2
   495                           
   496                           	psect	maintext
   497  0797                     __pmaintext:	
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 49 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  count           2   10[COMMON] int 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  2   48[None  ] int 
   510 ;; Registers used:
   511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : B00/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         2       0       0       0       0
   519 ;;      Temps:          1       0       0       0       0
   520 ;;      Totals:         3       0       0       0       0
   521 ;;Total ram usage:        3 bytes
   522 ;; Hardware stack levels required when called:    3
   523 ;; This function calls:
   524 ;;		_Init_Clock
   525 ;;		_Init_USART
   526 ;;		_Lcd_Clear
   527 ;;		_Lcd_Print_Char
   528 ;;		_Lcd_Print_String
   529 ;;		_Lcd_Set_Cursor
   530 ;;		_Lcd_Start
   531 ;;		_Timer_Delay
   532 ;;		_receive_char
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0797                     _main:	
   541  0797                     l950:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   544                           
   545                           
   546                           ;main.c: 53:     TRISD = (unsigned char)0x00;
   547  0797  1683               	bsf	3,5	;RP0=1, select bank1
   548  0798  1303               	bcf	3,6	;RP1=0, select bank1
   549  0799  0188               	clrf	8	;volatile
   550  079A                     l952:	
   551                           
   552                           ;main.c: 54:    TRISCbits.TRISC7 =1;
   553  079A  1787               	bsf	7,7	;volatile
   554  079B                     l954:	
   555                           
   556                           ;main.c: 56:     Init_Clock();
   557  079B  120A  118A  2630  120A  118A  	fcall	_Init_Clock
   558  07A0                     l956:	
   559                           
   560                           ;main.c: 57:     Init_USART();
   561  07A0  120A  118A  2642  120A  118A  	fcall	_Init_USART
   562  07A5                     l958:	
   563                           
   564                           ;main.c: 59:     INTCONbits.PEIE = 1;
   565  07A5  170B               	bsf	11,6	;volatile
   566  07A6                     l960:	
   567                           
   568                           ;main.c: 60:     INTCONbits.GIE = 1;
   569  07A6  178B               	bsf	11,7	;volatile
   570                           
   571                           ;main.c: 63:     RCREG = 0x0;
   572  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   573  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   574  07A9  019A               	clrf	26	;volatile
   575  07AA                     l962:	
   576                           
   577                           ;main.c: 65:     Lcd_Start();
   578  07AA  120A  118A  2708  120A  118A  	fcall	_Lcd_Start
   579  07AF                     l964:	
   580                           
   581                           ;main.c: 66:     Lcd_Clear();
   582  07AF  120A  118A  2635  120A  118A  	fcall	_Lcd_Clear
   583  07B4                     l966:	
   584                           
   585                           ;main.c: 71:         Lcd_Set_Cursor((char)1,(char)1);
   586  07B4  01F2               	clrf	Lcd_Set_Cursor@column
   587  07B5  0AF2               	incf	Lcd_Set_Cursor@column,f
   588  07B6  3001               	movlw	1
   589  07B7  120A  118A  2745  120A  118A  	fcall	_Lcd_Set_Cursor
   590  07BC                     l968:	
   591                           
   592                           ;main.c: 72:         Lcd_Print_String((char *)"Dato recibido");
   593  07BC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   594  07BD  120A  118A  26B8  120A  118A  	fcall	_Lcd_Print_String
   595  07C2                     l970:	
   596                           
   597                           ;main.c: 73:         receive_char();
   598  07C2  120A  118A  267C  120A  118A  	fcall	_receive_char
   599  07C7                     l972:	
   600                           
   601                           ;main.c: 74:         Lcd_Set_Cursor((char)2,(char)i);
   602  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   603  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   604  07C9  0820               	movf	_i,w
   605  07CA  00F9               	movwf	??_main
   606  07CB  0879               	movf	??_main,w
   607  07CC  00F2               	movwf	Lcd_Set_Cursor@column
   608  07CD  3002               	movlw	2
   609  07CE  120A  118A  2745  120A  118A  	fcall	_Lcd_Set_Cursor
   610  07D3                     l974:	
   611                           
   612                           ;main.c: 75:         Lcd_Print_Char(rc_data_char);
   613  07D3  087C               	movf	_rc_data_char,w
   614  07D4  120A  118A  26DD  120A  118A  	fcall	_Lcd_Print_Char
   615  07D9                     l976:	
   616                           
   617                           ;main.c: 76:         for (int count=0; count<=20; count++ ){
   618  07D9  01FA               	clrf	main@count
   619  07DA  01FB               	clrf	main@count+1
   620  07DB                     l982:	
   621                           
   622                           ;main.c: 77:             Timer_Delay();
   623  07DB  120A  118A  2653  120A  118A  	fcall	_Timer_Delay
   624  07E0                     l984:	
   625                           
   626                           ;main.c: 78:         }
   627  07E0  3001               	movlw	1
   628  07E1  07FA               	addwf	main@count,f
   629  07E2  1803               	skipnc
   630  07E3  0AFB               	incf	main@count+1,f
   631  07E4  3000               	movlw	0
   632  07E5  07FB               	addwf	main@count+1,f
   633  07E6                     l986:	
   634  07E6  087B               	movf	main@count+1,w
   635  07E7  3A80               	xorlw	128
   636  07E8  00FF               	movwf	btemp+1
   637  07E9  3080               	movlw	128
   638  07EA  027F               	subwf	btemp+1,w
   639  07EB  1D03               	skipz
   640  07EC  2FEF               	goto	u285
   641  07ED  3015               	movlw	21
   642  07EE  027A               	subwf	main@count,w
   643  07EF                     u285:	
   644  07EF  1C03               	skipc
   645  07F0  2FF2               	goto	u281
   646  07F1  2FF3               	goto	u280
   647  07F2                     u281:	
   648  07F2  2FDB               	goto	l982
   649  07F3                     u280:	
   650  07F3  2FB4               	goto	l966
   651  07F4  120A  118A  2800   	ljmp	start
   652  07F7                     __end_of_main:	
   653                           
   654                           	psect	text1
   655  067C                     __ptext1:	
   656 ;; *************** function _receive_char *****************
   657 ;; Defined at:
   658 ;;		line 113 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          1       0       0       0       0
   675 ;;      Totals:         1       0       0       0       0
   676 ;;Total ram usage:        1 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _receive_char
   687  067C                     _receive_char:	
   688  067C                     l940:	
   689                           ;incstack = 0
   690                           ; Regs used in _receive_char: [wreg+status,2+status,0]
   691                           
   692                           
   693                           ;main.c: 115:     if(PIR1bits.RCIF == 1){
   694  067C  1283               	bcf	3,5	;RP0=0, select bank0
   695  067D  1303               	bcf	3,6	;RP1=0, select bank0
   696  067E  1E8C               	btfss	12,5	;volatile
   697  067F  2E81               	goto	u261
   698  0680  2E82               	goto	u260
   699  0681                     u261:	
   700  0681  2E95               	goto	l65
   701  0682                     u260:	
   702  0682                     l942:	
   703                           
   704                           ;main.c: 116:         rc_data_char= (char)RCREG;
   705  0682  081A               	movf	26,w	;volatile
   706  0683  00F0               	movwf	??_receive_char
   707  0684  0870               	movf	??_receive_char,w
   708  0685  00FC               	movwf	_rc_data_char
   709  0686                     l944:	
   710                           
   711                           ;main.c: 117:          if(i == 16){
   712  0686  3010               	movlw	16
   713  0687  0620               	xorwf	_i,w
   714  0688  0421               	iorwf	_i+1,w
   715  0689  1D03               	btfss	3,2
   716  068A  2E8C               	goto	u271
   717  068B  2E8D               	goto	u270
   718  068C                     u271:	
   719  068C  2E8F               	goto	l948
   720  068D                     u270:	
   721  068D                     l946:	
   722                           
   723                           ;main.c: 118:              i = 0;
   724  068D  01A0               	clrf	_i
   725  068E  01A1               	clrf	_i+1
   726  068F                     l948:	
   727                           
   728                           ;main.c: 120:         i++;
   729  068F  3001               	movlw	1
   730  0690  07A0               	addwf	_i,f
   731  0691  1803               	skipnc
   732  0692  0AA1               	incf	_i+1,f
   733  0693  3000               	movlw	0
   734  0694  07A1               	addwf	_i+1,f
   735  0695                     l65:	
   736  0695  0008               	return
   737  0696                     __end_of_receive_char:	
   738                           
   739                           	psect	text2
   740  0708                     __ptext2:	
   741 ;; *************** function _Lcd_Start *****************
   742 ;; Defined at:
   743 ;;		line 73 in file "LCD_driver.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    2
   764 ;; This function calls:
   765 ;;		_Lcd_Cmd
   766 ;;		_Lcd_SetBit
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _Lcd_Start
   774  0708                     _Lcd_Start:	
   775  0708                     l908:	
   776                           ;incstack = 0
   777                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
   778                           
   779                           
   780                           ;LCD_driver.c: 75:   Lcd_SetBit(0x00);
   781  0708  3000               	movlw	0
   782  0709  120A  118A  2696  120A  118A  	fcall	_Lcd_SetBit
   783                           
   784                           ;LCD_driver.c: 76:   Lcd_Cmd(0x03);
   785  070E  3003               	movlw	3
   786  070F  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   787                           
   788                           ;LCD_driver.c: 77:   Lcd_Cmd(0x03);
   789  0714  3003               	movlw	3
   790  0715  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   791                           
   792                           ;LCD_driver.c: 78:   Lcd_Cmd(0x02);
   793  071A  3002               	movlw	2
   794  071B  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   795                           
   796                           ;LCD_driver.c: 79:   Lcd_Cmd(0x02);
   797  0720  3002               	movlw	2
   798  0721  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   799                           
   800                           ;LCD_driver.c: 80:   Lcd_Cmd(0x08);
   801  0726  3008               	movlw	8
   802  0727  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   803                           
   804                           ;LCD_driver.c: 81:   Lcd_Cmd(0x00);
   805  072C  3000               	movlw	0
   806  072D  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   807                           
   808                           ;LCD_driver.c: 82:   Lcd_Cmd(0x0C);
   809  0732  300C               	movlw	12
   810  0733  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   811                           
   812                           ;LCD_driver.c: 83:   Lcd_Cmd(0x00);
   813  0738  3000               	movlw	0
   814  0739  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   815                           
   816                           ;LCD_driver.c: 84:   Lcd_Cmd(0x06);
   817  073E  3006               	movlw	6
   818  073F  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   819  0744                     l105:	
   820  0744  0008               	return
   821  0745                     __end_of_Lcd_Start:	
   822                           
   823                           	psect	text3
   824  0745                     __ptext3:	
   825 ;; *************** function _Lcd_Set_Cursor *****************
   826 ;; Defined at:
   827 ;;		line 53 in file "LCD_driver.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  row             1    wreg     unsigned char 
   830 ;;  column          1    2[COMMON] unsigned char 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  row             1    5[COMMON] unsigned char 
   833 ;;  temp            1    8[COMMON] unsigned char 
   834 ;;  y               1    7[COMMON] unsigned char 
   835 ;;  z               1    6[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         1       0       0       0       0
   846 ;;      Locals:         4       0       0       0       0
   847 ;;      Temps:          2       0       0       0       0
   848 ;;      Totals:         7       0       0       0       0
   849 ;;Total ram usage:        7 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    2
   852 ;; This function calls:
   853 ;;		_Lcd_Cmd
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _Lcd_Set_Cursor
   861  0745                     _Lcd_Set_Cursor:	
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   865                           ;Lcd_Set_Cursor@row stored from wreg
   866  0745  00F5               	movwf	Lcd_Set_Cursor@row
   867  0746                     l912:	
   868                           
   869                           ;LCD_driver.c: 54:     char temp,z,y;;LCD_driver.c: 55:     if(row == 1)
   870  0746  0375               	decf	Lcd_Set_Cursor@row,w
   871  0747  1D03               	btfss	3,2
   872  0748  2F4A               	goto	u211
   873  0749  2F4B               	goto	u210
   874  074A                     u211:	
   875  074A  2F6E               	goto	l922
   876  074B                     u210:	
   877  074B                     l914:	
   878                           
   879                           ;LCD_driver.c: 56:     {;LCD_driver.c: 57:         temp = 0x80 + column - 1;
   880  074B  0872               	movf	Lcd_Set_Cursor@column,w
   881  074C  3E7F               	addlw	127
   882  074D  00F3               	movwf	??_Lcd_Set_Cursor
   883  074E  0873               	movf	??_Lcd_Set_Cursor,w
   884  074F  00F8               	movwf	Lcd_Set_Cursor@temp
   885                           
   886                           ;LCD_driver.c: 58:         z = temp>>4;
   887  0750  0878               	movf	Lcd_Set_Cursor@temp,w
   888  0751  00F3               	movwf	??_Lcd_Set_Cursor
   889  0752  3004               	movlw	4
   890  0753                     u225:	
   891  0753  1003               	clrc
   892  0754  0CF3               	rrf	??_Lcd_Set_Cursor,f
   893  0755  3EFF               	addlw	-1
   894  0756  1D03               	skipz
   895  0757  2F53               	goto	u225
   896  0758  0873               	movf	??_Lcd_Set_Cursor,w
   897  0759  00F4               	movwf	??_Lcd_Set_Cursor+1
   898  075A  0874               	movf	??_Lcd_Set_Cursor+1,w
   899  075B  00F6               	movwf	Lcd_Set_Cursor@z
   900  075C                     l916:	
   901                           
   902                           ;LCD_driver.c: 59:         y = temp & 0x0F;
   903  075C  0878               	movf	Lcd_Set_Cursor@temp,w
   904  075D  390F               	andlw	15
   905  075E  00F3               	movwf	??_Lcd_Set_Cursor
   906  075F  0873               	movf	??_Lcd_Set_Cursor,w
   907  0760  00F7               	movwf	Lcd_Set_Cursor@y
   908  0761                     l918:	
   909                           
   910                           ;LCD_driver.c: 60:         Lcd_Cmd(z);
   911  0761  0876               	movf	Lcd_Set_Cursor@z,w
   912  0762  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   913  0767                     l920:	
   914                           
   915                           ;LCD_driver.c: 61:         Lcd_Cmd(y);
   916  0767  0877               	movf	Lcd_Set_Cursor@y,w
   917  0768  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   918                           
   919                           ;LCD_driver.c: 62:     }
   920  076D  2F96               	goto	l102
   921  076E                     l922:	
   922  076E  3002               	movlw	2
   923  076F  0675               	xorwf	Lcd_Set_Cursor@row,w
   924  0770  1D03               	btfss	3,2
   925  0771  2F73               	goto	u231
   926  0772  2F74               	goto	u230
   927  0773                     u231:	
   928  0773  2F96               	goto	l102
   929  0774                     u230:	
   930  0774                     l924:	
   931                           
   932                           ;LCD_driver.c: 64:     {;LCD_driver.c: 65:         temp = 0xC0 + column - 1;
   933  0774  0872               	movf	Lcd_Set_Cursor@column,w
   934  0775  3EBF               	addlw	191
   935  0776  00F3               	movwf	??_Lcd_Set_Cursor
   936  0777  0873               	movf	??_Lcd_Set_Cursor,w
   937  0778  00F8               	movwf	Lcd_Set_Cursor@temp
   938                           
   939                           ;LCD_driver.c: 66:         z = temp>>4;
   940  0779  0878               	movf	Lcd_Set_Cursor@temp,w
   941  077A  00F3               	movwf	??_Lcd_Set_Cursor
   942  077B  3004               	movlw	4
   943  077C                     u245:	
   944  077C  1003               	clrc
   945  077D  0CF3               	rrf	??_Lcd_Set_Cursor,f
   946  077E  3EFF               	addlw	-1
   947  077F  1D03               	skipz
   948  0780  2F7C               	goto	u245
   949  0781  0873               	movf	??_Lcd_Set_Cursor,w
   950  0782  00F4               	movwf	??_Lcd_Set_Cursor+1
   951  0783  0874               	movf	??_Lcd_Set_Cursor+1,w
   952  0784  00F6               	movwf	Lcd_Set_Cursor@z
   953  0785                     l926:	
   954                           
   955                           ;LCD_driver.c: 67:         y = temp & 0x0F;
   956  0785  0878               	movf	Lcd_Set_Cursor@temp,w
   957  0786  390F               	andlw	15
   958  0787  00F3               	movwf	??_Lcd_Set_Cursor
   959  0788  0873               	movf	??_Lcd_Set_Cursor,w
   960  0789  00F7               	movwf	Lcd_Set_Cursor@y
   961  078A                     l928:	
   962                           
   963                           ;LCD_driver.c: 68:         Lcd_Cmd(z);
   964  078A  0876               	movf	Lcd_Set_Cursor@z,w
   965  078B  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   966  0790                     l930:	
   967                           
   968                           ;LCD_driver.c: 69:         Lcd_Cmd(y);
   969  0790  0877               	movf	Lcd_Set_Cursor@y,w
   970  0791  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
   971  0796                     l102:	
   972  0796  0008               	return
   973  0797                     __end_of_Lcd_Set_Cursor:	
   974                           
   975                           	psect	text4
   976  06B8                     __ptext4:	
   977 ;; *************** function _Lcd_Print_String *****************
   978 ;; Defined at:
   979 ;;		line 100 in file "LCD_driver.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  a               1    wreg     PTR unsigned char 
   982 ;;		 -> STR_1(14), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  a               1    7[COMMON] PTR unsigned char 
   985 ;;		 -> STR_1(14), 
   986 ;;  i               2    5[COMMON] int 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         3       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0
   999 ;;      Totals:         3       0       0       0       0
  1000 ;;Total ram usage:        3 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		_Lcd_Print_Char
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _Lcd_Print_String
  1012  06B8                     _Lcd_Print_String:	
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1016                           ;Lcd_Print_String@a stored from wreg
  1017  06B8  00F7               	movwf	Lcd_Print_String@a
  1018  06B9                     l932:	
  1019                           
  1020                           ;LCD_driver.c: 101:     int i;;LCD_driver.c: 102:     for(i = 0; a[i] != '\0'; i++){
  1021  06B9  01F5               	clrf	Lcd_Print_String@i
  1022  06BA  01F6               	clrf	Lcd_Print_String@i+1
  1023  06BB  2ECF               	goto	l938
  1024  06BC                     l934:	
  1025                           
  1026                           ;LCD_driver.c: 103:        Lcd_Print_Char(a[i]);
  1027  06BC  0875               	movf	Lcd_Print_String@i,w
  1028  06BD  0777               	addwf	Lcd_Print_String@a,w
  1029  06BE  0084               	movwf	4
  1030  06BF  120A  118A  2003  120A  118A  	fcall	stringdir
  1031  06C4  120A  118A  26DD  120A  118A  	fcall	_Lcd_Print_Char
  1032  06C9                     l936:	
  1033                           
  1034                           ;LCD_driver.c: 104:     }
  1035  06C9  3001               	movlw	1
  1036  06CA  07F5               	addwf	Lcd_Print_String@i,f
  1037  06CB  1803               	skipnc
  1038  06CC  0AF6               	incf	Lcd_Print_String@i+1,f
  1039  06CD  3000               	movlw	0
  1040  06CE  07F6               	addwf	Lcd_Print_String@i+1,f
  1041  06CF                     l938:	
  1042  06CF  0875               	movf	Lcd_Print_String@i,w
  1043  06D0  0777               	addwf	Lcd_Print_String@a,w
  1044  06D1  0084               	movwf	4
  1045  06D2  120A  118A  2003  120A  118A  	fcall	stringdir
  1046  06D7  3A00               	xorlw	0
  1047  06D8  1D03               	skipz
  1048  06D9  2EDB               	goto	u251
  1049  06DA  2EDC               	goto	u250
  1050  06DB                     u251:	
  1051  06DB  2EBC               	goto	l934
  1052  06DC                     u250:	
  1053  06DC                     l114:	
  1054  06DC  0008               	return
  1055  06DD                     __end_of_Lcd_Print_String:	
  1056                           
  1057                           	psect	text5
  1058  06DD                     __ptext5:	
  1059 ;; *************** function _Lcd_Print_Char *****************
  1060 ;; Defined at:
  1061 ;;		line 87 in file "LCD_driver.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  data            1    wreg     unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  data            1    4[COMMON] unsigned char 
  1066 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  1067 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         3       0       0       0       0
  1079 ;;      Temps:          1       0       0       0       0
  1080 ;;      Totals:         4       0       0       0       0
  1081 ;;Total ram usage:        4 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    1
  1084 ;; This function calls:
  1085 ;;		_Lcd_SetBit
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;;		_Lcd_Print_String
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _Lcd_Print_Char
  1094  06DD                     _Lcd_Print_Char:	
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
  1098                           ;Lcd_Print_Char@data stored from wreg
  1099  06DD  00F4               	movwf	Lcd_Print_Char@data
  1100  06DE                     l868:	
  1101                           
  1102                           ;LCD_driver.c: 88:    char Lower_Nibble,Upper_Nibble;;LCD_driver.c: 89:    Lower_Nibble 
      +                          = data&0x0F;
  1103  06DE  0874               	movf	Lcd_Print_Char@data,w
  1104  06DF  390F               	andlw	15
  1105  06E0  00F1               	movwf	??_Lcd_Print_Char
  1106  06E1  0871               	movf	??_Lcd_Print_Char,w
  1107  06E2  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  1108                           
  1109                           ;LCD_driver.c: 90:    Upper_Nibble = data&0xF0;
  1110  06E3  0874               	movf	Lcd_Print_Char@data,w
  1111  06E4  39F0               	andlw	240
  1112  06E5  00F1               	movwf	??_Lcd_Print_Char
  1113  06E6  0871               	movf	??_Lcd_Print_Char,w
  1114  06E7  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  1115  06E8                     l870:	
  1116                           
  1117                           ;LCD_driver.c: 91:    PORTDbits.RD2 = 1;
  1118  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1119  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1120  06EA  1508               	bsf	8,2	;volatile
  1121  06EB                     l872:	
  1122                           
  1123                           ;LCD_driver.c: 92:    Lcd_SetBit(Upper_Nibble>>4);
  1124  06EB  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  1125  06EC  00F1               	movwf	??_Lcd_Print_Char
  1126  06ED  3004               	movlw	4
  1127  06EE                     u205:	
  1128  06EE  1003               	clrc
  1129  06EF  0CF1               	rrf	??_Lcd_Print_Char,f
  1130  06F0  3EFF               	addlw	-1
  1131  06F1  1D03               	skipz
  1132  06F2  2EEE               	goto	u205
  1133  06F3  0871               	movf	??_Lcd_Print_Char,w
  1134  06F4  120A  118A  2696  120A  118A  	fcall	_Lcd_SetBit
  1135  06F9                     l874:	
  1136                           
  1137                           ;LCD_driver.c: 93:    PORTDbits.RD3 = 1;
  1138  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1139  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1140  06FB  1588               	bsf	8,3	;volatile
  1141  06FC                     l876:	
  1142                           
  1143                           ;LCD_driver.c: 94:    PORTDbits.RD3 = 0;
  1144  06FC  1188               	bcf	8,3	;volatile
  1145  06FD                     l878:	
  1146                           
  1147                           ;LCD_driver.c: 95:    Lcd_SetBit(Lower_Nibble);
  1148  06FD  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  1149  06FE  120A  118A  2696  120A  118A  	fcall	_Lcd_SetBit
  1150  0703                     l880:	
  1151                           
  1152                           ;LCD_driver.c: 96:    PORTDbits.RD3 = 1;
  1153  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0705  1588               	bsf	8,3	;volatile
  1156  0706                     l882:	
  1157                           
  1158                           ;LCD_driver.c: 97:    PORTDbits.RD3 = 0;
  1159  0706  1188               	bcf	8,3	;volatile
  1160  0707                     l108:	
  1161  0707  0008               	return
  1162  0708                     __end_of_Lcd_Print_Char:	
  1163                           
  1164                           	psect	text6
  1165  0635                     __ptext6:	
  1166 ;; *************** function _Lcd_Clear *****************
  1167 ;; Defined at:
  1168 ;;		line 47 in file "LCD_driver.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    2
  1189 ;; This function calls:
  1190 ;;		_Lcd_Cmd
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _Lcd_Clear
  1198  0635                     _Lcd_Clear:	
  1199  0635                     l910:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1202                           
  1203                           
  1204                           ;LCD_driver.c: 48:     Lcd_Cmd(0x00);
  1205  0635  3000               	movlw	0
  1206  0636  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
  1207                           
  1208                           ;LCD_driver.c: 49:     Lcd_Cmd(0x01);
  1209  063B  3001               	movlw	1
  1210  063C  120A  118A  2666  120A  118A  	fcall	_Lcd_Cmd
  1211  0641                     l96:	
  1212  0641  0008               	return
  1213  0642                     __end_of_Lcd_Clear:	
  1214                           
  1215                           	psect	text7
  1216  0666                     __ptext7:	
  1217 ;; *************** function _Lcd_Cmd *****************
  1218 ;; Defined at:
  1219 ;;		line 39 in file "LCD_driver.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  a               1    wreg     unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  a               1    1[COMMON] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, pclath, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         1       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0
  1236 ;;      Totals:         1       0       0       0       0
  1237 ;;Total ram usage:        1 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    1
  1240 ;; This function calls:
  1241 ;;		_Lcd_SetBit
  1242 ;;		_Timer_Delay
  1243 ;; This function is called by:
  1244 ;;		_Lcd_Clear
  1245 ;;		_Lcd_Set_Cursor
  1246 ;;		_Lcd_Start
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _Lcd_Cmd
  1252  0666                     _Lcd_Cmd:	
  1253                           
  1254                           ;incstack = 0
  1255                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1256                           ;Lcd_Cmd@a stored from wreg
  1257  0666  00F1               	movwf	Lcd_Cmd@a
  1258  0667                     l884:	
  1259                           
  1260                           ;LCD_driver.c: 40:     PORTDbits.RD2 = 0;
  1261  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0669  1108               	bcf	8,2	;volatile
  1264  066A                     l886:	
  1265                           
  1266                           ;LCD_driver.c: 41:     Lcd_SetBit(a);
  1267  066A  0871               	movf	Lcd_Cmd@a,w
  1268  066B  120A  118A  2696  120A  118A  	fcall	_Lcd_SetBit
  1269  0670                     l888:	
  1270                           
  1271                           ;LCD_driver.c: 42:     PORTDbits.RD3 = 1;
  1272  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0672  1588               	bsf	8,3	;volatile
  1275                           
  1276                           ;LCD_driver.c: 43:    Timer_Delay();
  1277  0673  120A  118A  2653  120A  118A  	fcall	_Timer_Delay
  1278  0678                     l890:	
  1279                           
  1280                           ;LCD_driver.c: 44:     PORTDbits.RD3 = 0;
  1281  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1283  067A  1188               	bcf	8,3	;volatile
  1284  067B                     l93:	
  1285  067B  0008               	return
  1286  067C                     __end_of_Lcd_Cmd:	
  1287                           
  1288                           	psect	text8
  1289  0653                     __ptext8:	
  1290 ;; *************** function _Timer_Delay *****************
  1291 ;; Defined at:
  1292 ;;		line 107 in file "LCD_driver.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          1       0       0       0       0
  1309 ;;      Totals:         1       0       0       0       0
  1310 ;;Total ram usage:        1 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;;		_Lcd_Cmd
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _Timer_Delay
  1322  0653                     _Timer_Delay:	
  1323  0653                     l850:	
  1324                           ;incstack = 0
  1325                           ; Regs used in _Timer_Delay: [wreg+status,2+status,0]
  1326                           
  1327                           
  1328                           ;LCD_driver.c: 110:     PIE1 &= (unsigned char)0x1;
  1329  0653  3001               	movlw	1
  1330  0654  00F0               	movwf	??_Timer_Delay
  1331  0655  0870               	movf	??_Timer_Delay,w
  1332  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0658  058C               	andwf	12,f	;volatile
  1335  0659                     l852:	
  1336                           
  1337                           ;LCD_driver.c: 112:     TMR1L = (unsigned char)0x60;
  1338  0659  3060               	movlw	96
  1339  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1340  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1341  065C  008E               	movwf	14	;volatile
  1342  065D                     l854:	
  1343                           
  1344                           ;LCD_driver.c: 113:     TMR1H = (unsigned char)0xF0;
  1345  065D  30F0               	movlw	240
  1346  065E  008F               	movwf	15	;volatile
  1347  065F                     l856:	
  1348                           
  1349                           ;LCD_driver.c: 116:     T1CON |= (unsigned char)0x1;
  1350  065F  1410               	bsf	16,0	;volatile
  1351  0660                     l117:	
  1352                           ;LCD_driver.c: 117:     while(PIR1bits.TMR1IF == 0){};
  1353                           
  1354  0660  1C0C               	btfss	12,0	;volatile
  1355  0661  2E63               	goto	u151
  1356  0662  2E64               	goto	u150
  1357  0663                     u151:	
  1358  0663  2E60               	goto	l117
  1359  0664                     u150:	
  1360  0664                     l119:	
  1361                           
  1362                           ;LCD_driver.c: 118:     PIR1bits.TMR1IF = 0;
  1363  0664  100C               	bcf	12,0	;volatile
  1364  0665                     l120:	
  1365  0665  0008               	return
  1366  0666                     __end_of_Timer_Delay:	
  1367                           
  1368                           	psect	text9
  1369  0696                     __ptext9:	
  1370 ;; *************** function _Lcd_SetBit *****************
  1371 ;; Defined at:
  1372 ;;		line 12 in file "LCD_driver.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  data_bit        1    wreg     unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  data_bit        1    0[COMMON] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         1       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         1       0       0       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_Lcd_Cmd
  1396 ;;		_Lcd_Start
  1397 ;;		_Lcd_Print_Char
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _Lcd_SetBit
  1403  0696                     _Lcd_SetBit:	
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _Lcd_SetBit: [wreg]
  1407                           ;Lcd_SetBit@data_bit stored from wreg
  1408  0696  00F0               	movwf	Lcd_SetBit@data_bit
  1409  0697                     l858:	
  1410                           
  1411                           ;LCD_driver.c: 13:     if(data_bit & 1){
  1412  0697  1C70               	btfss	Lcd_SetBit@data_bit,0
  1413  0698  2E9A               	goto	u161
  1414  0699  2E9B               	goto	u160
  1415  069A                     u161:	
  1416  069A  2E9F               	goto	l82
  1417  069B                     u160:	
  1418  069B                     l860:	
  1419                           
  1420                           ;LCD_driver.c: 14:         PORTDbits.RD4 = 1;
  1421  069B  1283               	bcf	3,5	;RP0=0, select bank0
  1422  069C  1303               	bcf	3,6	;RP1=0, select bank0
  1423  069D  1608               	bsf	8,4	;volatile
  1424                           
  1425                           ;LCD_driver.c: 15:     }
  1426  069E  2EA2               	goto	l83
  1427  069F                     l82:	
  1428                           ;LCD_driver.c: 16:     else{
  1429                           
  1430                           
  1431                           ;LCD_driver.c: 17:         PORTDbits.RD4 = 0;
  1432  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1433  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1434  06A1  1208               	bcf	8,4	;volatile
  1435  06A2                     l83:	
  1436                           ;LCD_driver.c: 18:     }
  1437                           
  1438                           
  1439                           ;LCD_driver.c: 19:     if(data_bit & 2){
  1440  06A2  1CF0               	btfss	Lcd_SetBit@data_bit,1
  1441  06A3  2EA5               	goto	u171
  1442  06A4  2EA6               	goto	u170
  1443  06A5                     u171:	
  1444  06A5  2EA8               	goto	l84
  1445  06A6                     u170:	
  1446  06A6                     l862:	
  1447                           
  1448                           ;LCD_driver.c: 20:         PORTDbits.RD5 = 1;
  1449  06A6  1688               	bsf	8,5	;volatile
  1450                           
  1451                           ;LCD_driver.c: 21:     }
  1452  06A7  2EA9               	goto	l85
  1453  06A8                     l84:	
  1454                           ;LCD_driver.c: 22:     else{
  1455                           
  1456                           
  1457                           ;LCD_driver.c: 23:         PORTDbits.RD5 = 0;
  1458  06A8  1288               	bcf	8,5	;volatile
  1459  06A9                     l85:	
  1460                           ;LCD_driver.c: 24:     }
  1461                           
  1462                           
  1463                           ;LCD_driver.c: 25:     if(data_bit & 4){
  1464  06A9  1D70               	btfss	Lcd_SetBit@data_bit,2
  1465  06AA  2EAC               	goto	u181
  1466  06AB  2EAD               	goto	u180
  1467  06AC                     u181:	
  1468  06AC  2EAF               	goto	l86
  1469  06AD                     u180:	
  1470  06AD                     l864:	
  1471                           
  1472                           ;LCD_driver.c: 26:         PORTDbits.RD6 = 1;
  1473  06AD  1708               	bsf	8,6	;volatile
  1474                           
  1475                           ;LCD_driver.c: 27:     }
  1476  06AE  2EB0               	goto	l87
  1477  06AF                     l86:	
  1478                           ;LCD_driver.c: 28:     else{
  1479                           
  1480                           
  1481                           ;LCD_driver.c: 29:         PORTDbits.RD6 = 0;
  1482  06AF  1308               	bcf	8,6	;volatile
  1483  06B0                     l87:	
  1484                           ;LCD_driver.c: 30:     }
  1485                           
  1486                           
  1487                           ;LCD_driver.c: 31:     if(data_bit & 8){
  1488  06B0  1DF0               	btfss	Lcd_SetBit@data_bit,3
  1489  06B1  2EB3               	goto	u191
  1490  06B2  2EB4               	goto	u190
  1491  06B3                     u191:	
  1492  06B3  2EB6               	goto	l88
  1493  06B4                     u190:	
  1494  06B4                     l866:	
  1495                           
  1496                           ;LCD_driver.c: 32:         PORTDbits.RD7 = 1;
  1497  06B4  1788               	bsf	8,7	;volatile
  1498                           
  1499                           ;LCD_driver.c: 33:     }
  1500  06B5  2EB7               	goto	l90
  1501  06B6                     l88:	
  1502                           ;LCD_driver.c: 34:     else{
  1503                           
  1504                           
  1505                           ;LCD_driver.c: 35:         PORTDbits.RD7 = 0;
  1506  06B6  1388               	bcf	8,7	;volatile
  1507  06B7                     l90:	
  1508  06B7  0008               	return
  1509  06B8                     __end_of_Lcd_SetBit:	
  1510                           
  1511                           	psect	text10
  1512  0642                     __ptext10:	
  1513 ;; *************** function _Init_USART *****************
  1514 ;; Defined at:
  1515 ;;		line 91 in file "main.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         0       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0
  1532 ;;      Totals:         0       0       0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           
  1543                           ;psect for function _Init_USART
  1544  0642                     _Init_USART:	
  1545  0642                     l894:	
  1546                           ;incstack = 0
  1547                           ; Regs used in _Init_USART: [wreg]
  1548                           
  1549                           
  1550                           ;main.c: 93:     SPBRG = 0xC;
  1551  0642  300C               	movlw	12
  1552  0643  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0644  1303               	bcf	3,6	;RP1=0, select bank1
  1554  0645  0099               	movwf	25	;volatile
  1555  0646                     l896:	
  1556                           
  1557                           ;main.c: 96:     TXSTAbits.BRGH = 0;
  1558  0646  1118               	bcf	24,2	;volatile
  1559  0647                     l898:	
  1560                           
  1561                           ;main.c: 97:     TXSTAbits.SYNC = 0;
  1562  0647  1218               	bcf	24,4	;volatile
  1563  0648                     l900:	
  1564                           
  1565                           ;main.c: 100:     BAUDCTLbits.BRG16 = 0;
  1566  0648  1683               	bsf	3,5	;RP0=1, select bank3
  1567  0649  1703               	bsf	3,6	;RP1=1, select bank3
  1568  064A  1187               	bcf	7,3	;volatile
  1569  064B                     l902:	
  1570                           
  1571                           ;main.c: 103:     RCSTAbits.SPEN = 1;
  1572  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1573  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1574  064D  1798               	bsf	24,7	;volatile
  1575  064E                     l904:	
  1576                           
  1577                           ;main.c: 106:     RCSTAbits.CREN = 1;
  1578  064E  1618               	bsf	24,4	;volatile
  1579  064F                     l906:	
  1580                           
  1581                           ;main.c: 109:     PIE1bits.RCIE =1;
  1582  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0650  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0651  168C               	bsf	12,5	;volatile
  1585  0652                     l60:	
  1586  0652  0008               	return
  1587  0653                     __end_of_Init_USART:	
  1588                           
  1589                           	psect	text11
  1590  0630                     __ptext11:	
  1591 ;; *************** function _Init_Clock *****************
  1592 ;; Defined at:
  1593 ;;		line 85 in file "main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _Init_Clock
  1622  0630                     _Init_Clock:	
  1623  0630                     l892:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _Init_Clock: [wreg]
  1626                           
  1627                           
  1628                           ;main.c: 88:     OSCCON = 0x71;
  1629  0630  3071               	movlw	113
  1630  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0633  008F               	movwf	15	;volatile
  1633  0634                     l57:	
  1634  0634  0008               	return
  1635  0635                     __end_of_Init_Clock:	
  1636  007E                     btemp	set	126	;btemp
  1637  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Lcd_Cmd->_Timer_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1365
                                              9 COMMON     3     3      0
                         _Init_Clock
                         _Init_USART
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                        _Timer_Delay
                       _receive_char
 ---------------------------------------------------------------------------------
 (1) _receive_char                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            0     0      0     198
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              2 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              1     1      0     110
                                              1 COMMON     1     1      0
                         _Lcd_SetBit
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (1) _Timer_Delay                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Clock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Clock
   _Init_USART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
     _Lcd_SetBit
   _Timer_Delay
   _receive_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 12:48:22 2019

                         _i 0020                           pc 0002                          l60 0652  
                        l57 0634                          l65 0695                          l90 06B7  
                        l82 069F                          l83 06A2                          l84 06A8  
                        l85 06A9                          l93 067B                          l86 06AF  
                        l87 06B0                          l88 06B6                          l96 0641  
                        fsr 0004                         l102 0796                         l120 0665  
                       l105 0744                         l114 06DC                         l108 0707  
                       l117 0660                         l119 0664                         l900 0648  
                       l902 064B                         l910 0635                         l904 064E  
                       l920 0767                         l912 0746                         l906 064F  
                       l850 0653                         l930 0790                         l914 074B  
                       l922 076E                         l860 069B                         l852 0659  
                       l932 06B9                         l924 0774                         l916 075C  
                       l908 0708                         l940 067C                         l862 06A6  
                       l854 065D                         l870 06E8                         l934 06BC  
                       l926 0785                         l918 0761                         l942 0682  
                       l950 0797                         l864 06AD                         l856 065F  
                       l880 0703                         l872 06EB                         l936 06C9  
                       l928 078A                         l944 0686                         l960 07A6  
                       l952 079A                         l866 06B4                         l858 0697  
                       l890 0678                         l882 0706                         l874 06F9  
                       l938 06CF                         l946 068D                         l970 07C2  
                       l962 07AA                         l954 079B                         l892 0630  
                       l884 0667                         l876 06FC                         l868 06DE  
                       l948 068F                         l972 07C7                         l964 07AF  
                       l956 07A0                         l894 0642                         l886 066A  
                       l878 06FD                         l982 07DB                         l974 07D3  
                       l966 07B4                         l958 07A5                         l896 0646  
                       l888 0670                         l984 07E0                         l976 07D9  
                       l968 07BC                         l898 0647                         l986 07E6  
                       u210 074B                         u211 074A                         u205 06EE  
                       u150 0664                         u230 0774                         u151 0663  
                       u231 0773                         u160 069B                         u161 069A  
                       u225 0753                         u170 06A6                         u250 06DC  
                       u171 06A5                         u251 06DB                         u180 06AD  
                       u260 0682                         u181 06AC                         u245 077C  
                       u261 0681                         u190 06B4                         u270 068D  
                       u191 06B3                         u271 068C                         u280 07F3  
                       u281 07F2                         u285 07EF                         fsr0 0004  
                      STR_1 0009                        _PIE1 008C                        _main 0797  
                      btemp 007E                        start 0000          Lcd_Print_Char@data 0074  
           __end_of_Lcd_Cmd 067C                  _Lcd_SetBit 0696                       ?_main 0070  
             __CFG_WDTE$OFF 0000                       _T1CON 0010                       _RCREG 001A  
                     _TMR1H 000F                       _TMR1L 000E                       _SPBRG 0099  
   __size_of_Lcd_Set_Cursor 0052                       _TRISD 0088                       pclath 000A  
 __size_of_Lcd_Print_String 0025                       status 0003                       wtemp0 007E  
   __size_of_Lcd_Print_Char 002B                  _Init_USART 0642                  _Init_Clock 0630  
           __initialization 07F7                __end_of_main 07F7                      ??_main 0079  
        __size_of_Lcd_Clear 000D          __size_of_Lcd_Start 003D                      _OSCCON 008F  
                 ??_Lcd_Cmd 0071                 ?_Lcd_SetBit 0070               ??_Timer_Delay 0070  
           Lcd_Set_Cursor@y 0077             Lcd_Set_Cursor@z 0076               ?_receive_char 0070  
   __end_of__initialization 07FC           __end_of_Lcd_Clear 0642           __end_of_Lcd_Start 0745  
               ?_Init_USART 0070                 ?_Init_Clock 0070              __pcstackCOMMON 0070  
            _Lcd_Set_Cursor 0745         __end_of_Timer_Delay 0666                  __pbssBANK0 0020  
            ??_receive_char 0070            _Lcd_Print_String 06B8         __size_of_Lcd_SetBit 0022  
            _Lcd_Print_Char 06DD                  __pmaintext 0797          Lcd_SetBit@data_bit 0070  
    __end_of_Lcd_Set_Cursor 0797         __size_of_Init_USART 0011         __size_of_Init_Clock 0005  
                __stringtab 0003                     _Lcd_Cmd 0666      __end_of_Lcd_Print_Char 0708  
           ?_Lcd_Set_Cursor 0072                 _Timer_Delay 0653                     __ptext1 067C  
                   __ptext2 0708                     __ptext3 0745                     __ptext4 06B8  
                   __ptext5 06DD                     __ptext6 0635                     __ptext7 0666  
                   __ptext8 0653                     __ptext9 0696        end_of_initialization 07FC  
           ?_Lcd_Print_Char 0070                   _RCSTAbits 0018                ??_Lcd_SetBit 0070  
      __end_of_receive_char 0696                   _PORTDbits 0008                   _TRISCbits 0087  
        __end_of_Lcd_SetBit 06B8                   _TXSTAbits 0098                ??_Init_USART 0070  
              ??_Init_Clock 0070                   _Lcd_Clear 0635                   _Lcd_Start 0708  
               _BAUDCTLbits 0187    __end_of_Lcd_Print_String 06DD         start_initialization 07F7  
        __end_of_Init_USART 0653          __end_of_Init_Clock 0635           Lcd_Print_String@a 0077  
         Lcd_Print_String@i 0075                  ?_Lcd_Clear 0070                  ?_Lcd_Start 0070  
Lcd_Print_Char@Lower_Nibble 0072                _rc_data_char 007C                 __pbssCOMMON 007C  
                 ___latbits 0002                    ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0073  
     __size_of_receive_char 001A                ?_Timer_Delay 0070                   __pstrings 0003  
          ??_Lcd_Print_Char 0071                _receive_char 067C                    _PIE1bits 008C  
                  Lcd_Cmd@a 0071                    _PIR1bits 000C                 ??_Lcd_Clear 0072  
               ??_Lcd_Start 0072                 __stringbase 0008                   main@count 007A  
      Lcd_Set_Cursor@column 0072            __size_of_Lcd_Cmd 0016          __end_of__stringtab 0009  
         ?_Lcd_Print_String 0070          ??_Lcd_Print_String 0075                    __ptext10 0642  
                  __ptext11 0630               __size_of_main 0060  Lcd_Print_Char@Upper_Nibble 0073  
      __size_of_Timer_Delay 0013                  _INTCONbits 000B                   stringcode 0003  
        Lcd_Set_Cursor@temp 0078                    stringdir 0003                    stringtab 0003  
         Lcd_Set_Cursor@row 0075  
