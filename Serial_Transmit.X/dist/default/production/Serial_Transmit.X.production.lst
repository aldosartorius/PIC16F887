

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 13:19:37 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  000C                     _PIR1bits	set	12
   206  0018                     _RCSTAbits	set	24
   207  0008                     _PORTD	set	8
   208  0019                     _TXREG	set	25
   209  0098                     _TXSTAbits	set	152
   210  0099                     _SPBRG	set	153
   211  008C                     _PIE1bits	set	140
   212  008F                     _OSCCON	set	143
   213  0088                     _TRISD	set	136
   214  0187                     _BAUDCTLbits	set	391
   215  0189                     _ANSELH	set	393
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	strings
   219  0003                     __pstrings:	
   220  0003                     stringtab:	
   221  0003                     __stringtab:	
   222  0003                     stringcode:	
   223                           ;	String table - string pointers are 1 byte each
   224                           
   225  0003                     stringdir:	
   226  0003  3000               	movlw	high stringdir
   227  0004  008A               	movwf	10
   228  0005  0804               	movf	4,w
   229  0006  0A84               	incf	4,f
   230  0007  0782               	addwf	2,f
   231  0008                     __stringbase:	
   232  0008  3400               	retlw	0
   233  0009                     __end_of__stringtab:	
   234  0009                     STR_1:	
   235  0009  3448               	retlw	72	;'H'
   236  000A  346F               	retlw	111	;'o'
   237  000B  346C               	retlw	108	;'l'
   238  000C  3461               	retlw	97	;'a'
   239  000D  3420               	retlw	32	;' '
   240  000E  344A               	retlw	74	;'J'
   241  000F  3461               	retlw	97	;'a'
   242  0010  347A               	retlw	122	;'z'
   243  0011  346D               	retlw	109	;'m'
   244  0012  3469               	retlw	105	;'i'
   245  0013  346E               	retlw	110	;'n'
   246  0014  3420               	retlw	32	;' '
   247  0015  3442               	retlw	66	;'B'
   248  0016  3469               	retlw	105	;'i'
   249  0017  3465               	retlw	101	;'e'
   250  0018  346E               	retlw	110	;'n'
   251  0019  3476               	retlw	118	;'v'
   252  001A  3465               	retlw	101	;'e'
   253  001B  346E               	retlw	110	;'n'
   254  001C  3469               	retlw	105	;'i'
   255  001D  3464               	retlw	100	;'d'
   256  001E  3461               	retlw	97	;'a'
   257  001F  3420               	retlw	32	;' '
   258  0020  3461               	retlw	97	;'a'
   259  0021  346C               	retlw	108	;'l'
   260  0022  3420               	retlw	32	;' '
   261  0023  3454               	retlw	84	;'T'
   262  0024  3445               	retlw	69	;'E'
   263  0025  3443               	retlw	67	;'C'
   264  0026  3420               	retlw	32	;' '
   265  0027  340D               	retlw	13
   266  0028  340A               	retlw	10
   267  0029  3400               	retlw	0
   268                           
   269                           ; #config settings
   270  0000                     
   271                           	psect	cinit
   272  07FC                     start_initialization:	
   273  07FC                     __initialization:	
   274  07FC                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  07FC                     __end_of__initialization:	
   278  07FC  0183               	clrf	3
   279  07FD  120A  118A  2FBB   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:	
   283  0070                     ?_Init_Clock:	
   284  0070                     ??_Init_Clock:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_Init_Ports:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_Init_Ports:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_Init_USART:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_Init_USART:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_Send_String_USART:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_Send_Char_USART:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ??_Send_Char_USART:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     Send_Char_USART@character:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316  0070                     	ds	1
   317  0071                     ??_Send_String_USART:	
   318  0071                     Send_String_USART@i:	
   319                           ; 1 bytes @ 0x1
   320                           
   321                           
   322                           ; 2 bytes @ 0x1
   323  0071                     	ds	2
   324  0073                     Send_String_USART@str:	
   325                           
   326                           ; 1 bytes @ 0x3
   327  0073                     	ds	1
   328  0074                     ??_main:	
   329                           
   330                           	psect	maintext
   331  07BB                     __pmaintext:	
   332                           ; 1 bytes @ 0x4
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 44 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  2   36[None  ] int 
   345 ;; Registers used:
   346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : B00/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   352 ;;      Params:         0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels required when called:    2
   358 ;; This function calls:
   359 ;;		_Init_Clock
   360 ;;		_Init_Ports
   361 ;;		_Init_USART
   362 ;;		_Send_String_USART
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           
   369                           ;psect for function _main
   370  07BB                     _main:	
   371  07BB                     l701:	
   372                           ;incstack = 0
   373                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   374                           
   375                           
   376                           ;main.c: 46:     Init_Clock();
   377  07BB  120A  118A  278F  120A  118A  	fcall	_Init_Clock
   378  07C0                     l703:	
   379                           
   380                           ;main.c: 47:     Init_Ports();
   381  07C0  120A  118A  2794  120A  118A  	fcall	_Init_Ports
   382  07C5                     l705:	
   383                           
   384                           ;main.c: 48:     Init_USART();
   385  07C5  120A  118A  27AA  120A  118A  	fcall	_Init_USART
   386  07CA                     l707:	
   387                           
   388                           ;main.c: 49:     TXREG = 0x0;
   389  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   390  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   391  07CC  0199               	clrf	25	;volatile
   392  07CD                     l709:	
   393                           
   394                           ;main.c: 57:         Send_String_USART("Hola Jazmin Bienvenida al TEC \r\n");
   395  07CD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   396  07CE  120A  118A  27D7  120A  118A  	fcall	_Send_String_USART
   397  07D3  2FCD               	goto	l709
   398  07D4  120A  118A  2800   	ljmp	start
   399  07D7                     __end_of_main:	
   400                           
   401                           	psect	text1
   402  07D7                     __ptext1:	
   403 ;; *************** function _Send_String_USART *****************
   404 ;; Defined at:
   405 ;;		line 106 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  str             1    wreg     PTR const unsigned char 
   408 ;;		 -> STR_1(33), 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  str             1    3[COMMON] PTR const unsigned char 
   411 ;;		 -> STR_1(33), 
   412 ;;  i               2    1[COMMON] short 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         3       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0
   425 ;;      Totals:         3       0       0       0       0
   426 ;;Total ram usage:        3 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		_Send_Char_USART
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _Send_String_USART
   438  07D7                     _Send_String_USART:	
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _Send_String_USART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   442                           ;Send_String_USART@str stored from wreg
   443  07D7  00F3               	movwf	Send_String_USART@str
   444  07D8                     l693:	
   445                           
   446                           ;main.c: 107:     short i=0;
   447  07D8  01F1               	clrf	Send_String_USART@i
   448  07D9  01F2               	clrf	Send_String_USART@i+1
   449                           
   450                           ;main.c: 108:     while(str[i] != 0){
   451  07DA  2FEE               	goto	l699
   452  07DB                     l695:	
   453                           
   454                           ;main.c: 109:         Send_Char_USART(str[i]);
   455  07DB  0871               	movf	Send_String_USART@i,w
   456  07DC  0773               	addwf	Send_String_USART@str,w
   457  07DD  0084               	movwf	4
   458  07DE  120A  118A  2003  120A  118A  	fcall	stringdir
   459  07E3  120A  118A  279F  120A  118A  	fcall	_Send_Char_USART
   460  07E8                     l697:	
   461                           
   462                           ;main.c: 110:         i++;
   463  07E8  3001               	movlw	1
   464  07E9  07F1               	addwf	Send_String_USART@i,f
   465  07EA  1803               	skipnc
   466  07EB  0AF2               	incf	Send_String_USART@i+1,f
   467  07EC  3000               	movlw	0
   468  07ED  07F2               	addwf	Send_String_USART@i+1,f
   469  07EE                     l699:	
   470                           
   471                           ;main.c: 108:     while(str[i] != 0){
   472  07EE  0871               	movf	Send_String_USART@i,w
   473  07EF  0773               	addwf	Send_String_USART@str,w
   474  07F0  0084               	movwf	4
   475  07F1  120A  118A  2003  120A  118A  	fcall	stringdir
   476  07F6  3A00               	xorlw	0
   477  07F7  1D03               	skipz
   478  07F8  2FFA               	goto	u31
   479  07F9  2FFB               	goto	u30
   480  07FA                     u31:	
   481  07FA  2FDB               	goto	l695
   482  07FB                     u30:	
   483  07FB                     l61:	
   484  07FB  0008               	return
   485  07FC                     __end_of_Send_String_USART:	
   486                           
   487                           	psect	text2
   488  079F                     __ptext2:	
   489 ;; *************** function _Send_Char_USART *****************
   490 ;; Defined at:
   491 ;;		line 99 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  character       1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  character       1    0[COMMON] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         1       0       0       0       0
   509 ;;Total ram usage:        1 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_Send_String_USART
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _Send_Char_USART
   520  079F                     _Send_Char_USART:	
   521                           
   522                           ;incstack = 0
   523                           ; Regs used in _Send_Char_USART: [wreg]
   524                           ;Send_Char_USART@character stored from wreg
   525  079F  00F0               	movwf	Send_Char_USART@character
   526  07A0                     l653:	
   527  07A0                     l52:	
   528                           ;main.c: 101:     while(PIR1bits.TXIF == 0){};
   529                           
   530  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   531  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   532  07A2  1E0C               	btfss	12,4	;volatile
   533  07A3  2FA5               	goto	u11
   534  07A4  2FA6               	goto	u10
   535  07A5                     u11:	
   536  07A5  2FA0               	goto	l52
   537  07A6                     u10:	
   538  07A6                     l54:	
   539                           
   540                           ;main.c: 102:     PIR1bits.TXIF = 0;
   541  07A6  120C               	bcf	12,4	;volatile
   542  07A7                     l655:	
   543                           
   544                           ;main.c: 103:     TXREG = (unsigned char)character;
   545  07A7  0870               	movf	Send_Char_USART@character,w
   546  07A8  0099               	movwf	25	;volatile
   547  07A9                     l55:	
   548  07A9  0008               	return
   549  07AA                     __end_of_Send_Char_USART:	
   550                           
   551                           	psect	text3
   552  07AA                     __ptext3:	
   553 ;; *************** function _Init_USART *****************
   554 ;; Defined at:
   555 ;;		line 79 in file "main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0
   572 ;;      Totals:         0       0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _Init_USART
   584  07AA                     _Init_USART:	
   585  07AA                     l661:	
   586                           ;incstack = 0
   587                           ; Regs used in _Init_USART: [wreg]
   588                           
   589                           
   590                           ;main.c: 82:     PIE1bits.TXIE =1;
   591  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   592  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   593  07AC  160C               	bsf	12,4	;volatile
   594  07AD                     l663:	
   595                           
   596                           ;main.c: 84:     SPBRG = 0xC;
   597  07AD  300C               	movlw	12
   598  07AE  0099               	movwf	25	;volatile
   599  07AF                     l665:	
   600                           
   601                           ;main.c: 87:     TXSTAbits.BRGH = 0;
   602  07AF  1118               	bcf	24,2	;volatile
   603  07B0                     l667:	
   604                           
   605                           ;main.c: 88:     TXSTAbits.SYNC = 0;
   606  07B0  1218               	bcf	24,4	;volatile
   607  07B1                     l669:	
   608                           
   609                           ;main.c: 91:     BAUDCTLbits.BRG16 = 0;
   610  07B1  1683               	bsf	3,5	;RP0=1, select bank3
   611  07B2  1703               	bsf	3,6	;RP1=1, select bank3
   612  07B3  1187               	bcf	7,3	;volatile
   613  07B4                     l671:	
   614                           
   615                           ;main.c: 94:     RCSTAbits.SPEN = 1;
   616  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   617  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   618  07B6  1798               	bsf	24,7	;volatile
   619  07B7                     l673:	
   620                           
   621                           ;main.c: 96:     TXSTAbits.TXEN = 1;
   622  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   623  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   624  07B9  1698               	bsf	24,5	;volatile
   625  07BA                     l49:	
   626  07BA  0008               	return
   627  07BB                     __end_of_Init_USART:	
   628                           
   629                           	psect	text4
   630  0794                     __ptext4:	
   631 ;; *************** function _Init_Ports *****************
   632 ;; Defined at:
   633 ;;		line 61 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		status,2
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _Init_Ports
   662  0794                     _Init_Ports:	
   663  0794                     l659:	
   664                           ;incstack = 0
   665                           ; Regs used in _Init_Ports: [status,2]
   666                           
   667                           
   668                           ;main.c: 64:     ANSEL &= (unsigned char)0x0;
   669  0794  1683               	bsf	3,5	;RP0=1, select bank3
   670  0795  1703               	bsf	3,6	;RP1=1, select bank3
   671  0796  0188               	clrf	8	;volatile
   672                           
   673                           ;main.c: 65:     ANSELH &=(unsigned char)0x0;
   674  0797  0189               	clrf	9	;volatile
   675                           
   676                           ;main.c: 68:     TRISD = (unsigned char)0x00;
   677  0798  1683               	bsf	3,5	;RP0=1, select bank1
   678  0799  1303               	bcf	3,6	;RP1=0, select bank1
   679  079A  0188               	clrf	8	;volatile
   680                           
   681                           ;main.c: 70:     PORTD = (unsigned char)0x0;
   682  079B  1283               	bcf	3,5	;RP0=0, select bank0
   683  079C  1303               	bcf	3,6	;RP1=0, select bank0
   684  079D  0188               	clrf	8	;volatile
   685  079E                     l43:	
   686  079E  0008               	return
   687  079F                     __end_of_Init_Ports:	
   688                           
   689                           	psect	text5
   690  078F                     __ptext5:	
   691 ;; *************** function _Init_Clock *****************
   692 ;; Defined at:
   693 ;;		line 73 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   707 ;;      Params:         0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _Init_Clock
   722  078F                     _Init_Clock:	
   723  078F                     l657:	
   724                           ;incstack = 0
   725                           ; Regs used in _Init_Clock: [wreg]
   726                           
   727                           
   728                           ;main.c: 76:     OSCCON = 0x71;
   729  078F  3071               	movlw	113
   730  0790  1683               	bsf	3,5	;RP0=1, select bank1
   731  0791  1303               	bcf	3,6	;RP1=0, select bank1
   732  0792  008F               	movwf	15	;volatile
   733  0793                     l46:	
   734  0793  0008               	return
   735  0794                     __end_of_Init_Clock:	
   736  007E                     btemp	set	126	;btemp
   737  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Send_String_USART@str	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[33]), 


Critical Paths under _main in COMMON

    _main->_Send_String_USART
    _Send_String_USART->_Send_Char_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     138
                         _Init_Clock
                         _Init_Ports
                         _Init_USART
                  _Send_String_USART
 ---------------------------------------------------------------------------------
 (1) _Send_String_USART                                    3     3      0     138
                                              1 COMMON     3     3      0
                    _Send_Char_USART
 ---------------------------------------------------------------------------------
 (2) _Send_Char_USART                                      1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Clock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Clock
   _Init_Ports
   _Init_USART
   _Send_String_USART
     _Send_Char_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 13:19:37 2019

                         pc 0002                          l43 079E                          l52 07A0  
                        l61 07FB                          l46 0793                          l54 07A6  
                        l55 07A9                          l49 07BA                          u10 07A6  
                        u11 07A5                          u30 07FB                          u31 07FA  
                        fsr 0004                         l701 07BB                         l703 07C0  
                       l705 07C5                         l707 07CA                         l661 07AA  
                       l653 07A0                         l709 07CD                         l671 07B4  
                       l663 07AD                         l655 07A7                         l657 078F  
                       l673 07B7                         l665 07AF                         l659 0794  
                       l667 07B0                         l669 07B1                         l693 07D8  
                       l695 07DB                         l697 07E8                         l699 07EE  
                       fsr0 0004                        STR_1 0009  __size_of_Send_String_USART 0025  
                      _main 07BB                        btemp 007E          Send_String_USART@i 0071  
                      start 0000                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _ANSEL 0188    __size_of_Send_Char_USART 000B                       _SPBRG 0099  
                     _PORTD 0008                       _TRISD 0088                       _TXREG 0019  
                     pclath 000A                       status 0003                       wtemp0 007E  
                _Init_USART 07AA                  _Init_Clock 078F             __initialization 07FC  
                _Init_Ports 0794                __end_of_main 07D7                      ??_main 0074  
                    _ANSELH 0189                      _OSCCON 008F    Send_Char_USART@character 0070  
      Send_String_USART@str 0073           ??_Send_Char_USART 0070     __end_of__initialization 07FC  
               ?_Init_USART 0070                 ?_Init_Clock 0070              __pcstackCOMMON 0070  
               ?_Init_Ports 0070                  __pmaintext 07BB         __size_of_Init_USART 0011  
       __size_of_Init_Clock 0005         __size_of_Init_Ports 000B                  __stringtab 0003  
                   __ptext1 07D7                     __ptext2 079F                     __ptext3 07AA  
                   __ptext4 0794                     __ptext5 078F        end_of_initialization 07FC  
                 _RCSTAbits 0018             _Send_Char_USART 079F                   _TXSTAbits 0098  
              ??_Init_USART 0070                ??_Init_Clock 0070                ??_Init_Ports 0070  
               _BAUDCTLbits 0187         start_initialization 07FC          __end_of_Init_USART 07BB  
        __end_of_Init_Clock 0794          __end_of_Init_Ports 079F     __end_of_Send_Char_USART 07AA  
                 ___latbits 0002                   __pstrings 0003                    _PIE1bits 008C  
                  _PIR1bits 000C            ?_Send_Char_USART 0070                 __stringbase 0008  
        __end_of__stringtab 0009               __size_of_main 001C           _Send_String_USART 07D7  
        ?_Send_String_USART 0070         ??_Send_String_USART 0071   __end_of_Send_String_USART 07FC  
                 stringcode 0003                    stringdir 0003                    stringtab 0003  
