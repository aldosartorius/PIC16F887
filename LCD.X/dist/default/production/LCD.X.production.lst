

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 09 17:54:15 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  000C                     _PIR1bits	set	12
   287  0010                     _T1CON	set	16
   288  000F                     _TMR1H	set	15
   289  000E                     _TMR1L	set	14
   290  0008                     _PORTDbits	set	8
   291  008C                     _PIE1	set	140
   292  0088                     _TRISD	set	136
   293  008F                     _OSCCON	set	143
   294                           
   295                           	psect	strings
   296  0003                     __pstrings:	
   297  0003                     stringtab:	
   298  0003                     __stringtab:	
   299  0003                     stringcode:	
   300                           ;	String table - string pointers are 1 byte each
   301                           
   302  0003                     stringdir:	
   303  0003  3000               	movlw	high stringdir
   304  0004  008A               	movwf	10
   305  0005  0804               	movf	4,w
   306  0006  0A84               	incf	4,f
   307  0007  0782               	addwf	2,f
   308  0008                     __stringbase:	
   309  0008  3400               	retlw	0
   310  0009                     __end_of__stringtab:	
   311  0009                     STR_1:	
   312  0009  3441               	retlw	65	;'A'
   313  000A  346C               	retlw	108	;'l'
   314  000B  3464               	retlw	100	;'d'
   315  000C  346F               	retlw	111	;'o'
   316  000D  3420               	retlw	32	;' '
   317  000E  3453               	retlw	83	;'S'
   318  000F  3461               	retlw	97	;'a'
   319  0010  3472               	retlw	114	;'r'
   320  0011  3474               	retlw	116	;'t'
   321  0012  346F               	retlw	111	;'o'
   322  0013  3472               	retlw	114	;'r'
   323  0014  3469               	retlw	105	;'i'
   324  0015  3475               	retlw	117	;'u'
   325  0016  3473               	retlw	115	;'s'
   326  0017  3400               	retlw	0
   327  0018                     STR_2:	
   328  0018  3450               	retlw	80	;'P'
   329  0019  3472               	retlw	114	;'r'
   330  001A  3475               	retlw	117	;'u'
   331  001B  3465               	retlw	101	;'e'
   332  001C  3462               	retlw	98	;'b'
   333  001D  3461               	retlw	97	;'a'
   334  001E  3420               	retlw	32	;' '
   335  001F  344C               	retlw	76	;'L'
   336  0020  3443               	retlw	67	;'C'
   337  0021  3444               	retlw	68	;'D'
   338  0022  3400               	retlw	0
   339                           
   340                           ; #config settings
   341  0000                     
   342                           	psect	cinit
   343  07FC                     start_initialization:	
   344  07FC                     __initialization:	
   345  07FC                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348  07FC                     __end_of__initialization:	
   349  07FC  0183               	clrf	3
   350  07FD  120A  118A  2F61   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	cstackCOMMON
   353  0070                     __pcstackCOMMON:	
   354  0070                     ?_Lcd_Start:	
   355  0070                     ?_Lcd_Clear:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_Lcd_Print_String:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_Timer_Delay:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_Timer_Delay:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_Lcd_SetBit:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_Lcd_SetBit:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_Lcd_Cmd:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_Lcd_Print_Char:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     Lcd_SetBit@data_bit:	
   383                           ; 2 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  0070                     	ds	1
   388  0071                     ??_Lcd_Cmd:	
   389  0071                     ??_Lcd_Print_Char:	
   390                           ; 1 bytes @ 0x1
   391                           
   392  0071                     Lcd_Cmd@a:	
   393                           ; 1 bytes @ 0x1
   394                           
   395                           
   396                           ; 1 bytes @ 0x1
   397  0071                     	ds	1
   398  0072                     ??_Lcd_Start:	
   399  0072                     ??_Lcd_Clear:	
   400                           ; 1 bytes @ 0x2
   401                           
   402  0072                     ?_Lcd_Set_Cursor:	
   403                           ; 1 bytes @ 0x2
   404                           
   405  0072                     Lcd_Set_Cursor@column:	
   406                           ; 1 bytes @ 0x2
   407                           
   408  0072                     Lcd_Print_Char@Lower_Nibble:	
   409                           ; 1 bytes @ 0x2
   410                           
   411                           
   412                           ; 1 bytes @ 0x2
   413  0072                     	ds	1
   414  0073                     ??_Lcd_Set_Cursor:	
   415  0073                     Lcd_Print_Char@Upper_Nibble:	
   416                           ; 1 bytes @ 0x3
   417                           
   418                           
   419                           ; 1 bytes @ 0x3
   420  0073                     	ds	1
   421  0074                     Lcd_Print_Char@data:	
   422                           
   423                           ; 1 bytes @ 0x4
   424  0074                     	ds	1
   425  0075                     ??_Lcd_Print_String:	
   426  0075                     Lcd_Set_Cursor@row:	
   427                           ; 1 bytes @ 0x5
   428                           
   429  0075                     Lcd_Print_String@i:	
   430                           ; 1 bytes @ 0x5
   431                           
   432                           
   433                           ; 2 bytes @ 0x5
   434  0075                     	ds	1
   435  0076                     Lcd_Set_Cursor@z:	
   436                           
   437                           ; 1 bytes @ 0x6
   438  0076                     	ds	1
   439  0077                     Lcd_Set_Cursor@y:	
   440  0077                     Lcd_Print_String@a:	
   441                           ; 1 bytes @ 0x7
   442                           
   443                           
   444                           ; 1 bytes @ 0x7
   445  0077                     	ds	1
   446  0078                     Lcd_Set_Cursor@temp:	
   447                           
   448                           ; 1 bytes @ 0x8
   449  0078                     	ds	1
   450  0079                     ??_main:	
   451  0079                     main@count:	
   452                           ; 1 bytes @ 0x9
   453                           
   454                           
   455                           ; 2 bytes @ 0x9
   456  0079                     	ds	2
   457                           
   458                           	psect	maintext
   459  0761                     __pmaintext:	
   460 ;;
   461 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   462 ;;
   463 ;; *************** function _main *****************
   464 ;; Defined at:
   465 ;;		line 41 in file "main.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  count           2    9[COMMON] int 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  2   18[None  ] int 
   472 ;; Registers used:
   473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : B00/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         0       0       0       0       0
   480 ;;      Locals:         2       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0
   482 ;;      Totals:         2       0       0       0       0
   483 ;;Total ram usage:        2 bytes
   484 ;; Hardware stack levels required when called:    3
   485 ;; This function calls:
   486 ;;		_Lcd_Clear
   487 ;;		_Lcd_Print_String
   488 ;;		_Lcd_Set_Cursor
   489 ;;		_Lcd_Start
   490 ;;		_Timer_Delay
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _main
   498  0761                     _main:	
   499  0761                     l801:	
   500                           ;incstack = 0
   501                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   502                           
   503                           
   504                           ;main.c: 45:     OSCCON = 0x71;
   505  0761  3071               	movlw	113
   506  0762  1683               	bsf	3,5	;RP0=1, select bank1
   507  0763  1303               	bcf	3,6	;RP1=0, select bank1
   508  0764  008F               	movwf	15	;volatile
   509  0765                     l803:	
   510                           
   511                           ;main.c: 48:     TRISD = (unsigned char)0x00;
   512  0765  0188               	clrf	8	;volatile
   513  0766                     l805:	
   514                           
   515                           ;main.c: 49:     Lcd_Start();
   516  0766  120A  118A  2724  120A  118A  	fcall	_Lcd_Start
   517  076B                     l807:	
   518                           
   519                           ;main.c: 53:         Lcd_Clear();
   520  076B  120A  118A  267C  120A  118A  	fcall	_Lcd_Clear
   521  0770                     l809:	
   522                           
   523                           ;main.c: 54:         Lcd_Set_Cursor((char)1,(char)1);
   524  0770  01F2               	clrf	Lcd_Set_Cursor@column
   525  0771  0AF2               	incf	Lcd_Set_Cursor@column,f
   526  0772  3001               	movlw	1
   527  0773  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor
   528  0778                     l811:	
   529                           
   530                           ;main.c: 55:         Lcd_Print_String((char *)"Aldo Sartorius");
   531  0778  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   532  0779  120A  118A  26D4  120A  118A  	fcall	_Lcd_Print_String
   533  077E                     l813:	
   534                           
   535                           ;main.c: 56:         Lcd_Set_Cursor((char)2,(char)1);
   536  077E  01F2               	clrf	Lcd_Set_Cursor@column
   537  077F  0AF2               	incf	Lcd_Set_Cursor@column,f
   538  0780  3002               	movlw	2
   539  0781  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor
   540  0786                     l815:	
   541                           
   542                           ;main.c: 57:         Lcd_Print_String((char *)"Prueba LCD");
   543  0786  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   544  0787  120A  118A  26D4  120A  118A  	fcall	_Lcd_Print_String
   545  078C                     l817:	
   546                           
   547                           ;main.c: 58:         for (int count=0; count<=20; count++ ){
   548  078C  01F9               	clrf	main@count
   549  078D  01FA               	clrf	main@count+1
   550  078E                     l823:	
   551                           
   552                           ;main.c: 59:             Timer_Delay();
   553  078E  120A  118A  2689  120A  118A  	fcall	_Timer_Delay
   554  0793                     l825:	
   555                           
   556                           ;main.c: 60:         }
   557  0793  3001               	movlw	1
   558  0794  07F9               	addwf	main@count,f
   559  0795  1803               	skipnc
   560  0796  0AFA               	incf	main@count+1,f
   561  0797  3000               	movlw	0
   562  0798  07FA               	addwf	main@count+1,f
   563  0799                     l827:	
   564  0799  087A               	movf	main@count+1,w
   565  079A  3A80               	xorlw	128
   566  079B  00FF               	movwf	btemp+1
   567  079C  3080               	movlw	128
   568  079D  027F               	subwf	btemp+1,w
   569  079E  1D03               	skipz
   570  079F  2FA2               	goto	u185
   571  07A0  3015               	movlw	21
   572  07A1  0279               	subwf	main@count,w
   573  07A2                     u185:	
   574  07A2  1C03               	skipc
   575  07A3  2FA5               	goto	u181
   576  07A4  2FA6               	goto	u180
   577  07A5                     u181:	
   578  07A5  2F8E               	goto	l823
   579  07A6                     u180:	
   580  07A6  2F6B               	goto	l807
   581  07A7  120A  118A  2800   	ljmp	start
   582  07AA                     __end_of_main:	
   583                           
   584                           	psect	text1
   585  0724                     __ptext1:	
   586 ;; *************** function _Lcd_Start *****************
   587 ;; Defined at:
   588 ;;		line 73 in file "LCD_driver.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    2
   609 ;; This function calls:
   610 ;;		_Lcd_Cmd
   611 ;;		_Lcd_SetBit
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _Lcd_Start
   619  0724                     _Lcd_Start:	
   620  0724                     l713:	
   621                           ;incstack = 0
   622                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
   623                           
   624                           
   625                           ;LCD_driver.c: 75:   Lcd_SetBit(0x00);
   626  0724  3000               	movlw	0
   627  0725  120A  118A  26B2  120A  118A  	fcall	_Lcd_SetBit
   628                           
   629                           ;LCD_driver.c: 76:   Lcd_Cmd(0x03);
   630  072A  3003               	movlw	3
   631  072B  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   632                           
   633                           ;LCD_driver.c: 77:   Lcd_Cmd(0x03);
   634  0730  3003               	movlw	3
   635  0731  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   636                           
   637                           ;LCD_driver.c: 78:   Lcd_Cmd(0x02);
   638  0736  3002               	movlw	2
   639  0737  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   640                           
   641                           ;LCD_driver.c: 79:   Lcd_Cmd(0x02);
   642  073C  3002               	movlw	2
   643  073D  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   644                           
   645                           ;LCD_driver.c: 80:   Lcd_Cmd(0x08);
   646  0742  3008               	movlw	8
   647  0743  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   648                           
   649                           ;LCD_driver.c: 81:   Lcd_Cmd(0x00);
   650  0748  3000               	movlw	0
   651  0749  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   652                           
   653                           ;LCD_driver.c: 82:   Lcd_Cmd(0x0C);
   654  074E  300C               	movlw	12
   655  074F  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   656                           
   657                           ;LCD_driver.c: 83:   Lcd_Cmd(0x00);
   658  0754  3000               	movlw	0
   659  0755  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   660                           
   661                           ;LCD_driver.c: 84:   Lcd_Cmd(0x06);
   662  075A  3006               	movlw	6
   663  075B  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   664  0760                     l64:	
   665  0760  0008               	return
   666  0761                     __end_of_Lcd_Start:	
   667                           
   668                           	psect	text2
   669  07AA                     __ptext2:	
   670 ;; *************** function _Lcd_Set_Cursor *****************
   671 ;; Defined at:
   672 ;;		line 53 in file "LCD_driver.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  row             1    wreg     unsigned char 
   675 ;;  column          1    2[COMMON] unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  row             1    5[COMMON] unsigned char 
   678 ;;  temp            1    8[COMMON] unsigned char 
   679 ;;  y               1    7[COMMON] unsigned char 
   680 ;;  z               1    6[COMMON] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         1       0       0       0       0
   691 ;;      Locals:         4       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0
   693 ;;      Totals:         7       0       0       0       0
   694 ;;Total ram usage:        7 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    2
   697 ;; This function calls:
   698 ;;		_Lcd_Cmd
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _Lcd_Set_Cursor
   706  07AA                     _Lcd_Set_Cursor:	
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   710                           ;Lcd_Set_Cursor@row stored from wreg
   711  07AA  00F5               	movwf	Lcd_Set_Cursor@row
   712  07AB                     l773:	
   713                           
   714                           ;LCD_driver.c: 54:     char temp,z,y;;LCD_driver.c: 55:     if(row == 1)
   715  07AB  0375               	decf	Lcd_Set_Cursor@row,w
   716  07AC  1D03               	btfss	3,2
   717  07AD  2FAF               	goto	u131
   718  07AE  2FB0               	goto	u130
   719  07AF                     u131:	
   720  07AF  2FD3               	goto	l783
   721  07B0                     u130:	
   722  07B0                     l775:	
   723                           
   724                           ;LCD_driver.c: 56:     {;LCD_driver.c: 57:         temp = 0x80 + column - 1;
   725  07B0  0872               	movf	Lcd_Set_Cursor@column,w
   726  07B1  3E7F               	addlw	127
   727  07B2  00F3               	movwf	??_Lcd_Set_Cursor
   728  07B3  0873               	movf	??_Lcd_Set_Cursor,w
   729  07B4  00F8               	movwf	Lcd_Set_Cursor@temp
   730                           
   731                           ;LCD_driver.c: 58:         z = temp>>4;
   732  07B5  0878               	movf	Lcd_Set_Cursor@temp,w
   733  07B6  00F3               	movwf	??_Lcd_Set_Cursor
   734  07B7  3004               	movlw	4
   735  07B8                     u145:	
   736  07B8  1003               	clrc
   737  07B9  0CF3               	rrf	??_Lcd_Set_Cursor,f
   738  07BA  3EFF               	addlw	-1
   739  07BB  1D03               	skipz
   740  07BC  2FB8               	goto	u145
   741  07BD  0873               	movf	??_Lcd_Set_Cursor,w
   742  07BE  00F4               	movwf	??_Lcd_Set_Cursor+1
   743  07BF  0874               	movf	??_Lcd_Set_Cursor+1,w
   744  07C0  00F6               	movwf	Lcd_Set_Cursor@z
   745  07C1                     l777:	
   746                           
   747                           ;LCD_driver.c: 59:         y = temp & 0x0F;
   748  07C1  0878               	movf	Lcd_Set_Cursor@temp,w
   749  07C2  390F               	andlw	15
   750  07C3  00F3               	movwf	??_Lcd_Set_Cursor
   751  07C4  0873               	movf	??_Lcd_Set_Cursor,w
   752  07C5  00F7               	movwf	Lcd_Set_Cursor@y
   753  07C6                     l779:	
   754                           
   755                           ;LCD_driver.c: 60:         Lcd_Cmd(z);
   756  07C6  0876               	movf	Lcd_Set_Cursor@z,w
   757  07C7  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   758  07CC                     l781:	
   759                           
   760                           ;LCD_driver.c: 61:         Lcd_Cmd(y);
   761  07CC  0877               	movf	Lcd_Set_Cursor@y,w
   762  07CD  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   763                           
   764                           ;LCD_driver.c: 62:     }
   765  07D2  2FFB               	goto	l61
   766  07D3                     l783:	
   767  07D3  3002               	movlw	2
   768  07D4  0675               	xorwf	Lcd_Set_Cursor@row,w
   769  07D5  1D03               	btfss	3,2
   770  07D6  2FD8               	goto	u151
   771  07D7  2FD9               	goto	u150
   772  07D8                     u151:	
   773  07D8  2FFB               	goto	l61
   774  07D9                     u150:	
   775  07D9                     l785:	
   776                           
   777                           ;LCD_driver.c: 64:     {;LCD_driver.c: 65:         temp = 0xC0 + column - 1;
   778  07D9  0872               	movf	Lcd_Set_Cursor@column,w
   779  07DA  3EBF               	addlw	191
   780  07DB  00F3               	movwf	??_Lcd_Set_Cursor
   781  07DC  0873               	movf	??_Lcd_Set_Cursor,w
   782  07DD  00F8               	movwf	Lcd_Set_Cursor@temp
   783                           
   784                           ;LCD_driver.c: 66:         z = temp>>4;
   785  07DE  0878               	movf	Lcd_Set_Cursor@temp,w
   786  07DF  00F3               	movwf	??_Lcd_Set_Cursor
   787  07E0  3004               	movlw	4
   788  07E1                     u165:	
   789  07E1  1003               	clrc
   790  07E2  0CF3               	rrf	??_Lcd_Set_Cursor,f
   791  07E3  3EFF               	addlw	-1
   792  07E4  1D03               	skipz
   793  07E5  2FE1               	goto	u165
   794  07E6  0873               	movf	??_Lcd_Set_Cursor,w
   795  07E7  00F4               	movwf	??_Lcd_Set_Cursor+1
   796  07E8  0874               	movf	??_Lcd_Set_Cursor+1,w
   797  07E9  00F6               	movwf	Lcd_Set_Cursor@z
   798  07EA                     l787:	
   799                           
   800                           ;LCD_driver.c: 67:         y = temp & 0x0F;
   801  07EA  0878               	movf	Lcd_Set_Cursor@temp,w
   802  07EB  390F               	andlw	15
   803  07EC  00F3               	movwf	??_Lcd_Set_Cursor
   804  07ED  0873               	movf	??_Lcd_Set_Cursor,w
   805  07EE  00F7               	movwf	Lcd_Set_Cursor@y
   806  07EF                     l789:	
   807                           
   808                           ;LCD_driver.c: 68:         Lcd_Cmd(z);
   809  07EF  0876               	movf	Lcd_Set_Cursor@z,w
   810  07F0  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   811  07F5                     l791:	
   812                           
   813                           ;LCD_driver.c: 69:         Lcd_Cmd(y);
   814  07F5  0877               	movf	Lcd_Set_Cursor@y,w
   815  07F6  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
   816  07FB                     l61:	
   817  07FB  0008               	return
   818  07FC                     __end_of_Lcd_Set_Cursor:	
   819                           
   820                           	psect	text3
   821  06D4                     __ptext3:	
   822 ;; *************** function _Lcd_Print_String *****************
   823 ;; Defined at:
   824 ;;		line 100 in file "LCD_driver.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  a               1    wreg     PTR unsigned char 
   827 ;;		 -> STR_2(11), STR_1(15), 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  a               1    7[COMMON] PTR unsigned char 
   830 ;;		 -> STR_2(11), STR_1(15), 
   831 ;;  i               2    5[COMMON] int 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         3       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         3       0       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    2
   848 ;; This function calls:
   849 ;;		_Lcd_Print_Char
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _Lcd_Print_String
   857  06D4                     _Lcd_Print_String:	
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   861                           ;Lcd_Print_String@a stored from wreg
   862  06D4  00F7               	movwf	Lcd_Print_String@a
   863  06D5                     l793:	
   864                           
   865                           ;LCD_driver.c: 101:     int i;;LCD_driver.c: 102:     for(i = 0; a[i] != '\0'; i++){
   866  06D5  01F5               	clrf	Lcd_Print_String@i
   867  06D6  01F6               	clrf	Lcd_Print_String@i+1
   868  06D7  2EEB               	goto	l799
   869  06D8                     l795:	
   870                           
   871                           ;LCD_driver.c: 103:        Lcd_Print_Char(a[i]);
   872  06D8  0875               	movf	Lcd_Print_String@i,w
   873  06D9  0777               	addwf	Lcd_Print_String@a,w
   874  06DA  0084               	movwf	4
   875  06DB  120A  118A  2003  120A  118A  	fcall	stringdir
   876  06E0  120A  118A  26F9  120A  118A  	fcall	_Lcd_Print_Char
   877  06E5                     l797:	
   878                           
   879                           ;LCD_driver.c: 104:     }
   880  06E5  3001               	movlw	1
   881  06E6  07F5               	addwf	Lcd_Print_String@i,f
   882  06E7  1803               	skipnc
   883  06E8  0AF6               	incf	Lcd_Print_String@i+1,f
   884  06E9  3000               	movlw	0
   885  06EA  07F6               	addwf	Lcd_Print_String@i+1,f
   886  06EB                     l799:	
   887  06EB  0875               	movf	Lcd_Print_String@i,w
   888  06EC  0777               	addwf	Lcd_Print_String@a,w
   889  06ED  0084               	movwf	4
   890  06EE  120A  118A  2003  120A  118A  	fcall	stringdir
   891  06F3  3A00               	xorlw	0
   892  06F4  1D03               	skipz
   893  06F5  2EF7               	goto	u171
   894  06F6  2EF8               	goto	u170
   895  06F7                     u171:	
   896  06F7  2ED8               	goto	l795
   897  06F8                     u170:	
   898  06F8                     l73:	
   899  06F8  0008               	return
   900  06F9                     __end_of_Lcd_Print_String:	
   901                           
   902                           	psect	text4
   903  06F9                     __ptext4:	
   904 ;; *************** function _Lcd_Print_Char *****************
   905 ;; Defined at:
   906 ;;		line 87 in file "LCD_driver.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  data            1    wreg     unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  data            1    4[COMMON] unsigned char 
   911 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
   912 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         3       0       0       0       0
   924 ;;      Temps:          1       0       0       0       0
   925 ;;      Totals:         4       0       0       0       0
   926 ;;Total ram usage:        4 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    1
   929 ;; This function calls:
   930 ;;		_Lcd_SetBit
   931 ;; This function is called by:
   932 ;;		_Lcd_Print_String
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _Lcd_Print_Char
   938  06F9                     _Lcd_Print_Char:	
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
   942                           ;Lcd_Print_Char@data stored from wreg
   943  06F9  00F4               	movwf	Lcd_Print_Char@data
   944  06FA                     l697:	
   945                           
   946                           ;LCD_driver.c: 88:    char Lower_Nibble,Upper_Nibble;;LCD_driver.c: 89:    Lower_Nibble 
      +                          = data&0x0F;
   947  06FA  0874               	movf	Lcd_Print_Char@data,w
   948  06FB  390F               	andlw	15
   949  06FC  00F1               	movwf	??_Lcd_Print_Char
   950  06FD  0871               	movf	??_Lcd_Print_Char,w
   951  06FE  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
   952                           
   953                           ;LCD_driver.c: 90:    Upper_Nibble = data&0xF0;
   954  06FF  0874               	movf	Lcd_Print_Char@data,w
   955  0700  39F0               	andlw	240
   956  0701  00F1               	movwf	??_Lcd_Print_Char
   957  0702  0871               	movf	??_Lcd_Print_Char,w
   958  0703  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
   959  0704                     l699:	
   960                           
   961                           ;LCD_driver.c: 91:    PORTDbits.RD2 = 1;
   962  0704  1283               	bcf	3,5	;RP0=0, select bank0
   963  0705  1303               	bcf	3,6	;RP1=0, select bank0
   964  0706  1508               	bsf	8,2	;volatile
   965  0707                     l701:	
   966                           
   967                           ;LCD_driver.c: 92:    Lcd_SetBit(Upper_Nibble>>4);
   968  0707  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
   969  0708  00F1               	movwf	??_Lcd_Print_Char
   970  0709  3004               	movlw	4
   971  070A                     u65:	
   972  070A  1003               	clrc
   973  070B  0CF1               	rrf	??_Lcd_Print_Char,f
   974  070C  3EFF               	addlw	-1
   975  070D  1D03               	skipz
   976  070E  2F0A               	goto	u65
   977  070F  0871               	movf	??_Lcd_Print_Char,w
   978  0710  120A  118A  26B2  120A  118A  	fcall	_Lcd_SetBit
   979  0715                     l703:	
   980                           
   981                           ;LCD_driver.c: 93:    PORTDbits.RD3 = 1;
   982  0715  1283               	bcf	3,5	;RP0=0, select bank0
   983  0716  1303               	bcf	3,6	;RP1=0, select bank0
   984  0717  1588               	bsf	8,3	;volatile
   985  0718                     l705:	
   986                           
   987                           ;LCD_driver.c: 94:    PORTDbits.RD3 = 0;
   988  0718  1188               	bcf	8,3	;volatile
   989  0719                     l707:	
   990                           
   991                           ;LCD_driver.c: 95:    Lcd_SetBit(Lower_Nibble);
   992  0719  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
   993  071A  120A  118A  26B2  120A  118A  	fcall	_Lcd_SetBit
   994  071F                     l709:	
   995                           
   996                           ;LCD_driver.c: 96:    PORTDbits.RD3 = 1;
   997  071F  1283               	bcf	3,5	;RP0=0, select bank0
   998  0720  1303               	bcf	3,6	;RP1=0, select bank0
   999  0721  1588               	bsf	8,3	;volatile
  1000  0722                     l711:	
  1001                           
  1002                           ;LCD_driver.c: 97:    PORTDbits.RD3 = 0;
  1003  0722  1188               	bcf	8,3	;volatile
  1004  0723                     l67:	
  1005  0723  0008               	return
  1006  0724                     __end_of_Lcd_Print_Char:	
  1007                           
  1008                           	psect	text5
  1009  067C                     __ptext5:	
  1010 ;; *************** function _Lcd_Clear *****************
  1011 ;; Defined at:
  1012 ;;		line 47 in file "LCD_driver.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		_Lcd_Cmd
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _Lcd_Clear
  1042  067C                     _Lcd_Clear:	
  1043  067C                     l715:	
  1044                           ;incstack = 0
  1045                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1046                           
  1047                           
  1048                           ;LCD_driver.c: 48:     Lcd_Cmd(0x00);
  1049  067C  3000               	movlw	0
  1050  067D  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
  1051                           
  1052                           ;LCD_driver.c: 49:     Lcd_Cmd(0x01);
  1053  0682  3001               	movlw	1
  1054  0683  120A  118A  269C  120A  118A  	fcall	_Lcd_Cmd
  1055  0688                     l55:	
  1056  0688  0008               	return
  1057  0689                     __end_of_Lcd_Clear:	
  1058                           
  1059                           	psect	text6
  1060  069C                     __ptext6:	
  1061 ;; *************** function _Lcd_Cmd *****************
  1062 ;; Defined at:
  1063 ;;		line 39 in file "LCD_driver.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  a               1    wreg     unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  a               1    1[COMMON] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         1       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         1       0       0       0       0
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    1
  1084 ;; This function calls:
  1085 ;;		_Lcd_SetBit
  1086 ;;		_Timer_Delay
  1087 ;; This function is called by:
  1088 ;;		_Lcd_Clear
  1089 ;;		_Lcd_Set_Cursor
  1090 ;;		_Lcd_Start
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _Lcd_Cmd
  1096  069C                     _Lcd_Cmd:	
  1097                           
  1098                           ;incstack = 0
  1099                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1100                           ;Lcd_Cmd@a stored from wreg
  1101  069C  00F1               	movwf	Lcd_Cmd@a
  1102  069D                     l689:	
  1103                           
  1104                           ;LCD_driver.c: 40:     PORTDbits.RD2 = 0;
  1105  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1106  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1107  069F  1108               	bcf	8,2	;volatile
  1108  06A0                     l691:	
  1109                           
  1110                           ;LCD_driver.c: 41:     Lcd_SetBit(a);
  1111  06A0  0871               	movf	Lcd_Cmd@a,w
  1112  06A1  120A  118A  26B2  120A  118A  	fcall	_Lcd_SetBit
  1113  06A6                     l693:	
  1114                           
  1115                           ;LCD_driver.c: 42:     PORTDbits.RD3 = 1;
  1116  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1117  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1118  06A8  1588               	bsf	8,3	;volatile
  1119                           
  1120                           ;LCD_driver.c: 43:    Timer_Delay();
  1121  06A9  120A  118A  2689  120A  118A  	fcall	_Timer_Delay
  1122  06AE                     l695:	
  1123                           
  1124                           ;LCD_driver.c: 44:     PORTDbits.RD3 = 0;
  1125  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1126  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1127  06B0  1188               	bcf	8,3	;volatile
  1128  06B1                     l52:	
  1129  06B1  0008               	return
  1130  06B2                     __end_of_Lcd_Cmd:	
  1131                           
  1132                           	psect	text7
  1133  0689                     __ptext7:	
  1134 ;; *************** function _Timer_Delay *****************
  1135 ;; Defined at:
  1136 ;;		line 107 in file "LCD_driver.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          1       0       0       0       0
  1153 ;;      Totals:         1       0       0       0       0
  1154 ;;Total ram usage:        1 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;;		_Lcd_Cmd
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _Timer_Delay
  1166  0689                     _Timer_Delay:	
  1167  0689                     l671:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _Timer_Delay: [wreg+status,2+status,0]
  1170                           
  1171                           
  1172                           ;LCD_driver.c: 110:     PIE1 &= (unsigned char)0x1;
  1173  0689  3001               	movlw	1
  1174  068A  00F0               	movwf	??_Timer_Delay
  1175  068B  0870               	movf	??_Timer_Delay,w
  1176  068C  1683               	bsf	3,5	;RP0=1, select bank1
  1177  068D  1303               	bcf	3,6	;RP1=0, select bank1
  1178  068E  058C               	andwf	12,f	;volatile
  1179  068F                     l673:	
  1180                           
  1181                           ;LCD_driver.c: 112:     TMR1L = (unsigned char)0x60;
  1182  068F  3060               	movlw	96
  1183  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0692  008E               	movwf	14	;volatile
  1186  0693                     l675:	
  1187                           
  1188                           ;LCD_driver.c: 113:     TMR1H = (unsigned char)0xF0;
  1189  0693  30F0               	movlw	240
  1190  0694  008F               	movwf	15	;volatile
  1191  0695                     l677:	
  1192                           
  1193                           ;LCD_driver.c: 116:     T1CON |= (unsigned char)0x1;
  1194  0695  1410               	bsf	16,0	;volatile
  1195  0696                     l76:	
  1196                           ;LCD_driver.c: 117:     while(PIR1bits.TMR1IF == 0){};
  1197                           
  1198  0696  1C0C               	btfss	12,0	;volatile
  1199  0697  2E99               	goto	u11
  1200  0698  2E9A               	goto	u10
  1201  0699                     u11:	
  1202  0699  2E96               	goto	l76
  1203  069A                     u10:	
  1204  069A                     l78:	
  1205                           
  1206                           ;LCD_driver.c: 118:     PIR1bits.TMR1IF = 0;
  1207  069A  100C               	bcf	12,0	;volatile
  1208  069B                     l79:	
  1209  069B  0008               	return
  1210  069C                     __end_of_Timer_Delay:	
  1211                           
  1212                           	psect	text8
  1213  06B2                     __ptext8:	
  1214 ;; *************** function _Lcd_SetBit *****************
  1215 ;; Defined at:
  1216 ;;		line 12 in file "LCD_driver.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  data_bit        1    wreg     unsigned char 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  data_bit        1    0[COMMON] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         1       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         1       0       0       0       0
  1234 ;;Total ram usage:        1 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_Lcd_Cmd
  1240 ;;		_Lcd_Start
  1241 ;;		_Lcd_Print_Char
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _Lcd_SetBit
  1247  06B2                     _Lcd_SetBit:	
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _Lcd_SetBit: [wreg]
  1251                           ;Lcd_SetBit@data_bit stored from wreg
  1252  06B2  00F0               	movwf	Lcd_SetBit@data_bit
  1253  06B3                     l679:	
  1254                           
  1255                           ;LCD_driver.c: 13:     if(data_bit & 1){
  1256  06B3  1C70               	btfss	Lcd_SetBit@data_bit,0
  1257  06B4  2EB6               	goto	u21
  1258  06B5  2EB7               	goto	u20
  1259  06B6                     u21:	
  1260  06B6  2EBB               	goto	l41
  1261  06B7                     u20:	
  1262  06B7                     l681:	
  1263                           
  1264                           ;LCD_driver.c: 14:         PORTDbits.RD4 = 1;
  1265  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1266  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1267  06B9  1608               	bsf	8,4	;volatile
  1268                           
  1269                           ;LCD_driver.c: 15:     }
  1270  06BA  2EBE               	goto	l42
  1271  06BB                     l41:	
  1272                           ;LCD_driver.c: 16:     else{
  1273                           
  1274                           
  1275                           ;LCD_driver.c: 17:         PORTDbits.RD4 = 0;
  1276  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1277  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1278  06BD  1208               	bcf	8,4	;volatile
  1279  06BE                     l42:	
  1280                           ;LCD_driver.c: 18:     }
  1281                           
  1282                           
  1283                           ;LCD_driver.c: 19:     if(data_bit & 2){
  1284  06BE  1CF0               	btfss	Lcd_SetBit@data_bit,1
  1285  06BF  2EC1               	goto	u31
  1286  06C0  2EC2               	goto	u30
  1287  06C1                     u31:	
  1288  06C1  2EC4               	goto	l43
  1289  06C2                     u30:	
  1290  06C2                     l683:	
  1291                           
  1292                           ;LCD_driver.c: 20:         PORTDbits.RD5 = 1;
  1293  06C2  1688               	bsf	8,5	;volatile
  1294                           
  1295                           ;LCD_driver.c: 21:     }
  1296  06C3  2EC5               	goto	l44
  1297  06C4                     l43:	
  1298                           ;LCD_driver.c: 22:     else{
  1299                           
  1300                           
  1301                           ;LCD_driver.c: 23:         PORTDbits.RD5 = 0;
  1302  06C4  1288               	bcf	8,5	;volatile
  1303  06C5                     l44:	
  1304                           ;LCD_driver.c: 24:     }
  1305                           
  1306                           
  1307                           ;LCD_driver.c: 25:     if(data_bit & 4){
  1308  06C5  1D70               	btfss	Lcd_SetBit@data_bit,2
  1309  06C6  2EC8               	goto	u41
  1310  06C7  2EC9               	goto	u40
  1311  06C8                     u41:	
  1312  06C8  2ECB               	goto	l45
  1313  06C9                     u40:	
  1314  06C9                     l685:	
  1315                           
  1316                           ;LCD_driver.c: 26:         PORTDbits.RD6 = 1;
  1317  06C9  1708               	bsf	8,6	;volatile
  1318                           
  1319                           ;LCD_driver.c: 27:     }
  1320  06CA  2ECC               	goto	l46
  1321  06CB                     l45:	
  1322                           ;LCD_driver.c: 28:     else{
  1323                           
  1324                           
  1325                           ;LCD_driver.c: 29:         PORTDbits.RD6 = 0;
  1326  06CB  1308               	bcf	8,6	;volatile
  1327  06CC                     l46:	
  1328                           ;LCD_driver.c: 30:     }
  1329                           
  1330                           
  1331                           ;LCD_driver.c: 31:     if(data_bit & 8){
  1332  06CC  1DF0               	btfss	Lcd_SetBit@data_bit,3
  1333  06CD  2ECF               	goto	u51
  1334  06CE  2ED0               	goto	u50
  1335  06CF                     u51:	
  1336  06CF  2ED2               	goto	l47
  1337  06D0                     u50:	
  1338  06D0                     l687:	
  1339                           
  1340                           ;LCD_driver.c: 32:         PORTDbits.RD7 = 1;
  1341  06D0  1788               	bsf	8,7	;volatile
  1342                           
  1343                           ;LCD_driver.c: 33:     }
  1344  06D1  2ED3               	goto	l49
  1345  06D2                     l47:	
  1346                           ;LCD_driver.c: 34:     else{
  1347                           
  1348                           
  1349                           ;LCD_driver.c: 35:         PORTDbits.RD7 = 0;
  1350  06D2  1388               	bcf	8,7	;volatile
  1351  06D3                     l49:	
  1352  06D3  0008               	return
  1353  06D4                     __end_of_Lcd_SetBit:	
  1354  007E                     btemp	set	126	;btemp
  1355  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[11]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Lcd_Cmd->_Timer_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1029
                                              9 COMMON     2     2      0
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            0     0      0     135
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     497
                                              2 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     276
                                              5 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              1     1      0      75
                                              1 COMMON     1     1      0
                         _Lcd_SetBit
                        _Timer_Delay
 ---------------------------------------------------------------------------------
 (1) _Timer_Delay                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
       _Timer_Delay
     _Lcd_SetBit
   _Timer_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 09 17:54:15 2019

                         pc 0002                          l41 06BB                          l42 06BE  
                        l43 06C4                          l44 06C5                          l52 06B1  
                        l45 06CB                          l61 07FB                          l46 06CC  
                        l47 06D2                          l55 0688                          l64 0760  
                        l49 06D3                          l73 06F8                          l67 0723  
                        l76 0696                          l78 069A                          l79 069B  
                        u10 069A                          u11 0699                          u20 06B7  
                        u21 06B6                          u30 06C2                          u31 06C1  
                        u40 06C9                          u41 06C8                          u50 06D0  
                        u51 06CF                          u65 070A                          fsr 0004  
                       l701 0707                         l711 0722                         l703 0715  
                       l705 0718                         l713 0724                         l801 0761  
                       l715 067C                         l707 0719                         l811 0778  
                       l803 0765                         l709 071F                         l813 077E  
                       l805 0766                         l671 0689                         l823 078E  
                       l815 0786                         l807 076B                         l681 06B7  
                       l673 068F                         l825 0793                         l817 078C  
                       l809 0770                         l683 06C2                         l675 0693  
                       l691 06A0                         l827 0799                         l685 06C9  
                       l677 0695                         l693 06A6                         l781 07CC  
                       l773 07AB                         l687 06D0                         l679 06B3  
                       l695 06AE                         l791 07F5                         l775 07B0  
                       l783 07D3                         l689 069D                         l697 06FA  
                       l793 06D5                         l785 07D9                         l777 07C1  
                       l699 0704                         l795 06D8                         l787 07EA  
                       l779 07C6                         l797 06E5                         l789 07EF  
                       l799 06EB                         u130 07B0                         u131 07AF  
                       u150 07D9                         u151 07D8                         u145 07B8  
                       u170 06F8                         u171 06F7                         u180 07A6  
                       u165 07E1                         u181 07A5                         u185 07A2  
                       fsr0 0004                        STR_1 0009                        STR_2 0018  
                      _PIE1 008C                        _main 0761                        btemp 007E  
                      start 0000          Lcd_Print_Char@data 0074             __end_of_Lcd_Cmd 06B2  
                _Lcd_SetBit 06B2                       ?_main 0070               __CFG_WDTE$OFF 0000  
                     _T1CON 0010                       _TMR1H 000F                       _TMR1L 000E  
   __size_of_Lcd_Set_Cursor 0052                       _TRISD 0088                       pclath 000A  
 __size_of_Lcd_Print_String 0025                       status 0003                       wtemp0 007E  
   __size_of_Lcd_Print_Char 002B             __initialization 07FC                __end_of_main 07AA  
                    ??_main 0079          __size_of_Lcd_Clear 000D          __size_of_Lcd_Start 003D  
                    _OSCCON 008F                   ??_Lcd_Cmd 0071                 ?_Lcd_SetBit 0070  
             ??_Timer_Delay 0070             Lcd_Set_Cursor@y 0077             Lcd_Set_Cursor@z 0076  
   __end_of__initialization 07FC           __end_of_Lcd_Clear 0689           __end_of_Lcd_Start 0761  
            __pcstackCOMMON 0070              _Lcd_Set_Cursor 07AA         __end_of_Timer_Delay 069C  
          _Lcd_Print_String 06D4         __size_of_Lcd_SetBit 0022              _Lcd_Print_Char 06F9  
                __pmaintext 0761          Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 07FC  
                __stringtab 0003                     _Lcd_Cmd 069C      __end_of_Lcd_Print_Char 0724  
           ?_Lcd_Set_Cursor 0072                 _Timer_Delay 0689                     __ptext1 0724  
                   __ptext2 07AA                     __ptext3 06D4                     __ptext4 06F9  
                   __ptext5 067C                     __ptext6 069C                     __ptext7 0689  
                   __ptext8 06B2        end_of_initialization 07FC             ?_Lcd_Print_Char 0070  
              ??_Lcd_SetBit 0070                   _PORTDbits 0008          __end_of_Lcd_SetBit 06D4  
                 _Lcd_Clear 067C                   _Lcd_Start 0724    __end_of_Lcd_Print_String 06F9  
       start_initialization 07FC           Lcd_Print_String@a 0077           Lcd_Print_String@i 0075  
                ?_Lcd_Clear 0070                  ?_Lcd_Start 0070  Lcd_Print_Char@Lower_Nibble 0072  
                 ___latbits 0002                    ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0073  
              ?_Timer_Delay 0070                   __pstrings 0003            ??_Lcd_Print_Char 0071  
                  Lcd_Cmd@a 0071                    _PIR1bits 000C                 ??_Lcd_Clear 0072  
               ??_Lcd_Start 0072                 __stringbase 0008                   main@count 0079  
      Lcd_Set_Cursor@column 0072            __size_of_Lcd_Cmd 0016          __end_of__stringtab 0009  
         ?_Lcd_Print_String 0070          ??_Lcd_Print_String 0075               __size_of_main 0049  
Lcd_Print_Char@Upper_Nibble 0073        __size_of_Timer_Delay 0013                   stringcode 0003  
        Lcd_Set_Cursor@temp 0078                    stringdir 0003                    stringtab 0003  
         Lcd_Set_Cursor@row 0075  
