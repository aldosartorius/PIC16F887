

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 22 15:40:08 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0043                     _RD3	set	67
   209  0042                     _RD2	set	66
   210  0047                     _RD7	set	71
   211  0046                     _RD6	set	70
   212  0045                     _RD5	set	69
   213  0044                     _RD4	set	68
   214  0088                     _TRISD	set	136
   215                           
   216                           	psect	strings
   217  0003                     __pstrings:	
   218  0003                     stringtab:	
   219  0003                     __stringtab:	
   220  0003                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223  0003                     stringdir:	
   224  0003  3000               	movlw	high stringdir
   225  0004  008A               	movwf	10
   226  0005  0804               	movf	4,w
   227  0006  0A84               	incf	4,f
   228  0007  0782               	addwf	2,f
   229  0008                     __stringbase:	
   230  0008  3400               	retlw	0
   231  0009                     __end_of__stringtab:	
   232  0009                     STR_1:	
   233  0009  3441               	retlw	65	;'A'
   234  000A  346C               	retlw	108	;'l'
   235  000B  3464               	retlw	100	;'d'
   236  000C  346F               	retlw	111	;'o'
   237  000D  3420               	retlw	32	;' '
   238  000E  3453               	retlw	83	;'S'
   239  000F  3461               	retlw	97	;'a'
   240  0010  3472               	retlw	114	;'r'
   241  0011  3474               	retlw	116	;'t'
   242  0012  346F               	retlw	111	;'o'
   243  0013  3472               	retlw	114	;'r'
   244  0014  3469               	retlw	105	;'i'
   245  0015  3475               	retlw	117	;'u'
   246  0016  3473               	retlw	115	;'s'
   247  0017  3400               	retlw	0
   248  0018                     STR_3:	
   249  0018  3449               	retlw	73	;'I'
   250  0019  344D               	retlw	77	;'M'
   251  001A  3450               	retlw	80	;'P'
   252  001B  3441               	retlw	65	;'A'
   253  001C  3452               	retlw	82	;'R'
   254  001D  3400               	retlw	0
   255  001A                     
   256                           ; #config settings
   257  0000                     
   258                           	psect	cinit
   259  07FC                     start_initialization:	
   260  07FC                     __initialization:	
   261  07FC                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  07FC                     __end_of__initialization:	
   265  07FC  0183               	clrf	3
   266  07FD  120A  118A  2F90   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	cstackCOMMON
   269  0070                     __pcstackCOMMON:	
   270  0070                     ?_Lcd_SetBit:	
   271  0070                     ??_Lcd_SetBit:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_Lcd_Cmd:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_Lcd_Clear:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_Lcd_Start:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_Lcd_Print_Char:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_Lcd_Print_String:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     Lcd_SetBit@data_bit:	
   293                           ; 2 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	1
   298  0071                     ??_Lcd_Cmd:	
   299  0071                     ??_Lcd_Print_Char:	
   300                           ; 1 bytes @ 0x1
   301                           
   302                           
   303                           ; 1 bytes @ 0x1
   304  0071                     	ds	1
   305  0072                     Lcd_Print_Char@Lower_Nibble:	
   306                           
   307                           ; 1 bytes @ 0x2
   308  0072                     	ds	1
   309  0073                     Lcd_Cmd@a:	
   310  0073                     Lcd_Print_Char@Upper_Nibble:	
   311                           ; 1 bytes @ 0x3
   312                           
   313                           
   314                           ; 1 bytes @ 0x3
   315  0073                     	ds	1
   316  0074                     ??_Lcd_Clear:	
   317  0074                     ?_Lcd_Set_Cursor:	
   318                           ; 1 bytes @ 0x4
   319                           
   320  0074                     ??_Lcd_Start:	
   321                           ; 1 bytes @ 0x4
   322                           
   323  0074                     Lcd_Set_Cursor@column:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     Lcd_Print_Char@data:	
   327                           ; 1 bytes @ 0x4
   328                           
   329                           
   330                           ; 1 bytes @ 0x4
   331  0074                     	ds	1
   332  0075                     ??_Lcd_Set_Cursor:	
   333  0075                     ??_Lcd_Print_String:	
   334                           ; 1 bytes @ 0x5
   335                           
   336  0075                     Lcd_Print_String@i:	
   337                           ; 1 bytes @ 0x5
   338                           
   339                           
   340                           ; 2 bytes @ 0x5
   341  0075                     	ds	2
   342  0077                     Lcd_Set_Cursor@row:	
   343  0077                     Lcd_Print_String@a:	
   344                           ; 1 bytes @ 0x7
   345                           
   346                           
   347                           ; 1 bytes @ 0x7
   348  0077                     	ds	1
   349  0078                     Lcd_Set_Cursor@z:	
   350                           
   351                           ; 1 bytes @ 0x8
   352  0078                     	ds	1
   353  0079                     Lcd_Set_Cursor@y:	
   354                           
   355                           ; 1 bytes @ 0x9
   356  0079                     	ds	1
   357  007A                     Lcd_Set_Cursor@temp:	
   358                           
   359                           ; 1 bytes @ 0xA
   360  007A                     	ds	1
   361  007B                     ??_main:	
   362                           
   363                           ; 1 bytes @ 0xB
   364  007B                     	ds	3
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     main@ia:	
   369                           
   370                           ; 2 bytes @ 0x0
   371  0020                     	ds	2
   372                           
   373                           	psect	maintext
   374  0790                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 21 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  ia              2    0[BANK0 ] int 
   385 ;;  a               2    0        unsigned int 
   386 ;; Return value:  Size  Location     Type
   387 ;;                  2   55[None  ] int 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : B00/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       2       0       0       0
   397 ;;      Temps:          3       0       0       0       0
   398 ;;      Totals:         3       2       0       0       0
   399 ;;Total ram usage:        5 bytes
   400 ;; Hardware stack levels required when called:    3
   401 ;; This function calls:
   402 ;;		_Lcd_Clear
   403 ;;		_Lcd_Print_String
   404 ;;		_Lcd_Set_Cursor
   405 ;;		_Lcd_Start
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _main
   413  0790                     _main:	
   414  0790                     l822:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;main.c: 23:         }
   420  0790  3001               	movlw	1
   421  0791  1283               	bcf	3,5	;RP0=0, select bank0
   422  0792  1303               	bcf	3,6	;RP1=0, select bank0
   423  0793  00A0               	movwf	main@ia
   424  0794  3000               	movlw	0
   425  0795  00A1               	movwf	main@ia+1
   426  0796                     l824:	
   427                           
   428                           ;main.c: 24:         else{;main.c: 25: 
   429  0796  1683               	bsf	3,5	;RP0=1, select bank1
   430  0797  1303               	bcf	3,6	;RP1=0, select bank1
   431  0798  0188               	clrf	8	;volatile
   432  0799                     l826:	
   433                           
   434                           ;main.c: 26:             Lcd_Set_Cursor(2,ia);
   435  0799  120A  118A  2701  120A  118A  	fcall	_Lcd_Start
   436  079E                     l828:	
   437                           
   438                           ;main.c: 30:     }
   439  079E  3001               	movlw	1
   440  079F  1283               	bcf	3,5	;RP0=0, select bank0
   441  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   442  07A1  07A0               	addwf	main@ia,f
   443  07A2  1803               	skipnc
   444  07A3  0AA1               	incf	main@ia+1,f
   445  07A4  3000               	movlw	0
   446  07A5  07A1               	addwf	main@ia+1,f
   447  07A6                     l830:	
   448                           
   449                           ;main.c: 31:     return 0;
   450  07A6  300F               	movlw	15
   451  07A7  0620               	xorwf	main@ia,w
   452  07A8  0421               	iorwf	main@ia+1,w
   453  07A9  1D03               	btfss	3,2
   454  07AA  2FAC               	goto	u231
   455  07AB  2FAD               	goto	u230
   456  07AC                     u231:	
   457  07AC  2FB1               	goto	l834
   458  07AD                     u230:	
   459  07AD                     l832:	
   460                           
   461                           ;main.c: 32: }
   462  07AD  3001               	movlw	1
   463  07AE  00A0               	movwf	main@ia
   464  07AF  3000               	movlw	0
   465  07B0  00A1               	movwf	main@ia+1
   466  07B1                     l834:	
   467  07B1  120A  118A  2668  120A  118A  	fcall	_Lcd_Clear
   468  07B6                     l836:	
   469  07B6  01F4               	clrf	Lcd_Set_Cursor@column
   470  07B7  0AF4               	incf	Lcd_Set_Cursor@column,f
   471  07B8  3001               	movlw	1
   472  07B9  120A  118A  273E  120A  118A  	fcall	_Lcd_Set_Cursor
   473  07BE                     l838:	
   474  07BE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   475  07BF  120A  118A  26B1  120A  118A  	fcall	_Lcd_Print_String
   476  07C4                     l840:	
   477  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   478  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   479  07C6  1820               	btfsc	main@ia,0
   480  07C7  2FC9               	goto	u241
   481  07C8  2FCA               	goto	u240
   482  07C9                     u241:	
   483  07C9  2FE8               	goto	l848
   484  07CA                     u240:	
   485  07CA                     l842:	
   486  07CA  0820               	movf	main@ia,w
   487  07CB  00FB               	movwf	??_main
   488  07CC  087B               	movf	??_main,w
   489  07CD  00F4               	movwf	Lcd_Set_Cursor@column
   490  07CE  3002               	movlw	2
   491  07CF  120A  118A  273E  120A  118A  	fcall	_Lcd_Set_Cursor
   492  07D4                     l844:	
   493  07D4  3012               	movlw	(low (((STR_3+2)-__stringbase)| (0+32768)))& (0+255)
   494  07D5  120A  118A  26B1  120A  118A  	fcall	_Lcd_Print_String
   495  07DA                     l846:	
   496  07DA  300B               	movlw	11
   497  07DB  00FD               	movwf	??_main+2
   498  07DC  3026               	movlw	38
   499  07DD  00FC               	movwf	??_main+1
   500  07DE  305D               	movlw	93
   501  07DF  00FB               	movwf	??_main
   502  07E0                     u257:	
   503  07E0  0BFB               	decfsz	??_main,f
   504  07E1  2FE0               	goto	u257
   505  07E2  0BFC               	decfsz	??_main+1,f
   506  07E3  2FE0               	goto	u257
   507  07E4  0BFD               	decfsz	??_main+2,f
   508  07E5  2FE0               	goto	u257
   509  07E6  2FE7               	nop2
   510  07E7  2F9E               	goto	l828
   511  07E8                     l848:	
   512  07E8  0820               	movf	main@ia,w
   513  07E9  00FB               	movwf	??_main
   514  07EA  087B               	movf	??_main,w
   515  07EB  00F4               	movwf	Lcd_Set_Cursor@column
   516  07EC  3002               	movlw	2
   517  07ED  120A  118A  273E  120A  118A  	fcall	_Lcd_Set_Cursor
   518  07F2                     l850:	
   519  07F2  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   520  07F3  120A  118A  26B1  120A  118A  	fcall	_Lcd_Print_String
   521  07F8  2FDA               	goto	l846
   522  07F9  120A  118A  2800   	ljmp	start
   523  07FC                     __end_of_main:	
   524                           
   525                           	psect	text1
   526  0701                     __ptext1:	
   527 ;; *************** function _Lcd_Start *****************
   528 ;; Defined at:
   529 ;;		line 72 in file "./LCD_driver.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    2
   550 ;; This function calls:
   551 ;;		_Lcd_Cmd
   552 ;;		_Lcd_SetBit
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _Lcd_Start
   560  0701                     _Lcd_Start:	
   561  0701                     l812:	
   562                           ;incstack = 0
   563                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;./LCD_driver.c: 75:   Lcd_SetBit(0x00);
   567  0701  3000               	movlw	0
   568  0702  120A  118A  268F  120A  118A  	fcall	_Lcd_SetBit
   569                           
   570                           ;./LCD_driver.c: 79:   Lcd_Cmd(0x03);
   571  0707  3003               	movlw	3
   572  0708  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   573                           
   574                           ;./LCD_driver.c: 81:   Lcd_Cmd(0x03);
   575  070D  3003               	movlw	3
   576  070E  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   577                           
   578                           ;./LCD_driver.c: 82:   Lcd_Cmd(0x02);
   579  0713  3002               	movlw	2
   580  0714  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   581                           
   582                           ;./LCD_driver.c: 83:   Lcd_Cmd(0x02);
   583  0719  3002               	movlw	2
   584  071A  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   585                           
   586                           ;./LCD_driver.c: 84:   Lcd_Cmd(0x08);
   587  071F  3008               	movlw	8
   588  0720  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   589                           
   590                           ;./LCD_driver.c: 85:   Lcd_Cmd(0x00);
   591  0725  3000               	movlw	0
   592  0726  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   593                           
   594                           ;./LCD_driver.c: 86:   Lcd_Cmd(0x0C);
   595  072B  300C               	movlw	12
   596  072C  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   597                           
   598                           ;./LCD_driver.c: 87:   Lcd_Cmd(0x00);
   599  0731  3000               	movlw	0
   600  0732  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   601                           
   602                           ;./LCD_driver.c: 88:   Lcd_Cmd(0x06);
   603  0737  3006               	movlw	6
   604  0738  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   605  073D                     l42:	
   606  073D  0008               	return
   607  073E                     __end_of_Lcd_Start:	
   608                           
   609                           	psect	text2
   610  073E                     __ptext2:	
   611 ;; *************** function _Lcd_Set_Cursor *****************
   612 ;; Defined at:
   613 ;;		line 51 in file "./LCD_driver.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  row             1    wreg     unsigned char 
   616 ;;  column          1    4[COMMON] unsigned char 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  row             1    7[COMMON] unsigned char 
   619 ;;  temp            1   10[COMMON] unsigned char 
   620 ;;  y               1    9[COMMON] unsigned char 
   621 ;;  z               1    8[COMMON] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         1       0       0       0       0
   632 ;;      Locals:         4       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0
   634 ;;      Totals:         7       0       0       0       0
   635 ;;Total ram usage:        7 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    2
   638 ;; This function calls:
   639 ;;		_Lcd_Cmd
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _Lcd_Set_Cursor
   647  073E                     _Lcd_Set_Cursor:	
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   651                           ;Lcd_Set_Cursor@row stored from wreg
   652  073E  00F7               	movwf	Lcd_Set_Cursor@row
   653  073F                     l792:	
   654                           
   655                           ;./LCD_driver.c: 51: void Lcd_Set_Cursor(char row, char column);./LCD_driver.c: 52: {;./
      +                          LCD_driver.c: 53:     char temp,z,y;;./LCD_driver.c: 54:     if(row == 1)
   656  073F  0377               	decf	Lcd_Set_Cursor@row,w
   657  0740  1D03               	btfss	3,2
   658  0741  2F43               	goto	u181
   659  0742  2F44               	goto	u180
   660  0743                     u181:	
   661  0743  2F67               	goto	l802
   662  0744                     u180:	
   663  0744                     l794:	
   664                           
   665                           ;./LCD_driver.c: 55:     {;./LCD_driver.c: 56:         temp = 0x80 + column - 1;
   666  0744  0874               	movf	Lcd_Set_Cursor@column,w
   667  0745  3E7F               	addlw	127
   668  0746  00F5               	movwf	??_Lcd_Set_Cursor
   669  0747  0875               	movf	??_Lcd_Set_Cursor,w
   670  0748  00FA               	movwf	Lcd_Set_Cursor@temp
   671                           
   672                           ;./LCD_driver.c: 57:         z = temp>>4;
   673  0749  087A               	movf	Lcd_Set_Cursor@temp,w
   674  074A  00F5               	movwf	??_Lcd_Set_Cursor
   675  074B  3004               	movlw	4
   676  074C                     u195:	
   677  074C  1003               	clrc
   678  074D  0CF5               	rrf	??_Lcd_Set_Cursor,f
   679  074E  3EFF               	addlw	-1
   680  074F  1D03               	skipz
   681  0750  2F4C               	goto	u195
   682  0751  0875               	movf	??_Lcd_Set_Cursor,w
   683  0752  00F6               	movwf	??_Lcd_Set_Cursor+1
   684  0753  0876               	movf	??_Lcd_Set_Cursor+1,w
   685  0754  00F8               	movwf	Lcd_Set_Cursor@z
   686  0755                     l796:	
   687                           
   688                           ;./LCD_driver.c: 58:         y = temp & 0x0F;
   689  0755  087A               	movf	Lcd_Set_Cursor@temp,w
   690  0756  390F               	andlw	15
   691  0757  00F5               	movwf	??_Lcd_Set_Cursor
   692  0758  0875               	movf	??_Lcd_Set_Cursor,w
   693  0759  00F9               	movwf	Lcd_Set_Cursor@y
   694  075A                     l798:	
   695                           
   696                           ;./LCD_driver.c: 59:         Lcd_Cmd(z);
   697  075A  0878               	movf	Lcd_Set_Cursor@z,w
   698  075B  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   699  0760                     l800:	
   700                           
   701                           ;./LCD_driver.c: 60:         Lcd_Cmd(y);
   702  0760  0879               	movf	Lcd_Set_Cursor@y,w
   703  0761  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   704                           
   705                           ;./LCD_driver.c: 61:     }
   706  0766  2F8F               	goto	l39
   707  0767                     l802:	
   708  0767  3002               	movlw	2
   709  0768  0677               	xorwf	Lcd_Set_Cursor@row,w
   710  0769  1D03               	btfss	3,2
   711  076A  2F6C               	goto	u201
   712  076B  2F6D               	goto	u200
   713  076C                     u201:	
   714  076C  2F8F               	goto	l39
   715  076D                     u200:	
   716  076D                     l804:	
   717                           
   718                           ;./LCD_driver.c: 63:     {;./LCD_driver.c: 64:         temp = 0xC0 + column - 1;
   719  076D  0874               	movf	Lcd_Set_Cursor@column,w
   720  076E  3EBF               	addlw	191
   721  076F  00F5               	movwf	??_Lcd_Set_Cursor
   722  0770  0875               	movf	??_Lcd_Set_Cursor,w
   723  0771  00FA               	movwf	Lcd_Set_Cursor@temp
   724                           
   725                           ;./LCD_driver.c: 65:         z = temp>>4;
   726  0772  087A               	movf	Lcd_Set_Cursor@temp,w
   727  0773  00F5               	movwf	??_Lcd_Set_Cursor
   728  0774  3004               	movlw	4
   729  0775                     u215:	
   730  0775  1003               	clrc
   731  0776  0CF5               	rrf	??_Lcd_Set_Cursor,f
   732  0777  3EFF               	addlw	-1
   733  0778  1D03               	skipz
   734  0779  2F75               	goto	u215
   735  077A  0875               	movf	??_Lcd_Set_Cursor,w
   736  077B  00F6               	movwf	??_Lcd_Set_Cursor+1
   737  077C  0876               	movf	??_Lcd_Set_Cursor+1,w
   738  077D  00F8               	movwf	Lcd_Set_Cursor@z
   739  077E                     l806:	
   740                           
   741                           ;./LCD_driver.c: 66:         y = temp & 0x0F;
   742  077E  087A               	movf	Lcd_Set_Cursor@temp,w
   743  077F  390F               	andlw	15
   744  0780  00F5               	movwf	??_Lcd_Set_Cursor
   745  0781  0875               	movf	??_Lcd_Set_Cursor,w
   746  0782  00F9               	movwf	Lcd_Set_Cursor@y
   747  0783                     l808:	
   748                           
   749                           ;./LCD_driver.c: 67:         Lcd_Cmd(z);
   750  0783  0878               	movf	Lcd_Set_Cursor@z,w
   751  0784  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   752  0789                     l810:	
   753                           
   754                           ;./LCD_driver.c: 68:         Lcd_Cmd(y);
   755  0789  0879               	movf	Lcd_Set_Cursor@y,w
   756  078A  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   757  078F                     l39:	
   758  078F  0008               	return
   759  0790                     __end_of_Lcd_Set_Cursor:	
   760                           
   761                           	psect	text3
   762  06B1                     __ptext3:	
   763 ;; *************** function _Lcd_Print_String *****************
   764 ;; Defined at:
   765 ;;		line 107 in file "./LCD_driver.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  a               1    wreg     PTR unsigned char 
   768 ;;		 -> STR_3(6), STR_2(4), STR_1(15), 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  a               1    7[COMMON] PTR unsigned char 
   771 ;;		 -> STR_3(6), STR_2(4), STR_1(15), 
   772 ;;  i               2    5[COMMON] int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         3       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         3       0       0       0       0
   786 ;;Total ram usage:        3 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		_Lcd_Print_Char
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _Lcd_Print_String
   798  06B1                     _Lcd_Print_String:	
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   802                           ;Lcd_Print_String@a stored from wreg
   803  06B1  00F7               	movwf	Lcd_Print_String@a
   804  06B2                     l814:	
   805                           
   806                           ;./LCD_driver.c: 107: void Lcd_Print_String(char *a);./LCD_driver.c: 108: {;./LCD_driver
      +                          .c: 109:     int i;;./LCD_driver.c: 110:     for(i=0;a[i]!='\0';i++)
   807  06B2  01F5               	clrf	Lcd_Print_String@i
   808  06B3  01F6               	clrf	Lcd_Print_String@i+1
   809  06B4  2EC8               	goto	l820
   810  06B5                     l816:	
   811                           
   812                           ;./LCD_driver.c: 111:        Lcd_Print_Char(a[i]);
   813  06B5  0875               	movf	Lcd_Print_String@i,w
   814  06B6  0777               	addwf	Lcd_Print_String@a,w
   815  06B7  0084               	movwf	4
   816  06B8  120A  118A  2003  120A  118A  	fcall	stringdir
   817  06BD  120A  118A  26D6  120A  118A  	fcall	_Lcd_Print_Char
   818  06C2                     l818:	
   819  06C2  3001               	movlw	1
   820  06C3  07F5               	addwf	Lcd_Print_String@i,f
   821  06C4  1803               	skipnc
   822  06C5  0AF6               	incf	Lcd_Print_String@i+1,f
   823  06C6  3000               	movlw	0
   824  06C7  07F6               	addwf	Lcd_Print_String@i+1,f
   825  06C8                     l820:	
   826  06C8  0875               	movf	Lcd_Print_String@i,w
   827  06C9  0777               	addwf	Lcd_Print_String@a,w
   828  06CA  0084               	movwf	4
   829  06CB  120A  118A  2003  120A  118A  	fcall	stringdir
   830  06D0  3A00               	xorlw	0
   831  06D1  1D03               	skipz
   832  06D2  2ED4               	goto	u221
   833  06D3  2ED5               	goto	u220
   834  06D4                     u221:	
   835  06D4  2EB5               	goto	l816
   836  06D5                     u220:	
   837  06D5                     l51:	
   838  06D5  0008               	return
   839  06D6                     __end_of_Lcd_Print_String:	
   840                           
   841                           	psect	text4
   842  06D6                     __ptext4:	
   843 ;; *************** function _Lcd_Print_Char *****************
   844 ;; Defined at:
   845 ;;		line 91 in file "./LCD_driver.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  data            1    wreg     unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  data            1    4[COMMON] unsigned char 
   850 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
   851 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         3       0       0       0       0
   863 ;;      Temps:          1       0       0       0       0
   864 ;;      Totals:         4       0       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		_Lcd_SetBit
   870 ;; This function is called by:
   871 ;;		_Lcd_Print_String
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _Lcd_Print_Char
   877  06D6                     _Lcd_Print_Char:	
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+pclath+cstack]
   881                           ;Lcd_Print_Char@data stored from wreg
   882  06D6  00F4               	movwf	Lcd_Print_Char@data
   883  06D7                     l774:	
   884                           
   885                           ;./LCD_driver.c: 91: void Lcd_Print_Char(char data);./LCD_driver.c: 92: {;./LCD_driver.c
      +                          : 93:    char Lower_Nibble,Upper_Nibble;;./LCD_driver.c: 94:    Lower_Nibble = data&0x0F
      +                          ;
   886  06D7  0874               	movf	Lcd_Print_Char@data,w
   887  06D8  390F               	andlw	15
   888  06D9  00F1               	movwf	??_Lcd_Print_Char
   889  06DA  0871               	movf	??_Lcd_Print_Char,w
   890  06DB  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
   891                           
   892                           ;./LCD_driver.c: 95:    Upper_Nibble = data&0xF0;
   893  06DC  0874               	movf	Lcd_Print_Char@data,w
   894  06DD  39F0               	andlw	240
   895  06DE  00F1               	movwf	??_Lcd_Print_Char
   896  06DF  0871               	movf	??_Lcd_Print_Char,w
   897  06E0  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
   898  06E1                     l776:	
   899                           
   900                           ;./LCD_driver.c: 96:    RD2 = 1;
   901  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   902  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   903  06E3  1508               	bsf	8,2	;volatile
   904  06E4                     l778:	
   905                           
   906                           ;./LCD_driver.c: 97:    Lcd_SetBit(Upper_Nibble>>4);
   907  06E4  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
   908  06E5  00F1               	movwf	??_Lcd_Print_Char
   909  06E6  3004               	movlw	4
   910  06E7                     u175:	
   911  06E7  1003               	clrc
   912  06E8  0CF1               	rrf	??_Lcd_Print_Char,f
   913  06E9  3EFF               	addlw	-1
   914  06EA  1D03               	skipz
   915  06EB  2EE7               	goto	u175
   916  06EC  0871               	movf	??_Lcd_Print_Char,w
   917  06ED  120A  118A  268F  120A  118A  	fcall	_Lcd_SetBit
   918  06F2                     l780:	
   919                           
   920                           ;./LCD_driver.c: 98:    RD3 = 1;
   921  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   922  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   923  06F4  1588               	bsf	8,3	;volatile
   924  06F5                     l782:	
   925                           
   926                           ;./LCD_driver.c: 100:    RD3 = 0;
   927  06F5  1188               	bcf	8,3	;volatile
   928  06F6                     l784:	
   929                           
   930                           ;./LCD_driver.c: 101:    Lcd_SetBit(Lower_Nibble);
   931  06F6  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
   932  06F7  120A  118A  268F  120A  118A  	fcall	_Lcd_SetBit
   933  06FC                     l786:	
   934                           
   935                           ;./LCD_driver.c: 102:    RD3 = 1;
   936  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   937  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   938  06FE  1588               	bsf	8,3	;volatile
   939  06FF                     l788:	
   940                           
   941                           ;./LCD_driver.c: 104:    RD3 = 0;
   942  06FF  1188               	bcf	8,3	;volatile
   943  0700                     l45:	
   944  0700  0008               	return
   945  0701                     __end_of_Lcd_Print_Char:	
   946                           
   947                           	psect	text5
   948  0668                     __ptext5:	
   949 ;; *************** function _Lcd_Clear *****************
   950 ;; Defined at:
   951 ;;		line 44 in file "./LCD_driver.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, pclath, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0
   968 ;;      Totals:         0       0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    2
   972 ;; This function calls:
   973 ;;		_Lcd_Cmd
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _Lcd_Clear
   981  0668                     _Lcd_Clear:	
   982  0668                     l790:	
   983                           ;incstack = 0
   984                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   985                           
   986                           
   987                           ;./LCD_driver.c: 46:     Lcd_Cmd(0x00);
   988  0668  3000               	movlw	0
   989  0669  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   990                           
   991                           ;./LCD_driver.c: 47:     Lcd_Cmd(0x01);
   992  066E  3001               	movlw	1
   993  066F  120A  118A  2675  120A  118A  	fcall	_Lcd_Cmd
   994  0674                     l33:	
   995  0674  0008               	return
   996  0675                     __end_of_Lcd_Clear:	
   997                           
   998                           	psect	text6
   999  0675                     __ptext6:	
  1000 ;; *************** function _Lcd_Cmd *****************
  1001 ;; Defined at:
  1002 ;;		line 35 in file "./LCD_driver.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  a               1    wreg     unsigned char 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  a               1    3[COMMON] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         1       0       0       0       0
  1018 ;;      Temps:          2       0       0       0       0
  1019 ;;      Totals:         3       0       0       0       0
  1020 ;;Total ram usage:        3 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		_Lcd_SetBit
  1025 ;; This function is called by:
  1026 ;;		_Lcd_Clear
  1027 ;;		_Lcd_Set_Cursor
  1028 ;;		_Lcd_Start
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _Lcd_Cmd
  1034  0675                     _Lcd_Cmd:	
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1038                           ;Lcd_Cmd@a stored from wreg
  1039  0675  00F3               	movwf	Lcd_Cmd@a
  1040  0676                     l764:	
  1041                           
  1042                           ;./LCD_driver.c: 35: void Lcd_Cmd(char a);./LCD_driver.c: 36: {;./LCD_driver.c: 37:     
      +                          RD2 = 0;
  1043  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0678  1108               	bcf	8,2	;volatile
  1046  0679                     l766:	
  1047                           
  1048                           ;./LCD_driver.c: 38:     Lcd_SetBit(a);
  1049  0679  0873               	movf	Lcd_Cmd@a,w
  1050  067A  120A  118A  268F  120A  118A  	fcall	_Lcd_SetBit
  1051  067F                     l768:	
  1052                           
  1053                           ;./LCD_driver.c: 39:     RD3 = 1;
  1054  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0681  1588               	bsf	8,3	;volatile
  1057  0682                     l770:	
  1058                           
  1059                           ;./LCD_driver.c: 40:     _delay((unsigned long)((2)*(80000000/4000.0)));
  1060  0682  3034               	movlw	52
  1061  0683  00F2               	movwf	??_Lcd_Cmd+1
  1062  0684  30F1               	movlw	241
  1063  0685  00F1               	movwf	??_Lcd_Cmd
  1064  0686                     u267:	
  1065  0686  0BF1               	decfsz	??_Lcd_Cmd,f
  1066  0687  2E86               	goto	u267
  1067  0688  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1068  0689  2E86               	goto	u267
  1069  068A  2E8B               	nop2
  1070  068B                     l772:	
  1071                           
  1072                           ;./LCD_driver.c: 41:     RD3 = 0;
  1073  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1074  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1075  068D  1188               	bcf	8,3	;volatile
  1076  068E                     l30:	
  1077  068E  0008               	return
  1078  068F                     __end_of_Lcd_Cmd:	
  1079                           
  1080                           	psect	text7
  1081  068F                     __ptext7:	
  1082 ;; *************** function _Lcd_SetBit *****************
  1083 ;; Defined at:
  1084 ;;		line 12 in file "./LCD_driver.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  data_bit        1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  data_bit        1    0[COMMON] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         1       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0
  1101 ;;      Totals:         1       0       0       0       0
  1102 ;;Total ram usage:        1 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_Lcd_Cmd
  1108 ;;		_Lcd_Start
  1109 ;;		_Lcd_Print_Char
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _Lcd_SetBit
  1115  068F                     _Lcd_SetBit:	
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _Lcd_SetBit: [wreg]
  1119                           ;Lcd_SetBit@data_bit stored from wreg
  1120  068F  00F0               	movwf	Lcd_SetBit@data_bit
  1121  0690                     l754:	
  1122                           
  1123                           ;./LCD_driver.c: 12: void Lcd_SetBit(char data_bit);./LCD_driver.c: 13: {;./LCD_driver.c
      +                          : 14:     if(data_bit & 1)
  1124  0690  1C70               	btfss	Lcd_SetBit@data_bit,0
  1125  0691  2E93               	goto	u131
  1126  0692  2E94               	goto	u130
  1127  0693                     u131:	
  1128  0693  2E98               	goto	l19
  1129  0694                     u130:	
  1130  0694                     l756:	
  1131                           
  1132                           ;./LCD_driver.c: 15:         RD4 = 1;
  1133  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0696  1608               	bsf	8,4	;volatile
  1136  0697  2E9B               	goto	l20
  1137  0698                     l19:	
  1138                           ;./LCD_driver.c: 16:     else
  1139                           
  1140                           
  1141                           ;./LCD_driver.c: 17:         RD4 = 0;
  1142  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1144  069A  1208               	bcf	8,4	;volatile
  1145  069B                     l20:	
  1146                           
  1147                           ;./LCD_driver.c: 19:     if(data_bit & 2)
  1148  069B  1CF0               	btfss	Lcd_SetBit@data_bit,1
  1149  069C  2E9E               	goto	u141
  1150  069D  2E9F               	goto	u140
  1151  069E                     u141:	
  1152  069E  2EA1               	goto	l21
  1153  069F                     u140:	
  1154  069F                     l758:	
  1155                           
  1156                           ;./LCD_driver.c: 20:         RD5 = 1;
  1157  069F  1688               	bsf	8,5	;volatile
  1158  06A0  2EA2               	goto	l22
  1159  06A1                     l21:	
  1160                           ;./LCD_driver.c: 21:     else
  1161                           
  1162                           
  1163                           ;./LCD_driver.c: 22:         RD5 = 0;
  1164  06A1  1288               	bcf	8,5	;volatile
  1165  06A2                     l22:	
  1166                           
  1167                           ;./LCD_driver.c: 24:     if(data_bit & 4)
  1168  06A2  1D70               	btfss	Lcd_SetBit@data_bit,2
  1169  06A3  2EA5               	goto	u151
  1170  06A4  2EA6               	goto	u150
  1171  06A5                     u151:	
  1172  06A5  2EA8               	goto	l23
  1173  06A6                     u150:	
  1174  06A6                     l760:	
  1175                           
  1176                           ;./LCD_driver.c: 25:         RD6 = 1;
  1177  06A6  1708               	bsf	8,6	;volatile
  1178  06A7  2EA9               	goto	l24
  1179  06A8                     l23:	
  1180                           ;./LCD_driver.c: 26:     else
  1181                           
  1182                           
  1183                           ;./LCD_driver.c: 27:         RD6 = 0;
  1184  06A8  1308               	bcf	8,6	;volatile
  1185  06A9                     l24:	
  1186                           
  1187                           ;./LCD_driver.c: 29:     if(data_bit & 8)
  1188  06A9  1DF0               	btfss	Lcd_SetBit@data_bit,3
  1189  06AA  2EAC               	goto	u161
  1190  06AB  2EAD               	goto	u160
  1191  06AC                     u161:	
  1192  06AC  2EAF               	goto	l25
  1193  06AD                     u160:	
  1194  06AD                     l762:	
  1195                           
  1196                           ;./LCD_driver.c: 30:         RD7 = 1;
  1197  06AD  1788               	bsf	8,7	;volatile
  1198  06AE  2EB0               	goto	l27
  1199  06AF                     l25:	
  1200                           ;./LCD_driver.c: 31:     else
  1201                           
  1202                           
  1203                           ;./LCD_driver.c: 32:         RD7 = 0;
  1204  06AF  1388               	bcf	8,7	;volatile
  1205  06B0                     l27:	
  1206  06B0  0008               	return
  1207  06B1                     __end_of_Lcd_SetBit:	
  1208  007E                     btemp	set	126	;btemp
  1209  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1374
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            0     0      0     198
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     367
                                              5 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 22 15:40:08 2019

                         pc 0002                 __CFG_CP$OFF 0000                          l20 069B  
                        l21 06A1                          l22 06A2                          l30 068E  
                        l23 06A8                          l24 06A9                          l25 06AF  
                        l33 0674                          l42 073D                          l27 06B0  
                        l19 0698                          l51 06D5                          l45 0700  
                        l39 078F                          fsr 0004                         l800 0760  
                       l810 0789                         l802 0767                         l820 06C8  
                       l804 076D                         l812 0701                         l814 06B2  
                       l806 077E                         l830 07A6                         l822 0790  
                       l760 06A6                         l816 06B5                         l808 0783  
                       l840 07C4                         l832 07AD                         l824 0796  
                       l762 06AD                         l754 0690                         l770 0682  
                       l818 06C2                         l850 07F2                         l842 07CA  
                       l834 07B1                         l826 0799                         l756 0694  
                       l772 068B                         l764 0676                         l780 06F2  
                       l844 07D4                         l836 07B6                         l828 079E  
                       l758 069F                         l766 0679                         l790 0668  
                       l782 06F5                         l774 06D7                         l846 07DA  
                       l838 07BE                         l768 067F                         l784 06F6  
                       l776 06E1                         l792 073F                         l848 07E8  
                       l786 06FC                         l778 06E4                         l794 0744  
                       l788 06FF                         l796 0755                         l798 075A  
                       _RD2 0042                         _RD3 0043                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       u200 076D                         u201 076C                         u130 0694  
                       u131 0693                         u140 069F                         u220 06D5  
                       u141 069E                         u221 06D4                         u150 06A6  
                       u230 07AD                         u151 06A5                         u215 0775  
                       u231 07AC                         u160 06AD                         u240 07CA  
                       u161 06AC                         u241 07C9                         u180 0744  
                       u181 0743                         u175 06E7                         u257 07E0  
              __CFG_CPD$OFF 0000                         u267 0686                         u195 074C  
                       fsr0 0004                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
                      STR_1 0009                        STR_2 001A                        STR_3 0018  
              __CFG_WRT$OFF 0000                        _main 0790                        btemp 007E  
             __CFG_BOREN$ON 0000                        start 0000          Lcd_Print_Char@data 0074  
           __end_of_Lcd_Cmd 068F                  _Lcd_SetBit 068F                       ?_main 0070  
             __CFG_WDTE$OFF 0000     __size_of_Lcd_Set_Cursor 0052                       _TRISD 0088  
             __CFG_PWRTE$ON 0000                       pclath 000A   __size_of_Lcd_Print_String 0025  
                     status 0003                       wtemp0 007E     __size_of_Lcd_Print_Char 002B  
           __initialization 07FC                __end_of_main 07FC                      ??_main 007B  
        __size_of_Lcd_Clear 000D          __size_of_Lcd_Start 003D                   ??_Lcd_Cmd 0071  
               ?_Lcd_SetBit 0070                      main@ia 0020             Lcd_Set_Cursor@y 0079  
           Lcd_Set_Cursor@z 0078     __end_of__initialization 07FC           __end_of_Lcd_Clear 0675  
         __end_of_Lcd_Start 073E              __pcstackCOMMON 0070              _Lcd_Set_Cursor 073E  
          _Lcd_Print_String 06B1         __size_of_Lcd_SetBit 0022              _Lcd_Print_Char 06D6  
                __pmaintext 0790          Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 0790  
                __stringtab 0003                     _Lcd_Cmd 0675      __end_of_Lcd_Print_Char 0701  
           ?_Lcd_Set_Cursor 0074                     __ptext1 0701                     __ptext2 073E  
                   __ptext3 06B1                     __ptext4 06D6                     __ptext5 0668  
                   __ptext6 0675                     __ptext7 068F        end_of_initialization 07FC  
           ?_Lcd_Print_Char 0070                ??_Lcd_SetBit 0070          __end_of_Lcd_SetBit 06B1  
                 _Lcd_Clear 0668                   _Lcd_Start 0701    __end_of_Lcd_Print_String 06D6  
       start_initialization 07FC           Lcd_Print_String@a 0077           Lcd_Print_String@i 0075  
                ?_Lcd_Clear 0070                  ?_Lcd_Start 0070  Lcd_Print_Char@Lower_Nibble 0072  
                 ___latbits 0002               __pcstackBANK0 0020                    ?_Lcd_Cmd 0070  
          ??_Lcd_Set_Cursor 0075                   __pstrings 0003            ??_Lcd_Print_Char 0071  
                  Lcd_Cmd@a 0073                 ??_Lcd_Clear 0074                 ??_Lcd_Start 0074  
               __stringbase 0008        Lcd_Set_Cursor@column 0074            __size_of_Lcd_Cmd 001A  
        __end_of__stringtab 0009           ?_Lcd_Print_String 0070          ??_Lcd_Print_String 0075  
             __size_of_main 006C  Lcd_Print_Char@Upper_Nibble 0073                   stringcode 0003  
        Lcd_Set_Cursor@temp 007A                    stringdir 0003                    stringtab 0003  
         Lcd_Set_Cursor@row 0077  
